Search.setIndex({"docnames": ["generated/draugr", "generated/draugr.dist_is_editable", "generated/draugr.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "generated/draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "generated/draugr.dlib_utilities.exclude", "generated/draugr.dlib_utilities.exclude.flags", "generated/draugr.dlib_utilities.exclude.flags.TupleFlag", "generated/draugr.dlib_utilities.facealigner", "generated/draugr.dlib_utilities.facealigner.align_face", "generated/draugr.drawers", "generated/draugr.drawers.drawer", "generated/draugr.drawers.drawer.Drawer", "generated/draugr.drawers.mpl_drawers", "generated/draugr.drawers.mpl_drawers.discrete_scroll_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "generated/draugr.drawers.mpl_drawers.image_stream_plot", "generated/draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "generated/draugr.drawers.mpl_drawers.mpldrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "generated/draugr.drawers.mpl_drawers.series_scroll_plot", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "generated/draugr.drawers.mpl_drawers.spectral", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "generated/draugr.drawers.opencv_drawers", "generated/draugr.drawers.opencv_drawers.opencv_image_stream", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "generated/draugr.drawers.terminal", "generated/draugr.drawers.terminal.terminal_image_renderer", "generated/draugr.drawers.terminal.terminal_image_renderer.render_file", "generated/draugr.drawers.terminal.terminal_image_renderer.terminal_render_image", "generated/draugr.drawers.terminal.terminal_image_renderer.terminalise_image", "generated/draugr.drawers.terminal.terminal_plot", "generated/draugr.drawers.terminal.terminal_plotter", "generated/draugr.drawers.terminal.terminal_utilities", "generated/draugr.drawers.terminal.terminal_utilities.scale", "generated/draugr.entry_points", "generated/draugr.entry_points.cpu_usage_entry_point", "generated/draugr.entry_points.cpu_usage_entry_point.main", "generated/draugr.entry_points.tensorboard_entry_point", "generated/draugr.entry_points.tensorboard_entry_point.main", "generated/draugr.entry_points.toggle_darkmode", "generated/draugr.entry_points.toggle_darkmode.main", "generated/draugr.entry_points.visdom_entry_point", "generated/draugr.entry_points.visdom_entry_point.main", "generated/draugr.extensions", "generated/draugr.extensions.skimage_utilities", "generated/draugr.extensions.skimage_utilities.rgb_to_grayscale", "generated/draugr.extensions.sorcery_utilities", "generated/draugr.extensions.sorcery_utilities.lower_case_assigned_names", "generated/draugr.extensions.sorcery_utilities.upper_case_assigned_names", "generated/draugr.ffmpeg_utilities", "generated/draugr.ffmpeg_utilities.exclude", "generated/draugr.ffmpeg_utilities.extract", "generated/draugr.ffmpeg_utilities.extract.extract_frames", "generated/draugr.ffmpeg_utilities.merge", "generated/draugr.ffmpeg_utilities.merge.merge_video", "generated/draugr.ffmpeg_utilities.sequencify", "generated/draugr.ffmpeg_utilities.sequencify.sequencify_files", "generated/draugr.ffmpeg_utilities.split", "generated/draugr.ffmpeg_utilities.split.spilt_video", "generated/draugr.get_version", "generated/draugr.jax_utilities", "generated/draugr.metrics", "generated/draugr.metrics.accumulation", "generated/draugr.metrics.accumulation.lambda_accumulator", "generated/draugr.metrics.accumulation.mean_accumulator", "generated/draugr.metrics.accumulation.total_accumulator", "generated/draugr.metrics.meters", "generated/draugr.metrics.meters.AverageMeter", "generated/draugr.metrics.meters.Meter", "generated/draugr.metrics.metric_aggregator", "generated/draugr.metrics.metric_aggregator.MetricAggregator", "generated/draugr.metrics.metric_aggregator.save_metric", "generated/draugr.metrics.metric_collection", "generated/draugr.metrics.metric_collection.MetricCollection", "generated/draugr.metrics.metric_summary", "generated/draugr.metrics.metric_summary.MetricSummary", "generated/draugr.metrics.plotting", "generated/draugr.multiprocessing_utilities", "generated/draugr.multiprocessing_utilities.pooled_queue_processor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "generated/draugr.numpy_utilities", "generated/draugr.numpy_utilities.channel_transform", "generated/draugr.numpy_utilities.channel_transform.chw_to_hwc", "generated/draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "generated/draugr.numpy_utilities.channel_transform.hwc_to_chw", "generated/draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "generated/draugr.numpy_utilities.datasets", "generated/draugr.numpy_utilities.datasets.categorical", "generated/draugr.numpy_utilities.datasets.categorical.deep_category", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "generated/draugr.numpy_utilities.datasets.categorical.flat_category", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "generated/draugr.numpy_utilities.datasets.defaults", "generated/draugr.numpy_utilities.datasets.splitting", "generated/draugr.numpy_utilities.datasets.splitting.SplitEnum", "generated/draugr.numpy_utilities.datasets.splitting.SplitIndexer", "generated/draugr.numpy_utilities.datasets.splitting.select_split", "generated/draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "generated/draugr.numpy_utilities.manipulation", "generated/draugr.numpy_utilities.manipulation.MyNdArray", "generated/draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "generated/draugr.numpy_utilities.mixing", "generated/draugr.numpy_utilities.mixing.mix_channels", "generated/draugr.numpy_utilities.powers", "generated/draugr.numpy_utilities.powers.next_pow_10_numpy", "generated/draugr.numpy_utilities.powers.next_pow_2_numpy", "generated/draugr.numpy_utilities.powers.next_pow_numpy", "generated/draugr.numpy_utilities.powers.next_power_10_numpy", "generated/draugr.numpy_utilities.powers.next_power_2_numpy", "generated/draugr.numpy_utilities.raster_grid_2d_masking", "generated/draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "generated/draugr.numpy_utilities.raster_grid_3d_masking", "generated/draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "generated/draugr.numpy_utilities.resize", "generated/draugr.numpy_utilities.resize.resize_array", "generated/draugr.numpy_utilities.sampling", "generated/draugr.numpy_utilities.sampling.get_sampler", "generated/draugr.numpy_utilities.signal_utilities", "generated/draugr.numpy_utilities.signal_utilities.padding", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "generated/draugr.numpy_utilities.signal_utilities.signal_projection", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "generated/draugr.numpy_utilities.signal_utilities.truncation", "generated/draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "generated/draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "generated/draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "generated/draugr.opencv_utilities", "generated/draugr.opencv_utilities.bounding_boxes", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "generated/draugr.opencv_utilities.bounding_boxes.evaluation", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "generated/draugr.opencv_utilities.color_space", "generated/draugr.opencv_utilities.color_space.clean", "generated/draugr.opencv_utilities.color_space.clean.CleanUpMethod", "generated/draugr.opencv_utilities.color_space.clean.clean_up", "generated/draugr.opencv_utilities.color_space.color", "generated/draugr.opencv_utilities.color_space.color.is_singular_channel", "generated/draugr.opencv_utilities.color_space.color.num_channels", "generated/draugr.opencv_utilities.color_space.color.to_color", "generated/draugr.opencv_utilities.color_space.edge", "generated/draugr.opencv_utilities.color_space.edge.CannyApertureSize", "generated/draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "generated/draugr.opencv_utilities.color_space.edge.to_edge", "generated/draugr.opencv_utilities.color_space.gamma", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gray", "generated/draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "generated/draugr.opencv_utilities.color_space.gray.to_gray", "generated/draugr.opencv_utilities.color_space.noise", "generated/draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "generated/draugr.opencv_utilities.color_space.noise.noise_filter", "generated/draugr.opencv_utilities.color_space.threshold", "generated/draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "generated/draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "generated/draugr.opencv_utilities.color_space.threshold.threshold_channel", "generated/draugr.opencv_utilities.drawing", "generated/draugr.opencv_utilities.drawing.draw_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "generated/draugr.opencv_utilities.drawing.masks", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "generated/draugr.opencv_utilities.drawing.masks.segment_ellipse", "generated/draugr.opencv_utilities.drawing.opencv_draw", "generated/draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "generated/draugr.opencv_utilities.drawing.opencv_draw.find_contours", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "generated/draugr.opencv_utilities.namespaces", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "generated/draugr.opencv_utilities.namespaces.enums", "generated/draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "generated/draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.FontEnum", "generated/draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.KmeansEnum", "generated/draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "generated/draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "generated/draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "generated/draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags", "generated/draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "generated/draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "generated/draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "generated/draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "generated/draugr.opencv_utilities.raster_sequences", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "generated/draugr.opencv_utilities.raster_sequences.frames", "generated/draugr.opencv_utilities.raster_sequences.frames.frame_generator", "generated/draugr.opencv_utilities.transformation", "generated/draugr.opencv_utilities.transformation.cropping", "generated/draugr.opencv_utilities.transformation.cropping.circle_crop", "generated/draugr.opencv_utilities.transformation.cv2_transforms", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "generated/draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "generated/draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "generated/draugr.opencv_utilities.transformation.resize", "generated/draugr.opencv_utilities.transformation.resize.InterpolationEnum", "generated/draugr.opencv_utilities.transformation.resize.cv2_resize", "generated/draugr.opencv_utilities.windows", "generated/draugr.opencv_utilities.windows.color_picker", "generated/draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "generated/draugr.opencv_utilities.windows.default", "generated/draugr.opencv_utilities.windows.default.ExtensionEnum", "generated/draugr.opencv_utilities.windows.default.match_return_code", "generated/draugr.opencv_utilities.windows.elements", "generated/draugr.opencv_utilities.windows.elements.trackbar", "generated/draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "generated/draugr.opencv_utilities.windows.hough_circles", "generated/draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "generated/draugr.opencv_utilities.windows.image", "generated/draugr.opencv_utilities.windows.image.show_image", "generated/draugr.os_utilities", "generated/draugr.os_utilities.cuda_device", "generated/draugr.os_utilities.cuda_device.DeviceOrderEnum", "generated/draugr.os_utilities.cuda_device.set_cuda_device_order", "generated/draugr.os_utilities.cuda_device.set_cuda_visible_devices", "generated/draugr.os_utilities.linux_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "generated/draugr.os_utilities.linux_utilities.gtk_utilities", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "generated/draugr.os_utilities.linux_utilities.systemd_utilities", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.disable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.enable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.install_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.remove_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "generated/draugr.os_utilities.linux_utilities.user_utilities", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "generated/draugr.os_utilities.linux_utilities.user_utilities.make_user", "generated/draugr.os_utilities.linux_utilities.user_utilities.remove_user", "generated/draugr.os_utilities.platform_selection", "generated/draugr.os_utilities.platform_selection.get_backend_module", "generated/draugr.os_utilities.resource_utilities", "generated/draugr.os_utilities.resource_utilities.all", "generated/draugr.os_utilities.resource_utilities.all.get_num_instances", "generated/draugr.os_utilities.resource_utilities.cpu", "generated/draugr.os_utilities.resource_utilities.cpu.WorkerSession", "generated/draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "generated/draugr.os_utilities.resource_utilities.gpu", "generated/draugr.os_utilities.resource_utilities.ram", "generated/draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "generated/draugr.os_utilities.screen_resolution", "generated/draugr.os_utilities.screen_resolution.get_screen_resolution", "generated/draugr.os_utilities.screen_resolution.screen_res_gtk", "generated/draugr.os_utilities.screen_resolution.screen_res_mac", "generated/draugr.os_utilities.screen_resolution.screen_res_pygame", "generated/draugr.os_utilities.screen_resolution.screen_res_tk", "generated/draugr.os_utilities.screen_resolution.screen_res_win", "generated/draugr.os_utilities.screen_resolution.screen_res_xlib", "generated/draugr.os_utilities.service", "generated/draugr.os_utilities.service.add_service", "generated/draugr.os_utilities.service.remove_service", "generated/draugr.pandas_utilities", "generated/draugr.pandas_utilities.formatting", "generated/draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "generated/draugr.pandas_utilities.from_dict", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "generated/draugr.pandas_utilities.latex_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "generated/draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "generated/draugr.pandas_utilities.misc_utilities", "generated/draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "generated/draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "generated/draugr.pandas_utilities.misc_utilities.duplicate_columns", "generated/draugr.pandas_utilities.multi_index_utilities", "generated/draugr.pandas_utilities.multi_index_utilities.add_index_level", "generated/draugr.pandas_utilities.styling", "generated/draugr.pandas_utilities.styling.AttrEnum", "generated/draugr.pandas_utilities.styling.ColorEnum", "generated/draugr.pandas_utilities.styling.NDFrameExtremeEnum", "generated/draugr.pandas_utilities.styling.color_highlight_extreme", "generated/draugr.pandas_utilities.styling.color_negative_red", "generated/draugr.pygame_utilities", "generated/draugr.pygame_utilities.screen", "generated/draugr.pygame_utilities.screen.get_screen_resolution", "generated/draugr.python_utilities", "generated/draugr.python_utilities.broadcasting", "generated/draugr.python_utilities.broadcasting.BroadcastNone", "generated/draugr.python_utilities.counter_filter", "generated/draugr.python_utilities.counter_filter.CounterFilter", "generated/draugr.python_utilities.exclude", "generated/draugr.python_utilities.exclude.packages", "generated/draugr.python_utilities.exclude.packages.a", "generated/draugr.python_utilities.exclude.packages.b", "generated/draugr.python_utilities.exclude.packages.c", "generated/draugr.python_utilities.exclude.worker", "generated/draugr.python_utilities.exclude.worker.main", "generated/draugr.python_utilities.exclude.worker.spawn", "generated/draugr.python_utilities.function_wrappers", "generated/draugr.python_utilities.function_wrappers.max_frequency", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "generated/draugr.python_utilities.function_wrappers.wrap_args", "generated/draugr.python_utilities.generators", "generated/draugr.python_utilities.generators.batching_generator", "generated/draugr.python_utilities.generators.batching_generator.batch_generator", "generated/draugr.python_utilities.generators.batching_generator.random_batches", "generated/draugr.python_utilities.generators.batching_generator.shuffled_batches", "generated/draugr.python_utilities.generators.batching_generator.sized_batch", "generated/draugr.python_utilities.generators.recycling_generator", "generated/draugr.python_utilities.generators.recycling_generator.batched_recycle", "generated/draugr.python_utilities.generators.recycling_generator.recycle", "generated/draugr.python_utilities.http", "generated/draugr.python_utilities.http.HttpMethodEnum", "generated/draugr.python_utilities.sockets", "generated/draugr.python_utilities.sockets.find_unclaimed_port", "generated/draugr.python_utilities.sockets.get_host_ip", "generated/draugr.python_utilities.sockets.is_port_in_use", "generated/draugr.python_utilities.torch_like_channel_transformation", "generated/draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "generated/draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "generated/draugr.random_utilities", "generated/draugr.random_utilities.seeding", "generated/draugr.random_utilities.seeding.seed_stack", "generated/draugr.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "generated/draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "generated/draugr.scipy_utilities.signal_processing", "generated/draugr.scipy_utilities.subsampling", "generated/draugr.scipy_utilities.subsampling.fft_subsample", "generated/draugr.scipy_utilities.subsampling.fir_subsample", "generated/draugr.scipy_utilities.subsampling.mag_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.max_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.min_decimation_subsample", "generated/draugr.stopping", "generated/draugr.stopping.stopping_key", "generated/draugr.stopping.stopping_key.CaptureEarlyStop", "generated/draugr.stopping.stopping_key.add_early_stopping_key_combination", "generated/draugr.tensorboard_utilities", "generated/draugr.tensorboard_utilities.experimental", "generated/draugr.tensorboard_utilities.experimental.confusion_matrix", "generated/draugr.tensorboard_utilities.experimental.pretty_cf", "generated/draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix", "generated/draugr.tensorboard_utilities.exporting", "generated/draugr.tensorboard_utilities.exporting.db_export", "generated/draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase", "generated/draugr.tensorboard_utilities.exporting.event_export", "generated/draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter", "generated/draugr.tensorboard_utilities.exporting.file_export", "generated/draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile", "generated/draugr.threading_utilities", "generated/draugr.threading_utilities.exclude", "generated/draugr.threading_utilities.skipper", "generated/draugr.threading_utilities.skipper.Skipper", "generated/draugr.torch_utilities", "generated/draugr.torch_utilities.architectures", "generated/draugr.torch_utilities.architectures.architecture", "generated/draugr.torch_utilities.architectures.architecture.Architecture", "generated/draugr.torch_utilities.architectures.distributional", "generated/draugr.torch_utilities.architectures.distributional.categorical", "generated/draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "generated/draugr.torch_utilities.architectures.experimental", "generated/draugr.torch_utilities.architectures.experimental.heads", "generated/draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent", "generated/draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.mlp", "generated/draugr.torch_utilities.architectures.mlp.MLP", "generated/draugr.torch_utilities.architectures.mlp_variants", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "generated/draugr.torch_utilities.datasets", "generated/draugr.torch_utilities.datasets.non_sequential_dataset", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "generated/draugr.torch_utilities.datasets.random_dataset", "generated/draugr.torch_utilities.datasets.random_dataset.RandomDataset", "generated/draugr.torch_utilities.datasets.supervised", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "generated/draugr.torch_utilities.distributions", "generated/draugr.torch_utilities.distributions.entropy", "generated/draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "generated/draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_log_density", "generated/draugr.torch_utilities.distributions.entropy.shannon_entropy", "generated/draugr.torch_utilities.evaluation", "generated/draugr.torch_utilities.evaluation.classification", "generated/draugr.torch_utilities.evaluation.classification.find_n_misclassified", "generated/draugr.torch_utilities.evaluation.cross_validation", "generated/draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "generated/draugr.torch_utilities.exporting", "generated/draugr.torch_utilities.exporting.latex_tables", "generated/draugr.torch_utilities.exporting.latex_tables.adasdassijd", "generated/draugr.torch_utilities.exporting.latex_tables.asijd", "generated/draugr.torch_utilities.exporting.latex_tables.iasjduh", "generated/draugr.torch_utilities.exporting.summary", "generated/draugr.torch_utilities.exporting.summary.to_latex_table", "generated/draugr.torch_utilities.generators", "generated/draugr.torch_utilities.generators.batching", "generated/draugr.torch_utilities.generators.batching.LimitedBatchResampler", "generated/draugr.torch_utilities.generators.to_tensor_generator", "generated/draugr.torch_utilities.images", "generated/draugr.torch_utilities.images.channel_transform", "generated/draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "generated/draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "generated/draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "generated/draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "generated/draugr.torch_utilities.images.conversion", "generated/draugr.torch_utilities.images.conversion.quick_to_pil_image", "generated/draugr.torch_utilities.opencv", "generated/draugr.torch_utilities.opencv.torch_conversion", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "generated/draugr.torch_utilities.operations", "generated/draugr.torch_utilities.operations.boxes_2d", "generated/draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "generated/draugr.torch_utilities.operations.enums", "generated/draugr.torch_utilities.operations.enums.ReductionMethodEnum", "generated/draugr.torch_utilities.operations.sizes", "generated/draugr.torch_utilities.operations.sizes.conv2d", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "generated/draugr.torch_utilities.operations.sizes.max_pool2d", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.pad2d", "generated/draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "generated/draugr.torch_utilities.operations.torch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "generated/draugr.torch_utilities.optimisation", "generated/draugr.torch_utilities.optimisation.debugging", "generated/draugr.torch_utilities.optimisation.debugging.gradients", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "generated/draugr.torch_utilities.optimisation.parameters", "generated/draugr.torch_utilities.optimisation.parameters.freeze_parameters", "generated/draugr.torch_utilities.optimisation.parameters.frozen_parameters", "generated/draugr.torch_utilities.optimisation.scheduling", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "generated/draugr.torch_utilities.optimisation.stopping", "generated/draugr.torch_utilities.optimisation.stopping.overfitting", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "generated/draugr.torch_utilities.optimisation.updates", "generated/draugr.torch_utilities.optimisation.updates.copying", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_state", "generated/draugr.torch_utilities.optimisation.updates.soft_update", "generated/draugr.torch_utilities.persistence", "generated/draugr.torch_utilities.persistence.checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "generated/draugr.torch_utilities.persistence.config", "generated/draugr.torch_utilities.persistence.config.ensure_directory_exist", "generated/draugr.torch_utilities.persistence.config.save_config", "generated/draugr.torch_utilities.persistence.model", "generated/draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "generated/draugr.torch_utilities.persistence.model.load_latest_model", "generated/draugr.torch_utilities.persistence.model.load_model", "generated/draugr.torch_utilities.persistence.model.save_model", "generated/draugr.torch_utilities.persistence.model.save_model_and_configuration", "generated/draugr.torch_utilities.persistence.naming", "generated/draugr.torch_utilities.persistence.naming.get_model_hash", "generated/draugr.torch_utilities.persistence.parameters", "generated/draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.load_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "generated/draugr.torch_utilities.sessions", "generated/draugr.torch_utilities.sessions.cache_sessions", "generated/draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "generated/draugr.torch_utilities.sessions.determinism_sessions", "generated/draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "generated/draugr.torch_utilities.sessions.device_sessions", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "generated/draugr.torch_utilities.sessions.jit_sessions", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "generated/draugr.torch_utilities.sessions.model_sessions", "generated/draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "generated/draugr.torch_utilities.sessions.type_sessions", "generated/draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "generated/draugr.torch_utilities.system", "generated/draugr.torch_utilities.system.constants", "generated/draugr.torch_utilities.system.constants.torch_pi", "generated/draugr.torch_utilities.system.data_type", "generated/draugr.torch_utilities.system.data_type.global_torch_dtype", "generated/draugr.torch_utilities.system.data_type.set_global_torch_dtype", "generated/draugr.torch_utilities.system.device", "generated/draugr.torch_utilities.system.device.TorchDeviceEnum", "generated/draugr.torch_utilities.system.device.auto_select_available_cuda_device", "generated/draugr.torch_utilities.system.device.get_gpu_usage_mb", "generated/draugr.torch_utilities.system.device.global_torch_device", "generated/draugr.torch_utilities.system.device.select_cuda_device", "generated/draugr.torch_utilities.system.device.set_global_torch_device", "generated/draugr.torch_utilities.system.device.torch_clean_up", "generated/draugr.torch_utilities.system.info", "generated/draugr.torch_utilities.system.info.cuda_info", "generated/draugr.torch_utilities.system.info.system_info", "generated/draugr.torch_utilities.system.loading", "generated/draugr.torch_utilities.system.loading.default_worker_init_fn", "generated/draugr.torch_utilities.system.loading.global_pin_memory", "generated/draugr.torch_utilities.system.seeding", "generated/draugr.torch_utilities.system.seeding.torch_seed", "generated/draugr.torch_utilities.tensors", "generated/draugr.torch_utilities.tensors.dimension_order", "generated/draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "generated/draugr.torch_utilities.tensors.info", "generated/draugr.torch_utilities.tensors.info.size_of_tensor", "generated/draugr.torch_utilities.tensors.mixins", "generated/draugr.torch_utilities.tensors.mixins.TensoriseMixin", "generated/draugr.torch_utilities.tensors.normalise", "generated/draugr.torch_utilities.tensors.normalise.standardise", "generated/draugr.torch_utilities.tensors.reshaping", "generated/draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "generated/draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "generated/draugr.torch_utilities.tensors.reshaping.safe_concat", "generated/draugr.torch_utilities.tensors.tensor_container", "generated/draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "generated/draugr.torch_utilities.tensors.to_scalar", "generated/draugr.torch_utilities.tensors.to_tensor", "generated/draugr.torch_utilities.tensors.types", "generated/draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "generated/draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "generated/draugr.torch_utilities.writers", "generated/draugr.torch_utilities.writers.mixins", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "generated/draugr.torch_utilities.writers.tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.launcher", "generated/draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "generated/draugr.torch_utilities.writers.torch_module_writer", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "generated/draugr.torch_utilities.writers.visdom", "generated/draugr.torch_utilities.writers.visdom.episode_visual", "generated/draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "generated/draugr.torch_utilities.writers.visdom.plotting", "generated/draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "generated/draugr.torch_utilities.writers.visdom.visdom_writer", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "generated/draugr.tqdm_utilities", "generated/draugr.tqdm_utilities.pooled_progress_bar", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "generated/draugr.tqdm_utilities.progress_bar", "generated/draugr.visualisation", "generated/draugr.visualisation.ggplot_utilities", "generated/draugr.visualisation.matplotlib_utilities", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "generated/draugr.visualisation.matplotlib_utilities.annotate_point", "generated/draugr.visualisation.matplotlib_utilities.decolorise_plot", "generated/draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "generated/draugr.visualisation.matplotlib_utilities.latex_clean_label", "generated/draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "generated/draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "generated/draugr.visualisation.matplotlib_utilities.remove_decoration", "generated/draugr.visualisation.matplotlib_utilities.save_embed_fig", "generated/draugr.visualisation.matplotlib_utilities.use_monochrome_style", "generated/draugr.visualisation.pillow_utilities", "generated/draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "generated/draugr.visualisation.pillow_utilities.np_array_to_pil_img", "generated/draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "generated/draugr.visualisation.pillow_utilities.pil_img_to_np_array", "generated/draugr.visualisation.pillow_utilities.pil_merge_images", "generated/draugr.visualisation.seaborn_utilities", "generated/draugr.visualisation.seaborn_utilities.despine_all", "generated/draugr.visualisation.seaborn_utilities.exponential_moving_average", "generated/draugr.visualisation.seaborn_utilities.set_y_log_scale", "generated/draugr.writers", "generated/draugr.writers.csv_writer", "generated/draugr.writers.csv_writer.CSVWriter", "generated/draugr.writers.databases", "generated/draugr.writers.databases.hdf_writer", "generated/draugr.writers.databases.hdf_writer.HdfWriter", "generated/draugr.writers.databases.sqlite_writer", "generated/draugr.writers.databases.sqlite_writer.SqliteWriter", "generated/draugr.writers.log_writer", "generated/draugr.writers.log_writer.LogWriter", "generated/draugr.writers.mixins", "generated/draugr.writers.mixins.audio_writer_mixin", "generated/draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "generated/draugr.writers.mixins.bar_writer_mixin", "generated/draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "generated/draugr.writers.mixins.embed_writer_mixin", "generated/draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "generated/draugr.writers.mixins.figure_writer_mixin", "generated/draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "generated/draugr.writers.mixins.histogram_writer_mixin", "generated/draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "generated/draugr.writers.mixins.image_writer_mixin", "generated/draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "generated/draugr.writers.mixins.instantiation_writer_mixin", "generated/draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "generated/draugr.writers.mixins.line_writer_mixin", "generated/draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "generated/draugr.writers.mixins.mesh_writer_mixin", "generated/draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "generated/draugr.writers.mixins.scalar_writer_mixin", "generated/draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "generated/draugr.writers.mixins.video_writer_mixin", "generated/draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "generated/draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "generated/draugr.writers.mock_writer", "generated/draugr.writers.mock_writer.MockWriter", "generated/draugr.writers.standard_tags", "generated/draugr.writers.standard_tags.TestingCurves", "generated/draugr.writers.standard_tags.TestingScalars", "generated/draugr.writers.standard_tags.TestingTables", "generated/draugr.writers.standard_tags.TrainingCurves", "generated/draugr.writers.standard_tags.TrainingScalars", "generated/draugr.writers.standard_tags.TrainingTables", "generated/draugr.writers.standard_tags.should_plot_y_log_scale", "generated/draugr.writers.standard_tags.should_smooth_series", "generated/draugr.writers.terminal", "generated/draugr.writers.terminal.console_writer", "generated/draugr.writers.terminal.console_writer.ConsoleWriter", "generated/draugr.writers.terminal.terminal_plot_writer", "generated/draugr.writers.terminal.terminal_plot_writer.TerminalWriter", "generated/draugr.writers.writer", "generated/draugr.writers.writer.Writer", "generated/draugr.writers.writer.global_writer", "generated/draugr.writers.writer.set_global_writer", "generated/draugr.writers.writer_utilities", "generated/draugr.writers.writer_utilities.metrics", "getting_started", "index"], "filenames": ["generated/draugr.rst", "generated/draugr.dist_is_editable.rst", "generated/draugr.dlib_utilities.rst", "generated/draugr.dlib_utilities.dlib_utilities.rst", "generated/draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices.rst", "generated/draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices.rst", "generated/draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio.rst", "generated/draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio.rst", "generated/draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box.rst", "generated/draugr.dlib_utilities.dlib_utilities.shape_to_ndarray.rst", "generated/draugr.dlib_utilities.exclude.rst", "generated/draugr.dlib_utilities.exclude.flags.rst", "generated/draugr.dlib_utilities.exclude.flags.TupleFlag.rst", "generated/draugr.dlib_utilities.facealigner.rst", "generated/draugr.dlib_utilities.facealigner.align_face.rst", "generated/draugr.drawers.rst", "generated/draugr.drawers.drawer.rst", "generated/draugr.drawers.drawer.Drawer.rst", "generated/draugr.drawers.mpl_drawers.rst", "generated/draugr.drawers.mpl_drawers.discrete_scroll_plot.rst", "generated/draugr.drawers.mpl_drawers.distribution_plot.rst", "generated/draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot.rst", "generated/draugr.drawers.mpl_drawers.image_stream_plot.rst", "generated/draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.MockDrawer.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.MplDrawer.rst", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.rst", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot.rst", "generated/draugr.drawers.mpl_drawers.spectral.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot.rst", "generated/draugr.drawers.opencv_drawers.rst", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.rst", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream.rst", "generated/draugr.drawers.terminal.rst", "generated/draugr.drawers.terminal.terminal_image_renderer.rst", "generated/draugr.drawers.terminal.terminal_image_renderer.render_file.rst", "generated/draugr.drawers.terminal.terminal_image_renderer.terminal_render_image.rst", "generated/draugr.drawers.terminal.terminal_image_renderer.terminalise_image.rst", "generated/draugr.drawers.terminal.terminal_plot.rst", "generated/draugr.drawers.terminal.terminal_plotter.rst", "generated/draugr.drawers.terminal.terminal_utilities.rst", "generated/draugr.drawers.terminal.terminal_utilities.scale.rst", "generated/draugr.entry_points.rst", "generated/draugr.entry_points.cpu_usage_entry_point.rst", "generated/draugr.entry_points.cpu_usage_entry_point.main.rst", "generated/draugr.entry_points.tensorboard_entry_point.rst", "generated/draugr.entry_points.tensorboard_entry_point.main.rst", "generated/draugr.entry_points.toggle_darkmode.rst", "generated/draugr.entry_points.toggle_darkmode.main.rst", "generated/draugr.entry_points.visdom_entry_point.rst", "generated/draugr.entry_points.visdom_entry_point.main.rst", "generated/draugr.extensions.rst", "generated/draugr.extensions.skimage_utilities.rst", "generated/draugr.extensions.skimage_utilities.rgb_to_grayscale.rst", "generated/draugr.extensions.sorcery_utilities.rst", "generated/draugr.extensions.sorcery_utilities.lower_case_assigned_names.rst", "generated/draugr.extensions.sorcery_utilities.upper_case_assigned_names.rst", "generated/draugr.ffmpeg_utilities.rst", "generated/draugr.ffmpeg_utilities.exclude.rst", "generated/draugr.ffmpeg_utilities.extract.rst", "generated/draugr.ffmpeg_utilities.extract.extract_frames.rst", "generated/draugr.ffmpeg_utilities.merge.rst", "generated/draugr.ffmpeg_utilities.merge.merge_video.rst", "generated/draugr.ffmpeg_utilities.sequencify.rst", "generated/draugr.ffmpeg_utilities.sequencify.sequencify_files.rst", "generated/draugr.ffmpeg_utilities.split.rst", "generated/draugr.ffmpeg_utilities.split.spilt_video.rst", "generated/draugr.get_version.rst", "generated/draugr.jax_utilities.rst", "generated/draugr.metrics.rst", "generated/draugr.metrics.accumulation.rst", "generated/draugr.metrics.accumulation.lambda_accumulator.rst", "generated/draugr.metrics.accumulation.mean_accumulator.rst", "generated/draugr.metrics.accumulation.total_accumulator.rst", "generated/draugr.metrics.meters.rst", "generated/draugr.metrics.meters.AverageMeter.rst", "generated/draugr.metrics.meters.Meter.rst", "generated/draugr.metrics.metric_aggregator.rst", "generated/draugr.metrics.metric_aggregator.MetricAggregator.rst", "generated/draugr.metrics.metric_aggregator.save_metric.rst", "generated/draugr.metrics.metric_collection.rst", "generated/draugr.metrics.metric_collection.MetricCollection.rst", "generated/draugr.metrics.metric_summary.rst", "generated/draugr.metrics.metric_summary.MetricSummary.rst", "generated/draugr.metrics.plotting.rst", "generated/draugr.multiprocessing_utilities.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask.rst", "generated/draugr.numpy_utilities.rst", "generated/draugr.numpy_utilities.channel_transform.rst", "generated/draugr.numpy_utilities.channel_transform.chw_to_hwc.rst", "generated/draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint.rst", "generated/draugr.numpy_utilities.channel_transform.hwc_to_chw.rst", "generated/draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float.rst", "generated/draugr.numpy_utilities.datasets.rst", "generated/draugr.numpy_utilities.datasets.categorical.rst", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset.rst", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset.rst", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset.rst", "generated/draugr.numpy_utilities.datasets.defaults.rst", "generated/draugr.numpy_utilities.datasets.splitting.rst", "generated/draugr.numpy_utilities.datasets.splitting.SplitEnum.rst", "generated/draugr.numpy_utilities.datasets.splitting.SplitIndexer.rst", "generated/draugr.numpy_utilities.datasets.splitting.select_split.rst", "generated/draugr.numpy_utilities.datasets.splitting.train_valid_test_split.rst", "generated/draugr.numpy_utilities.manipulation.rst", "generated/draugr.numpy_utilities.manipulation.MyNdArray.rst", "generated/draugr.numpy_utilities.manipulation.recursive_flatten_numpy.rst", "generated/draugr.numpy_utilities.mixing.rst", "generated/draugr.numpy_utilities.mixing.mix_channels.rst", "generated/draugr.numpy_utilities.powers.rst", "generated/draugr.numpy_utilities.powers.next_pow_10_numpy.rst", "generated/draugr.numpy_utilities.powers.next_pow_2_numpy.rst", "generated/draugr.numpy_utilities.powers.next_pow_numpy.rst", "generated/draugr.numpy_utilities.powers.next_power_10_numpy.rst", "generated/draugr.numpy_utilities.powers.next_power_2_numpy.rst", "generated/draugr.numpy_utilities.raster_grid_2d_masking.rst", "generated/draugr.numpy_utilities.raster_grid_2d_masking.circular_mask.rst", "generated/draugr.numpy_utilities.raster_grid_3d_masking.rst", "generated/draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask.rst", "generated/draugr.numpy_utilities.resize.rst", "generated/draugr.numpy_utilities.resize.resize_array.rst", "generated/draugr.numpy_utilities.sampling.rst", "generated/draugr.numpy_utilities.sampling.get_sampler.rst", "generated/draugr.numpy_utilities.signal_utilities.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.heaviside.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2.rst", "generated/draugr.opencv_utilities.rst", "generated/draugr.opencv_utilities.bounding_boxes.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes.rst", "generated/draugr.opencv_utilities.color_space.rst", "generated/draugr.opencv_utilities.color_space.clean.rst", "generated/draugr.opencv_utilities.color_space.clean.CleanUpMethod.rst", "generated/draugr.opencv_utilities.color_space.clean.clean_up.rst", "generated/draugr.opencv_utilities.color_space.color.rst", "generated/draugr.opencv_utilities.color_space.color.is_singular_channel.rst", "generated/draugr.opencv_utilities.color_space.color.num_channels.rst", "generated/draugr.opencv_utilities.color_space.color.to_color.rst", "generated/draugr.opencv_utilities.color_space.edge.rst", "generated/draugr.opencv_utilities.color_space.edge.CannyApertureSize.rst", "generated/draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.edge.to_edge.rst", "generated/draugr.opencv_utilities.color_space.gamma.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gray.rst", "generated/draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.gray.to_gray.rst", "generated/draugr.opencv_utilities.color_space.noise.rst", "generated/draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.noise.noise_filter.rst", "generated/draugr.opencv_utilities.color_space.threshold.rst", "generated/draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask.rst", "generated/draugr.opencv_utilities.color_space.threshold.threshold_channel.rst", "generated/draugr.opencv_utilities.drawing.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_box.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect.rst", "generated/draugr.opencv_utilities.drawing.masks.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2.rst", "generated/draugr.opencv_utilities.drawing.masks.segment_ellipse.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.draw_masks.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.find_contours.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube.rst", "generated/draugr.opencv_utilities.namespaces.rst", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.rst", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.rst", "generated/draugr.opencv_utilities.namespaces.enums.BorderTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ComparisonEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DataTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.FontEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.HoughModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.KmeansEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.LineTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MorphShapeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MorphTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MouseEventEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes.rst", "generated/draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.WindowFlagEnum.rst", "generated/draugr.opencv_utilities.namespaces.flags.rst", "generated/draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum.rst", "generated/draugr.opencv_utilities.namespaces.flags.MouseEventFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag.rst", "generated/draugr.opencv_utilities.raster_sequences.rst", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.rst", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence.rst", "generated/draugr.opencv_utilities.raster_sequences.frames.rst", "generated/draugr.opencv_utilities.raster_sequences.frames.frame_generator.rst", "generated/draugr.opencv_utilities.transformation.rst", "generated/draugr.opencv_utilities.transformation.cropping.rst", "generated/draugr.opencv_utilities.transformation.cropping.circle_crop.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.Lambda.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans.rst", "generated/draugr.opencv_utilities.transformation.resize.rst", "generated/draugr.opencv_utilities.transformation.resize.InterpolationEnum.rst", "generated/draugr.opencv_utilities.transformation.resize.cv2_resize.rst", "generated/draugr.opencv_utilities.windows.rst", "generated/draugr.opencv_utilities.windows.color_picker.rst", "generated/draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker.rst", "generated/draugr.opencv_utilities.windows.default.rst", "generated/draugr.opencv_utilities.windows.default.ExtensionEnum.rst", "generated/draugr.opencv_utilities.windows.default.match_return_code.rst", "generated/draugr.opencv_utilities.windows.elements.rst", "generated/draugr.opencv_utilities.windows.elements.trackbar.rst", "generated/draugr.opencv_utilities.windows.elements.trackbar.add_trackbar.rst", "generated/draugr.opencv_utilities.windows.hough_circles.rst", "generated/draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles.rst", "generated/draugr.opencv_utilities.windows.image.rst", "generated/draugr.opencv_utilities.windows.image.show_image.rst", "generated/draugr.os_utilities.rst", "generated/draugr.os_utilities.cuda_device.rst", "generated/draugr.os_utilities.cuda_device.DeviceOrderEnum.rst", "generated/draugr.os_utilities.cuda_device.set_cuda_device_order.rst", "generated/draugr.os_utilities.cuda_device.set_cuda_visible_devices.rst", "generated/draugr.os_utilities.linux_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.disable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.enable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.install_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.remove_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_template.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_home_dir.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_passwd.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.make_user.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.remove_user.rst", "generated/draugr.os_utilities.platform_selection.rst", "generated/draugr.os_utilities.platform_selection.get_backend_module.rst", "generated/draugr.os_utilities.resource_utilities.rst", "generated/draugr.os_utilities.resource_utilities.all.rst", "generated/draugr.os_utilities.resource_utilities.all.get_num_instances.rst", "generated/draugr.os_utilities.resource_utilities.cpu.rst", "generated/draugr.os_utilities.resource_utilities.cpu.WorkerSession.rst", "generated/draugr.os_utilities.resource_utilities.cpu.release_worker_cores.rst", "generated/draugr.os_utilities.resource_utilities.cpu.request_worker_cores.rst", "generated/draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker.rst", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_available.rst", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use.rst", "generated/draugr.os_utilities.resource_utilities.gpu.rst", "generated/draugr.os_utilities.resource_utilities.ram.rst", "generated/draugr.os_utilities.resource_utilities.ram.num_instance_no_paging.rst", "generated/draugr.os_utilities.screen_resolution.rst", "generated/draugr.os_utilities.screen_resolution.get_screen_resolution.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_gtk.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_mac.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_pygame.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_tk.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_win.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_xlib.rst", "generated/draugr.os_utilities.service.rst", "generated/draugr.os_utilities.service.add_service.rst", "generated/draugr.os_utilities.service.remove_service.rst", "generated/draugr.pandas_utilities.rst", "generated/draugr.pandas_utilities.formatting.rst", "generated/draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter.rst", "generated/draugr.pandas_utilities.from_dict.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df.rst", "generated/draugr.pandas_utilities.latex_mean_std.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean.rst", "generated/draugr.pandas_utilities.misc_utilities.rst", "generated/draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum.rst", "generated/draugr.pandas_utilities.misc_utilities.ExportMethodEnum.rst", "generated/draugr.pandas_utilities.misc_utilities.duplicate_columns.rst", "generated/draugr.pandas_utilities.multi_index_utilities.rst", "generated/draugr.pandas_utilities.multi_index_utilities.add_index_level.rst", "generated/draugr.pandas_utilities.styling.rst", "generated/draugr.pandas_utilities.styling.AttrEnum.rst", "generated/draugr.pandas_utilities.styling.ColorEnum.rst", "generated/draugr.pandas_utilities.styling.NDFrameExtremeEnum.rst", "generated/draugr.pandas_utilities.styling.color_highlight_extreme.rst", "generated/draugr.pandas_utilities.styling.color_negative_red.rst", "generated/draugr.pygame_utilities.rst", "generated/draugr.pygame_utilities.screen.rst", "generated/draugr.pygame_utilities.screen.get_screen_resolution.rst", "generated/draugr.python_utilities.rst", "generated/draugr.python_utilities.broadcasting.rst", "generated/draugr.python_utilities.broadcasting.BroadcastNone.rst", "generated/draugr.python_utilities.counter_filter.rst", "generated/draugr.python_utilities.counter_filter.CounterFilter.rst", "generated/draugr.python_utilities.exclude.rst", "generated/draugr.python_utilities.exclude.packages.rst", "generated/draugr.python_utilities.exclude.packages.a.rst", "generated/draugr.python_utilities.exclude.packages.b.rst", "generated/draugr.python_utilities.exclude.packages.c.rst", "generated/draugr.python_utilities.exclude.worker.rst", "generated/draugr.python_utilities.exclude.worker.main.rst", "generated/draugr.python_utilities.exclude.worker.spawn.rst", "generated/draugr.python_utilities.function_wrappers.rst", "generated/draugr.python_utilities.function_wrappers.max_frequency.rst", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper.rst", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper_global.rst", "generated/draugr.python_utilities.function_wrappers.wrap_args.rst", "generated/draugr.python_utilities.generators.rst", "generated/draugr.python_utilities.generators.batching_generator.rst", "generated/draugr.python_utilities.generators.batching_generator.batch_generator.rst", "generated/draugr.python_utilities.generators.batching_generator.random_batches.rst", "generated/draugr.python_utilities.generators.batching_generator.shuffled_batches.rst", "generated/draugr.python_utilities.generators.batching_generator.sized_batch.rst", "generated/draugr.python_utilities.generators.recycling_generator.rst", "generated/draugr.python_utilities.generators.recycling_generator.batched_recycle.rst", "generated/draugr.python_utilities.generators.recycling_generator.recycle.rst", "generated/draugr.python_utilities.http.rst", "generated/draugr.python_utilities.http.HttpMethodEnum.rst", "generated/draugr.python_utilities.sockets.rst", "generated/draugr.python_utilities.sockets.find_unclaimed_port.rst", "generated/draugr.python_utilities.sockets.get_host_ip.rst", "generated/draugr.python_utilities.sockets.is_port_in_use.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw.rst", "generated/draugr.random_utilities.rst", "generated/draugr.random_utilities.seeding.rst", "generated/draugr.random_utilities.seeding.seed_stack.rst", "generated/draugr.scipy_utilities.rst", "generated/draugr.scipy_utilities.scipy_utilities.rst", "generated/draugr.scipy_utilities.scipy_utilities.read_normalised_wave.rst", "generated/draugr.scipy_utilities.scipy_utilities.write_normalised_wave.rst", "generated/draugr.scipy_utilities.signal_processing.rst", "generated/draugr.scipy_utilities.subsampling.rst", "generated/draugr.scipy_utilities.subsampling.fft_subsample.rst", "generated/draugr.scipy_utilities.subsampling.fir_subsample.rst", "generated/draugr.scipy_utilities.subsampling.mag_decimation_subsample.rst", "generated/draugr.scipy_utilities.subsampling.max_decimation_subsample.rst", "generated/draugr.scipy_utilities.subsampling.min_decimation_subsample.rst", "generated/draugr.stopping.rst", "generated/draugr.stopping.stopping_key.rst", "generated/draugr.stopping.stopping_key.CaptureEarlyStop.rst", "generated/draugr.stopping.stopping_key.add_early_stopping_key_combination.rst", "generated/draugr.tensorboard_utilities.rst", "generated/draugr.tensorboard_utilities.experimental.rst", "generated/draugr.tensorboard_utilities.experimental.confusion_matrix.rst", "generated/draugr.tensorboard_utilities.experimental.pretty_cf.rst", "generated/draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix.rst", "generated/draugr.tensorboard_utilities.exporting.rst", "generated/draugr.tensorboard_utilities.exporting.db_export.rst", "generated/draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase.rst", "generated/draugr.tensorboard_utilities.exporting.event_export.rst", "generated/draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter.rst", "generated/draugr.tensorboard_utilities.exporting.file_export.rst", "generated/draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile.rst", "generated/draugr.threading_utilities.rst", "generated/draugr.threading_utilities.exclude.rst", "generated/draugr.threading_utilities.skipper.rst", "generated/draugr.threading_utilities.skipper.Skipper.rst", "generated/draugr.torch_utilities.rst", "generated/draugr.torch_utilities.architectures.rst", "generated/draugr.torch_utilities.architectures.architecture.rst", "generated/draugr.torch_utilities.architectures.architecture.Architecture.rst", "generated/draugr.torch_utilities.architectures.distributional.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.rst", "generated/draugr.torch_utilities.architectures.experimental.heads.rst", "generated/draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.mlp.rst", "generated/draugr.torch_utilities.architectures.mlp.MLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP.rst", "generated/draugr.torch_utilities.datasets.rst", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.rst", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset.rst", "generated/draugr.torch_utilities.datasets.random_dataset.rst", "generated/draugr.torch_utilities.datasets.random_dataset.RandomDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.rst", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder.rst", "generated/draugr.torch_utilities.distributions.rst", "generated/draugr.torch_utilities.distributions.entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian.rst", "generated/draugr.torch_utilities.distributions.entropy.log_shannon_entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.normal_entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.normal_log_density.rst", "generated/draugr.torch_utilities.distributions.entropy.shannon_entropy.rst", "generated/draugr.torch_utilities.evaluation.rst", "generated/draugr.torch_utilities.evaluation.classification.rst", "generated/draugr.torch_utilities.evaluation.classification.find_n_misclassified.rst", "generated/draugr.torch_utilities.evaluation.cross_validation.rst", "generated/draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator.rst", "generated/draugr.torch_utilities.exporting.rst", "generated/draugr.torch_utilities.exporting.latex_tables.rst", "generated/draugr.torch_utilities.exporting.latex_tables.adasdassijd.rst", "generated/draugr.torch_utilities.exporting.latex_tables.asijd.rst", "generated/draugr.torch_utilities.exporting.latex_tables.iasjduh.rst", "generated/draugr.torch_utilities.exporting.summary.rst", "generated/draugr.torch_utilities.exporting.summary.to_latex_table.rst", "generated/draugr.torch_utilities.generators.rst", "generated/draugr.torch_utilities.generators.batching.rst", "generated/draugr.torch_utilities.generators.batching.LimitedBatchResampler.rst", "generated/draugr.torch_utilities.generators.to_tensor_generator.rst", "generated/draugr.torch_utilities.images.rst", "generated/draugr.torch_utilities.images.channel_transform.rst", "generated/draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor.rst", "generated/draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch.rst", "generated/draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor.rst", "generated/draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch.rst", "generated/draugr.torch_utilities.images.conversion.rst", "generated/draugr.torch_utilities.images.conversion.quick_to_pil_image.rst", "generated/draugr.torch_utilities.opencv.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToImage.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor.rst", "generated/draugr.torch_utilities.operations.rst", "generated/draugr.torch_utilities.operations.boxes_2d.rst", "generated/draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch.rst", "generated/draugr.torch_utilities.operations.enums.rst", "generated/draugr.torch_utilities.operations.enums.ReductionMethodEnum.rst", "generated/draugr.torch_utilities.operations.sizes.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size.rst", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.rst", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.pad2d.rst", "generated/draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes.rst", "generated/draugr.torch_utilities.operations.torch_transforms.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor.rst", "generated/draugr.torch_utilities.optimisation.rst", "generated/draugr.torch_utilities.optimisation.debugging.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel.rst", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.rst", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter.rst", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.rst", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch.rst", "generated/draugr.torch_utilities.optimisation.parameters.rst", "generated/draugr.torch_utilities.optimisation.parameters.freeze_parameters.rst", "generated/draugr.torch_utilities.optimisation.parameters.frozen_parameters.rst", "generated/draugr.torch_utilities.optimisation.scheduling.rst", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.rst", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr.rst", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.rst", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR.rst", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.rst", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler.rst", "generated/draugr.torch_utilities.optimisation.stopping.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector.rst", "generated/draugr.torch_utilities.optimisation.updates.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_parameters.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_state.rst", "generated/draugr.torch_utilities.optimisation.updates.soft_update.rst", "generated/draugr.torch_utilities.persistence.rst", "generated/draugr.torch_utilities.persistence.checkpoint.rst", "generated/draugr.torch_utilities.persistence.checkpoint.load_checkpoint.rst", "generated/draugr.torch_utilities.persistence.checkpoint.save_checkpoint.rst", "generated/draugr.torch_utilities.persistence.config.rst", "generated/draugr.torch_utilities.persistence.config.ensure_directory_exist.rst", "generated/draugr.torch_utilities.persistence.config.save_config.rst", "generated/draugr.torch_utilities.persistence.model.rst", "generated/draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu.rst", "generated/draugr.torch_utilities.persistence.model.load_latest_model.rst", "generated/draugr.torch_utilities.persistence.model.load_model.rst", "generated/draugr.torch_utilities.persistence.model.save_model.rst", "generated/draugr.torch_utilities.persistence.model.save_model_and_configuration.rst", "generated/draugr.torch_utilities.persistence.naming.rst", "generated/draugr.torch_utilities.persistence.naming.get_model_hash.rst", "generated/draugr.torch_utilities.persistence.parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.load_latest_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.load_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.save_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration.rst", "generated/draugr.torch_utilities.sessions.rst", "generated/draugr.torch_utilities.sessions.cache_sessions.rst", "generated/draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession.rst", "generated/draugr.torch_utilities.sessions.determinism_sessions.rst", "generated/draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCpuSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCudaSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchJitSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchEvalSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession.rst", "generated/draugr.torch_utilities.sessions.type_sessions.rst", "generated/draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession.rst", "generated/draugr.torch_utilities.system.rst", "generated/draugr.torch_utilities.system.constants.rst", "generated/draugr.torch_utilities.system.constants.torch_pi.rst", "generated/draugr.torch_utilities.system.data_type.rst", "generated/draugr.torch_utilities.system.data_type.global_torch_dtype.rst", "generated/draugr.torch_utilities.system.data_type.set_global_torch_dtype.rst", "generated/draugr.torch_utilities.system.device.rst", "generated/draugr.torch_utilities.system.device.TorchDeviceEnum.rst", "generated/draugr.torch_utilities.system.device.auto_select_available_cuda_device.rst", "generated/draugr.torch_utilities.system.device.get_gpu_usage_mb.rst", "generated/draugr.torch_utilities.system.device.global_torch_device.rst", "generated/draugr.torch_utilities.system.device.select_cuda_device.rst", "generated/draugr.torch_utilities.system.device.set_global_torch_device.rst", "generated/draugr.torch_utilities.system.device.torch_clean_up.rst", "generated/draugr.torch_utilities.system.info.rst", "generated/draugr.torch_utilities.system.info.cuda_info.rst", "generated/draugr.torch_utilities.system.info.system_info.rst", "generated/draugr.torch_utilities.system.loading.rst", "generated/draugr.torch_utilities.system.loading.default_worker_init_fn.rst", "generated/draugr.torch_utilities.system.loading.global_pin_memory.rst", "generated/draugr.torch_utilities.system.seeding.rst", "generated/draugr.torch_utilities.system.seeding.torch_seed.rst", "generated/draugr.torch_utilities.tensors.rst", "generated/draugr.torch_utilities.tensors.dimension_order.rst", "generated/draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor.rst", "generated/draugr.torch_utilities.tensors.info.rst", "generated/draugr.torch_utilities.tensors.info.size_of_tensor.rst", "generated/draugr.torch_utilities.tensors.mixins.rst", "generated/draugr.torch_utilities.tensors.mixins.TensoriseMixin.rst", "generated/draugr.torch_utilities.tensors.normalise.rst", "generated/draugr.torch_utilities.tensors.normalise.standardise.rst", "generated/draugr.torch_utilities.tensors.reshaping.rst", "generated/draugr.torch_utilities.tensors.reshaping.flatten_keep_batch.rst", "generated/draugr.torch_utilities.tensors.reshaping.flatten_tn_dim.rst", "generated/draugr.torch_utilities.tensors.reshaping.safe_concat.rst", "generated/draugr.torch_utilities.tensors.tensor_container.rst", "generated/draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple.rst", "generated/draugr.torch_utilities.tensors.to_scalar.rst", "generated/draugr.torch_utilities.tensors.to_tensor.rst", "generated/draugr.torch_utilities.tensors.types.rst", "generated/draugr.torch_utilities.tensors.types.numpy_to_torch_dtype.rst", "generated/draugr.torch_utilities.tensors.types.torch_to_numpy_dtype.rst", "generated/draugr.torch_utilities.writers.rst", "generated/draugr.torch_utilities.writers.mixins.rst", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.rst", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin.rst", "generated/draugr.torch_utilities.writers.tensorboard.rst", "generated/draugr.torch_utilities.writers.tensorboard.launcher.rst", "generated/draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_hook.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms.rst", "generated/draugr.torch_utilities.writers.visdom.rst", "generated/draugr.torch_utilities.writers.visdom.episode_visual.rst", "generated/draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser.rst", "generated/draugr.torch_utilities.writers.visdom.plotting.rst", "generated/draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats.rst", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.rst", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter.rst", "generated/draugr.tqdm_utilities.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_imap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_map.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_umap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_imap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_map.rst", "generated/draugr.tqdm_utilities.progress_bar.rst", "generated/draugr.visualisation.rst", "generated/draugr.visualisation.ggplot_utilities.rst", "generated/draugr.visualisation.matplotlib_utilities.rst", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment.rst", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment.rst", "generated/draugr.visualisation.matplotlib_utilities.annotate_point.rst", "generated/draugr.visualisation.matplotlib_utilities.decolorise_plot.rst", "generated/draugr.visualisation.matplotlib_utilities.denormalise_minusoneone.rst", "generated/draugr.visualisation.matplotlib_utilities.latex_clean_label.rst", "generated/draugr.visualisation.matplotlib_utilities.make_errorbar_legend.rst", "generated/draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box.rst", "generated/draugr.visualisation.matplotlib_utilities.remove_decoration.rst", "generated/draugr.visualisation.matplotlib_utilities.save_embed_fig.rst", "generated/draugr.visualisation.matplotlib_utilities.use_monochrome_style.rst", "generated/draugr.visualisation.pillow_utilities.rst", "generated/draugr.visualisation.pillow_utilities.byte_array_to_pil_image.rst", "generated/draugr.visualisation.pillow_utilities.np_array_to_pil_img.rst", "generated/draugr.visualisation.pillow_utilities.pil_image_to_byte_array.rst", "generated/draugr.visualisation.pillow_utilities.pil_img_to_np_array.rst", "generated/draugr.visualisation.pillow_utilities.pil_merge_images.rst", "generated/draugr.visualisation.seaborn_utilities.rst", "generated/draugr.visualisation.seaborn_utilities.despine_all.rst", "generated/draugr.visualisation.seaborn_utilities.exponential_moving_average.rst", "generated/draugr.visualisation.seaborn_utilities.set_y_log_scale.rst", "generated/draugr.writers.rst", "generated/draugr.writers.csv_writer.rst", "generated/draugr.writers.csv_writer.CSVWriter.rst", "generated/draugr.writers.databases.rst", "generated/draugr.writers.databases.hdf_writer.rst", "generated/draugr.writers.databases.hdf_writer.HdfWriter.rst", "generated/draugr.writers.databases.sqlite_writer.rst", "generated/draugr.writers.databases.sqlite_writer.SqliteWriter.rst", "generated/draugr.writers.log_writer.rst", "generated/draugr.writers.log_writer.LogWriter.rst", "generated/draugr.writers.mixins.rst", "generated/draugr.writers.mixins.audio_writer_mixin.rst", "generated/draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin.rst", "generated/draugr.writers.mixins.bar_writer_mixin.rst", "generated/draugr.writers.mixins.bar_writer_mixin.BarWriterMixin.rst", "generated/draugr.writers.mixins.embed_writer_mixin.rst", "generated/draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin.rst", "generated/draugr.writers.mixins.figure_writer_mixin.rst", "generated/draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin.rst", "generated/draugr.writers.mixins.histogram_writer_mixin.rst", "generated/draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin.rst", "generated/draugr.writers.mixins.image_writer_mixin.rst", "generated/draugr.writers.mixins.image_writer_mixin.ImageWriterMixin.rst", "generated/draugr.writers.mixins.instantiation_writer_mixin.rst", "generated/draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin.rst", "generated/draugr.writers.mixins.line_writer_mixin.rst", "generated/draugr.writers.mixins.line_writer_mixin.LineWriterMixin.rst", "generated/draugr.writers.mixins.mesh_writer_mixin.rst", "generated/draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin.rst", "generated/draugr.writers.mixins.precision_recall_writer_mixin.rst", "generated/draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin.rst", "generated/draugr.writers.mixins.scalar_writer_mixin.rst", "generated/draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin.rst", "generated/draugr.writers.mixins.spectrogram_writer_mixin.rst", "generated/draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin.rst", "generated/draugr.writers.mixins.video_writer_mixin.rst", "generated/draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum.rst", "generated/draugr.writers.mixins.video_writer_mixin.VideoWriterMixin.rst", "generated/draugr.writers.mock_writer.rst", "generated/draugr.writers.mock_writer.MockWriter.rst", "generated/draugr.writers.standard_tags.rst", "generated/draugr.writers.standard_tags.TestingCurves.rst", "generated/draugr.writers.standard_tags.TestingScalars.rst", "generated/draugr.writers.standard_tags.TestingTables.rst", "generated/draugr.writers.standard_tags.TrainingCurves.rst", "generated/draugr.writers.standard_tags.TrainingScalars.rst", "generated/draugr.writers.standard_tags.TrainingTables.rst", "generated/draugr.writers.standard_tags.should_plot_y_log_scale.rst", "generated/draugr.writers.standard_tags.should_smooth_series.rst", "generated/draugr.writers.terminal.rst", "generated/draugr.writers.terminal.console_writer.rst", "generated/draugr.writers.terminal.console_writer.ConsoleWriter.rst", "generated/draugr.writers.terminal.terminal_plot_writer.rst", "generated/draugr.writers.terminal.terminal_plot_writer.TerminalWriter.rst", "generated/draugr.writers.writer.rst", "generated/draugr.writers.writer.Writer.rst", "generated/draugr.writers.writer.global_writer.rst", "generated/draugr.writers.writer.set_global_writer.rst", "generated/draugr.writers.writer_utilities.rst", "generated/draugr.writers.writer_utilities.metrics.rst", "getting_started.rst", "index.rst"], "titles": ["draugr", "draugr.dist_is_editable", "draugr.dlib_utilities", "draugr.dlib_utilities.dlib_utilities", "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "draugr.dlib_utilities.exclude", "draugr.dlib_utilities.exclude.flags", "draugr.dlib_utilities.exclude.flags.TupleFlag", "draugr.dlib_utilities.facealigner", "draugr.dlib_utilities.facealigner.align_face", "draugr.drawers", "draugr.drawers.drawer", "draugr.drawers.drawer.Drawer", "draugr.drawers.mpl_drawers", "draugr.drawers.mpl_drawers.discrete_scroll_plot", "draugr.drawers.mpl_drawers.distribution_plot", "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "draugr.drawers.mpl_drawers.image_stream_plot", "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "draugr.drawers.mpl_drawers.mpldrawer", "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "draugr.drawers.mpl_drawers.series_scroll_plot", "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "draugr.drawers.mpl_drawers.spectral", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "draugr.drawers.opencv_drawers", "draugr.drawers.opencv_drawers.opencv_image_stream", "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "draugr.drawers.terminal", "draugr.drawers.terminal.terminal_image_renderer", "draugr.drawers.terminal.terminal_image_renderer.render_file", "draugr.drawers.terminal.terminal_image_renderer.terminal_render_image", "draugr.drawers.terminal.terminal_image_renderer.terminalise_image", "draugr.drawers.terminal.terminal_plot", "draugr.drawers.terminal.terminal_plotter", "draugr.drawers.terminal.terminal_utilities", "draugr.drawers.terminal.terminal_utilities.scale", "draugr.entry_points", "draugr.entry_points.cpu_usage_entry_point", "draugr.entry_points.cpu_usage_entry_point.main", "draugr.entry_points.tensorboard_entry_point", "draugr.entry_points.tensorboard_entry_point.main", "draugr.entry_points.toggle_darkmode", "draugr.entry_points.toggle_darkmode.main", "draugr.entry_points.visdom_entry_point", "draugr.entry_points.visdom_entry_point.main", "draugr.extensions", "draugr.extensions.skimage_utilities", "draugr.extensions.skimage_utilities.rgb_to_grayscale", "draugr.extensions.sorcery_utilities", "draugr.extensions.sorcery_utilities.lower_case_assigned_names", "draugr.extensions.sorcery_utilities.upper_case_assigned_names", "draugr.ffmpeg_utilities", "draugr.ffmpeg_utilities.exclude", "draugr.ffmpeg_utilities.extract", "draugr.ffmpeg_utilities.extract.extract_frames", "draugr.ffmpeg_utilities.merge", "draugr.ffmpeg_utilities.merge.merge_video", "draugr.ffmpeg_utilities.sequencify", "draugr.ffmpeg_utilities.sequencify.sequencify_files", "draugr.ffmpeg_utilities.split", "draugr.ffmpeg_utilities.split.spilt_video", "draugr.get_version", "draugr.jax_utilities", "draugr.metrics", "draugr.metrics.accumulation", "draugr.metrics.accumulation.lambda_accumulator", "draugr.metrics.accumulation.mean_accumulator", "draugr.metrics.accumulation.total_accumulator", "draugr.metrics.meters", "draugr.metrics.meters.AverageMeter", "draugr.metrics.meters.Meter", "draugr.metrics.metric_aggregator", "draugr.metrics.metric_aggregator.MetricAggregator", "draugr.metrics.metric_aggregator.save_metric", "draugr.metrics.metric_collection", "draugr.metrics.metric_collection.MetricCollection", "draugr.metrics.metric_summary", "draugr.metrics.metric_summary.MetricSummary", "draugr.metrics.plotting", "draugr.multiprocessing_utilities", "draugr.multiprocessing_utilities.pooled_queue_processor", "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "draugr.numpy_utilities", "draugr.numpy_utilities.channel_transform", "draugr.numpy_utilities.channel_transform.chw_to_hwc", "draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "draugr.numpy_utilities.channel_transform.hwc_to_chw", "draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "draugr.numpy_utilities.datasets", "draugr.numpy_utilities.datasets.categorical", "draugr.numpy_utilities.datasets.categorical.deep_category", "draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "draugr.numpy_utilities.datasets.categorical.flat_category", "draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "draugr.numpy_utilities.datasets.categorical.shallow_category", "draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "draugr.numpy_utilities.datasets.defaults", "draugr.numpy_utilities.datasets.splitting", "draugr.numpy_utilities.datasets.splitting.SplitEnum", "draugr.numpy_utilities.datasets.splitting.SplitIndexer", "draugr.numpy_utilities.datasets.splitting.select_split", "draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "draugr.numpy_utilities.manipulation", "draugr.numpy_utilities.manipulation.MyNdArray", "draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "draugr.numpy_utilities.mixing", "draugr.numpy_utilities.mixing.mix_channels", "draugr.numpy_utilities.powers", "draugr.numpy_utilities.powers.next_pow_10_numpy", "draugr.numpy_utilities.powers.next_pow_2_numpy", "draugr.numpy_utilities.powers.next_pow_numpy", "draugr.numpy_utilities.powers.next_power_10_numpy", "draugr.numpy_utilities.powers.next_power_2_numpy", "draugr.numpy_utilities.raster_grid_2d_masking", "draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "draugr.numpy_utilities.raster_grid_3d_masking", "draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "draugr.numpy_utilities.resize", "draugr.numpy_utilities.resize.resize_array", "draugr.numpy_utilities.sampling", "draugr.numpy_utilities.sampling.get_sampler", "draugr.numpy_utilities.signal_utilities", "draugr.numpy_utilities.signal_utilities.padding", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "draugr.numpy_utilities.signal_utilities.signal_mixing", "draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "draugr.numpy_utilities.signal_utilities.signal_projection", "draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "draugr.numpy_utilities.signal_utilities.signal_statistics", "draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "draugr.numpy_utilities.signal_utilities.truncation", "draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "draugr.opencv_utilities", "draugr.opencv_utilities.bounding_boxes", "draugr.opencv_utilities.bounding_boxes.boxes_2d", "draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "draugr.opencv_utilities.bounding_boxes.evaluation", "draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "draugr.opencv_utilities.color_space", "draugr.opencv_utilities.color_space.clean", "draugr.opencv_utilities.color_space.clean.CleanUpMethod", "draugr.opencv_utilities.color_space.clean.clean_up", "draugr.opencv_utilities.color_space.color", "draugr.opencv_utilities.color_space.color.is_singular_channel", "draugr.opencv_utilities.color_space.color.num_channels", "draugr.opencv_utilities.color_space.color.to_color", "draugr.opencv_utilities.color_space.edge", "draugr.opencv_utilities.color_space.edge.CannyApertureSize", "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "draugr.opencv_utilities.color_space.edge.to_edge", "draugr.opencv_utilities.color_space.gamma", "draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "draugr.opencv_utilities.color_space.gray", "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "draugr.opencv_utilities.color_space.gray.to_gray", "draugr.opencv_utilities.color_space.noise", "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "draugr.opencv_utilities.color_space.noise.noise_filter", "draugr.opencv_utilities.color_space.threshold", "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "draugr.opencv_utilities.color_space.threshold.threshold_channel", "draugr.opencv_utilities.drawing", "draugr.opencv_utilities.drawing.draw_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "draugr.opencv_utilities.drawing.masks", "draugr.opencv_utilities.drawing.masks.gauss_circles", "draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "draugr.opencv_utilities.drawing.masks.segment_ellipse", "draugr.opencv_utilities.drawing.opencv_draw", "draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "draugr.opencv_utilities.drawing.opencv_draw.find_contours", "draugr.opencv_utilities.drawing.opencv_drawing_utilities", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "draugr.opencv_utilities.namespaces", "draugr.opencv_utilities.namespaces.color_conversion_enum", "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "draugr.opencv_utilities.namespaces.enums", "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "draugr.opencv_utilities.namespaces.enums.FontEnum", "draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "draugr.opencv_utilities.namespaces.enums.KmeansEnum", "draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "draugr.opencv_utilities.namespaces.flags", "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "draugr.opencv_utilities.raster_sequences", "draugr.opencv_utilities.raster_sequences.async_video_stream", "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "draugr.opencv_utilities.raster_sequences.frame_annotation", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "draugr.opencv_utilities.raster_sequences.frames", "draugr.opencv_utilities.raster_sequences.frames.frame_generator", "draugr.opencv_utilities.transformation", "draugr.opencv_utilities.transformation.cropping", "draugr.opencv_utilities.transformation.cropping.circle_crop", "draugr.opencv_utilities.transformation.cv2_transforms", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "draugr.opencv_utilities.transformation.resize", "draugr.opencv_utilities.transformation.resize.InterpolationEnum", "draugr.opencv_utilities.transformation.resize.cv2_resize", "draugr.opencv_utilities.windows", "draugr.opencv_utilities.windows.color_picker", "draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "draugr.opencv_utilities.windows.default", "draugr.opencv_utilities.windows.default.ExtensionEnum", "draugr.opencv_utilities.windows.default.match_return_code", "draugr.opencv_utilities.windows.elements", "draugr.opencv_utilities.windows.elements.trackbar", "draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "draugr.opencv_utilities.windows.hough_circles", "draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "draugr.opencv_utilities.windows.image", "draugr.opencv_utilities.windows.image.show_image", "draugr.os_utilities", "draugr.os_utilities.cuda_device", "draugr.os_utilities.cuda_device.DeviceOrderEnum", "draugr.os_utilities.cuda_device.set_cuda_device_order", "draugr.os_utilities.cuda_device.set_cuda_visible_devices", "draugr.os_utilities.linux_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "draugr.os_utilities.linux_utilities.gtk_utilities", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "draugr.os_utilities.linux_utilities.systemd_utilities", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.disable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.enable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.install_service", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.remove_service", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "draugr.os_utilities.linux_utilities.user_utilities", "draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "draugr.os_utilities.linux_utilities.user_utilities.make_user", "draugr.os_utilities.linux_utilities.user_utilities.remove_user", "draugr.os_utilities.platform_selection", "draugr.os_utilities.platform_selection.get_backend_module", "draugr.os_utilities.resource_utilities", "draugr.os_utilities.resource_utilities.all", "draugr.os_utilities.resource_utilities.all.get_num_instances", "draugr.os_utilities.resource_utilities.cpu", "draugr.os_utilities.resource_utilities.cpu.WorkerSession", "draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "draugr.os_utilities.resource_utilities.gpu", "draugr.os_utilities.resource_utilities.ram", "draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "draugr.os_utilities.screen_resolution", "draugr.os_utilities.screen_resolution.get_screen_resolution", "draugr.os_utilities.screen_resolution.screen_res_gtk", "draugr.os_utilities.screen_resolution.screen_res_mac", "draugr.os_utilities.screen_resolution.screen_res_pygame", "draugr.os_utilities.screen_resolution.screen_res_tk", "draugr.os_utilities.screen_resolution.screen_res_win", "draugr.os_utilities.screen_resolution.screen_res_xlib", "draugr.os_utilities.service", "draugr.os_utilities.service.add_service", "draugr.os_utilities.service.remove_service", "draugr.pandas_utilities", "draugr.pandas_utilities.formatting", "draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "draugr.pandas_utilities.from_dict", "draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "draugr.pandas_utilities.latex_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "draugr.pandas_utilities.misc_utilities", "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "draugr.pandas_utilities.misc_utilities.duplicate_columns", "draugr.pandas_utilities.multi_index_utilities", "draugr.pandas_utilities.multi_index_utilities.add_index_level", "draugr.pandas_utilities.styling", "draugr.pandas_utilities.styling.AttrEnum", "draugr.pandas_utilities.styling.ColorEnum", "draugr.pandas_utilities.styling.NDFrameExtremeEnum", "draugr.pandas_utilities.styling.color_highlight_extreme", "draugr.pandas_utilities.styling.color_negative_red", "draugr.pygame_utilities", "draugr.pygame_utilities.screen", "draugr.pygame_utilities.screen.get_screen_resolution", "draugr.python_utilities", "draugr.python_utilities.broadcasting", "draugr.python_utilities.broadcasting.BroadcastNone", "draugr.python_utilities.counter_filter", "draugr.python_utilities.counter_filter.CounterFilter", "draugr.python_utilities.exclude", "draugr.python_utilities.exclude.packages", "draugr.python_utilities.exclude.packages.a", "draugr.python_utilities.exclude.packages.b", "draugr.python_utilities.exclude.packages.c", "draugr.python_utilities.exclude.worker", "draugr.python_utilities.exclude.worker.main", "draugr.python_utilities.exclude.worker.spawn", "draugr.python_utilities.function_wrappers", "draugr.python_utilities.function_wrappers.max_frequency", "draugr.python_utilities.function_wrappers.min_interval_wrapper", "draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "draugr.python_utilities.function_wrappers.wrap_args", "draugr.python_utilities.generators", "draugr.python_utilities.generators.batching_generator", "draugr.python_utilities.generators.batching_generator.batch_generator", "draugr.python_utilities.generators.batching_generator.random_batches", "draugr.python_utilities.generators.batching_generator.shuffled_batches", "draugr.python_utilities.generators.batching_generator.sized_batch", "draugr.python_utilities.generators.recycling_generator", "draugr.python_utilities.generators.recycling_generator.batched_recycle", "draugr.python_utilities.generators.recycling_generator.recycle", "draugr.python_utilities.http", "draugr.python_utilities.http.HttpMethodEnum", "draugr.python_utilities.sockets", "draugr.python_utilities.sockets.find_unclaimed_port", "draugr.python_utilities.sockets.get_host_ip", "draugr.python_utilities.sockets.is_port_in_use", "draugr.python_utilities.torch_like_channel_transformation", "draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "draugr.random_utilities", "draugr.random_utilities.seeding", "draugr.random_utilities.seeding.seed_stack", "draugr.scipy_utilities", "draugr.scipy_utilities.scipy_utilities", "draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "draugr.scipy_utilities.signal_processing", "draugr.scipy_utilities.subsampling", "draugr.scipy_utilities.subsampling.fft_subsample", "draugr.scipy_utilities.subsampling.fir_subsample", "draugr.scipy_utilities.subsampling.mag_decimation_subsample", "draugr.scipy_utilities.subsampling.max_decimation_subsample", "draugr.scipy_utilities.subsampling.min_decimation_subsample", "draugr.stopping", "draugr.stopping.stopping_key", "draugr.stopping.stopping_key.CaptureEarlyStop", "draugr.stopping.stopping_key.add_early_stopping_key_combination", "draugr.tensorboard_utilities", "draugr.tensorboard_utilities.experimental", "draugr.tensorboard_utilities.experimental.confusion_matrix", "draugr.tensorboard_utilities.experimental.pretty_cf", "draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix", "draugr.tensorboard_utilities.exporting", "draugr.tensorboard_utilities.exporting.db_export", "draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase", "draugr.tensorboard_utilities.exporting.event_export", "draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter", "draugr.tensorboard_utilities.exporting.file_export", "draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile", "draugr.threading_utilities", "draugr.threading_utilities.exclude", "draugr.threading_utilities.skipper", "draugr.threading_utilities.skipper.Skipper", "draugr.torch_utilities", "draugr.torch_utilities.architectures", "draugr.torch_utilities.architectures.architecture", "draugr.torch_utilities.architectures.architecture.Architecture", "draugr.torch_utilities.architectures.distributional", "draugr.torch_utilities.architectures.distributional.categorical", "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "draugr.torch_utilities.architectures.distributional.normal", "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "draugr.torch_utilities.architectures.experimental", "draugr.torch_utilities.architectures.experimental.heads", "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "draugr.torch_utilities.architectures.experimental.recurrent", "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "draugr.torch_utilities.architectures.mlp", "draugr.torch_utilities.architectures.mlp.MLP", "draugr.torch_utilities.architectures.mlp_variants", "draugr.torch_utilities.architectures.mlp_variants.concatination", "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.disjunction", "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "draugr.torch_utilities.architectures.mlp_variants.fourier", "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "draugr.torch_utilities.datasets", "draugr.torch_utilities.datasets.non_sequential_dataset", "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "draugr.torch_utilities.datasets.random_dataset", "draugr.torch_utilities.datasets.random_dataset.RandomDataset", "draugr.torch_utilities.datasets.supervised", "draugr.torch_utilities.datasets.supervised.categorical_dataset", "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "draugr.torch_utilities.datasets.supervised.vision_datasets", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "draugr.torch_utilities.distributions", "draugr.torch_utilities.distributions.entropy", "draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "draugr.torch_utilities.distributions.entropy.normal_entropy", "draugr.torch_utilities.distributions.entropy.normal_log_density", "draugr.torch_utilities.distributions.entropy.shannon_entropy", "draugr.torch_utilities.evaluation", "draugr.torch_utilities.evaluation.classification", "draugr.torch_utilities.evaluation.classification.find_n_misclassified", "draugr.torch_utilities.evaluation.cross_validation", "draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "draugr.torch_utilities.exporting", "draugr.torch_utilities.exporting.latex_tables", "draugr.torch_utilities.exporting.latex_tables.adasdassijd", "draugr.torch_utilities.exporting.latex_tables.asijd", "draugr.torch_utilities.exporting.latex_tables.iasjduh", "draugr.torch_utilities.exporting.summary", "draugr.torch_utilities.exporting.summary.to_latex_table", "draugr.torch_utilities.generators", "draugr.torch_utilities.generators.batching", "draugr.torch_utilities.generators.batching.LimitedBatchResampler", "draugr.torch_utilities.generators.to_tensor_generator", "draugr.torch_utilities.images", "draugr.torch_utilities.images.channel_transform", "draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "draugr.torch_utilities.images.conversion", "draugr.torch_utilities.images.conversion.quick_to_pil_image", "draugr.torch_utilities.opencv", "draugr.torch_utilities.opencv.torch_conversion", "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "draugr.torch_utilities.operations", "draugr.torch_utilities.operations.boxes_2d", "draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "draugr.torch_utilities.operations.enums", "draugr.torch_utilities.operations.enums.ReductionMethodEnum", "draugr.torch_utilities.operations.sizes", "draugr.torch_utilities.operations.sizes.conv2d", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "draugr.torch_utilities.operations.sizes.max_pool2d", "draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "draugr.torch_utilities.operations.sizes.pad2d", "draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "draugr.torch_utilities.operations.torch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "draugr.torch_utilities.optimisation", "draugr.torch_utilities.optimisation.debugging", "draugr.torch_utilities.optimisation.debugging.gradients", "draugr.torch_utilities.optimisation.debugging.gradients.checking", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "draugr.torch_utilities.optimisation.debugging.gradients.flow", "draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "draugr.torch_utilities.optimisation.debugging.gradients.guided", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "draugr.torch_utilities.optimisation.debugging.layer_fetching", "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "draugr.torch_utilities.optimisation.debugging.opt_verification", "draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "draugr.torch_utilities.optimisation.parameters", "draugr.torch_utilities.optimisation.parameters.freeze_parameters", "draugr.torch_utilities.optimisation.parameters.frozen_parameters", "draugr.torch_utilities.optimisation.scheduling", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "draugr.torch_utilities.optimisation.scheduling.schedulers", "draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "draugr.torch_utilities.optimisation.stopping", "draugr.torch_utilities.optimisation.stopping.overfitting", "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "draugr.torch_utilities.optimisation.updates", "draugr.torch_utilities.optimisation.updates.copying", "draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "draugr.torch_utilities.optimisation.updates.copying.copy_state", "draugr.torch_utilities.optimisation.updates.soft_update", "draugr.torch_utilities.persistence", "draugr.torch_utilities.persistence.checkpoint", "draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "draugr.torch_utilities.persistence.config", "draugr.torch_utilities.persistence.config.ensure_directory_exist", "draugr.torch_utilities.persistence.config.save_config", "draugr.torch_utilities.persistence.model", "draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "draugr.torch_utilities.persistence.model.load_latest_model", "draugr.torch_utilities.persistence.model.load_model", "draugr.torch_utilities.persistence.model.save_model", "draugr.torch_utilities.persistence.model.save_model_and_configuration", "draugr.torch_utilities.persistence.naming", "draugr.torch_utilities.persistence.naming.get_model_hash", "draugr.torch_utilities.persistence.parameters", "draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "draugr.torch_utilities.persistence.parameters.load_model_parameters", "draugr.torch_utilities.persistence.parameters.save_model_parameters", "draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "draugr.torch_utilities.sessions", "draugr.torch_utilities.sessions.cache_sessions", "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "draugr.torch_utilities.sessions.determinism_sessions", "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "draugr.torch_utilities.sessions.device_sessions", "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "draugr.torch_utilities.sessions.jit_sessions", "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "draugr.torch_utilities.sessions.model_sessions", "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "draugr.torch_utilities.sessions.type_sessions", "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "draugr.torch_utilities.system", "draugr.torch_utilities.system.constants", "draugr.torch_utilities.system.constants.torch_pi", "draugr.torch_utilities.system.data_type", "draugr.torch_utilities.system.data_type.global_torch_dtype", "draugr.torch_utilities.system.data_type.set_global_torch_dtype", "draugr.torch_utilities.system.device", "draugr.torch_utilities.system.device.TorchDeviceEnum", "draugr.torch_utilities.system.device.auto_select_available_cuda_device", "draugr.torch_utilities.system.device.get_gpu_usage_mb", "draugr.torch_utilities.system.device.global_torch_device", "draugr.torch_utilities.system.device.select_cuda_device", "draugr.torch_utilities.system.device.set_global_torch_device", "draugr.torch_utilities.system.device.torch_clean_up", "draugr.torch_utilities.system.info", "draugr.torch_utilities.system.info.cuda_info", "draugr.torch_utilities.system.info.system_info", "draugr.torch_utilities.system.loading", "draugr.torch_utilities.system.loading.default_worker_init_fn", "draugr.torch_utilities.system.loading.global_pin_memory", "draugr.torch_utilities.system.seeding", "draugr.torch_utilities.system.seeding.torch_seed", "draugr.torch_utilities.tensors", "draugr.torch_utilities.tensors.dimension_order", "draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "draugr.torch_utilities.tensors.info", "draugr.torch_utilities.tensors.info.size_of_tensor", "draugr.torch_utilities.tensors.mixins", "draugr.torch_utilities.tensors.mixins.TensoriseMixin", "draugr.torch_utilities.tensors.normalise", "draugr.torch_utilities.tensors.normalise.standardise", "draugr.torch_utilities.tensors.reshaping", "draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "draugr.torch_utilities.tensors.reshaping.safe_concat", "draugr.torch_utilities.tensors.tensor_container", "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "draugr.torch_utilities.tensors.to_scalar", "draugr.torch_utilities.tensors.to_tensor", "draugr.torch_utilities.tensors.types", "draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "draugr.torch_utilities.writers", "draugr.torch_utilities.writers.mixins", "draugr.torch_utilities.writers.mixins.graph_writer_mixin", "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "draugr.torch_utilities.writers.tensorboard", "draugr.torch_utilities.writers.tensorboard.launcher", "draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "draugr.torch_utilities.writers.torch_module_writer", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "draugr.torch_utilities.writers.visdom", "draugr.torch_utilities.writers.visdom.episode_visual", "draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "draugr.torch_utilities.writers.visdom.plotting", "draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "draugr.torch_utilities.writers.visdom.visdom_writer", "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "draugr.tqdm_utilities", "draugr.tqdm_utilities.pooled_progress_bar", "draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "draugr.tqdm_utilities.progress_bar", "draugr.visualisation", "draugr.visualisation.ggplot_utilities", "draugr.visualisation.matplotlib_utilities", "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "draugr.visualisation.matplotlib_utilities.annotate_point", "draugr.visualisation.matplotlib_utilities.decolorise_plot", "draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "draugr.visualisation.matplotlib_utilities.latex_clean_label", "draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "draugr.visualisation.matplotlib_utilities.remove_decoration", "draugr.visualisation.matplotlib_utilities.save_embed_fig", "draugr.visualisation.matplotlib_utilities.use_monochrome_style", "draugr.visualisation.pillow_utilities", "draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "draugr.visualisation.pillow_utilities.np_array_to_pil_img", "draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "draugr.visualisation.pillow_utilities.pil_img_to_np_array", "draugr.visualisation.pillow_utilities.pil_merge_images", "draugr.visualisation.seaborn_utilities", "draugr.visualisation.seaborn_utilities.despine_all", "draugr.visualisation.seaborn_utilities.exponential_moving_average", "draugr.visualisation.seaborn_utilities.set_y_log_scale", "draugr.writers", "draugr.writers.csv_writer", "draugr.writers.csv_writer.CSVWriter", "draugr.writers.databases", "draugr.writers.databases.hdf_writer", "draugr.writers.databases.hdf_writer.HdfWriter", "draugr.writers.databases.sqlite_writer", "draugr.writers.databases.sqlite_writer.SqliteWriter", "draugr.writers.log_writer", "draugr.writers.log_writer.LogWriter", "draugr.writers.mixins", "draugr.writers.mixins.audio_writer_mixin", "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "draugr.writers.mixins.bar_writer_mixin", "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "draugr.writers.mixins.embed_writer_mixin", "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "draugr.writers.mixins.figure_writer_mixin", "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "draugr.writers.mixins.histogram_writer_mixin", "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "draugr.writers.mixins.image_writer_mixin", "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "draugr.writers.mixins.instantiation_writer_mixin", "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "draugr.writers.mixins.line_writer_mixin", "draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "draugr.writers.mixins.mesh_writer_mixin", "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "draugr.writers.mixins.precision_recall_writer_mixin", "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "draugr.writers.mixins.scalar_writer_mixin", "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "draugr.writers.mixins.spectrogram_writer_mixin", "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "draugr.writers.mixins.video_writer_mixin", "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "draugr.writers.mock_writer", "draugr.writers.mock_writer.MockWriter", "draugr.writers.standard_tags", "draugr.writers.standard_tags.TestingCurves", "draugr.writers.standard_tags.TestingScalars", "draugr.writers.standard_tags.TestingTables", "draugr.writers.standard_tags.TrainingCurves", "draugr.writers.standard_tags.TrainingScalars", "draugr.writers.standard_tags.TrainingTables", "draugr.writers.standard_tags.should_plot_y_log_scale", "draugr.writers.standard_tags.should_smooth_series", "draugr.writers.terminal", "draugr.writers.terminal.console_writer", "draugr.writers.terminal.console_writer.ConsoleWriter", "draugr.writers.terminal.terminal_plot_writer", "draugr.writers.terminal.terminal_plot_writer.TerminalWriter", "draugr.writers.writer", "draugr.writers.writer.Writer", "draugr.writers.writer.global_writer", "draugr.writers.writer.set_global_writer", "draugr.writers.writer_utilities", "draugr.writers.writer_utilities.metrics", "Getting Started", "Draugr Documentation"], "terms": {"creat": [0, 2, 3, 10, 11, 16, 19, 20, 22, 24, 27, 29, 30, 32, 34, 35, 37, 38, 42, 43, 44, 47, 51, 55, 56, 61, 72, 74, 78, 85, 88, 94, 95, 100, 101, 104, 109, 114, 115, 117, 119, 125, 127, 129, 131, 134, 137, 139, 144, 147, 151, 152, 153, 156, 160, 172, 188, 189, 199, 202, 206, 209, 230, 236, 237, 239, 242, 244, 266, 282, 287, 288, 289, 291, 292, 294, 296, 301, 308, 324, 326, 327, 329, 337, 350, 351, 353, 357, 362, 366, 368, 374, 375, 377, 378, 380, 390, 396, 401, 406, 410, 415, 416, 418, 419, 422, 423, 434, 435, 436, 438, 439, 443, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 482, 484, 485, 487, 489, 490, 493, 494, 500, 501, 503, 506, 510, 512, 515, 516, 517, 522, 528, 529, 531, 533, 534, 537, 539, 541, 544, 545, 550, 551, 552, 553, 554, 556, 558, 561, 564, 566, 568, 571, 572, 576, 588, 591, 600, 602, 608, 610, 612, 616, 619, 624, 626, 627, 629, 632, 643, 646, 648, 649, 656, 660, 662, 670, 675, 680, 683, 684, 686, 687, 694, 696, 704, 706, 707, 719, 725, 729, 730, 732, 733, 735, 737, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 762, 764, 767, 778, 779, 781, 783, 787], "27": [0, 19, 30, 32, 368, 423, 568, 680, 729, 730, 737, 767, 779, 781, 783, 787], "04": [0, 19, 29, 30, 32, 55, 56, 88, 156, 189, 236, 324, 410, 436, 588, 680, 706, 729, 730, 737, 767, 779, 781, 783, 787], "2019": [0, 19, 20, 24, 27, 30, 32, 95, 202, 266, 396, 401, 479, 480, 482, 493, 494, 515, 516, 517, 572, 627, 629, 632, 646, 675, 680, 684, 729, 730, 737, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 762, 764, 767, 779, 781, 783, 787], "author": [0, 19, 30, 32, 469, 680, 729, 730, 737, 767, 779, 781, 783, 787], "cnheider": [0, 19, 30, 32, 680, 729, 730, 737, 767, 779, 781, 783, 787], "function": [0, 3, 13, 33, 38, 44, 47, 49, 51, 53, 56, 58, 63, 65, 67, 69, 74, 81, 95, 102, 104, 106, 109, 114, 115, 117, 119, 125, 127, 129, 131, 134, 137, 138, 139, 144, 147, 153, 156, 161, 164, 168, 172, 178, 181, 184, 189, 194, 199, 202, 239, 242, 243, 245, 266, 270, 272, 276, 277, 278, 280, 283, 289, 301, 308, 319, 324, 327, 329, 337, 339, 347, 351, 353, 357, 362, 366, 368, 372, 375, 378, 383, 387, 390, 392, 393, 396, 401, 406, 410, 416, 419, 423, 430, 436, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 494, 501, 502, 503, 504, 506, 510, 517, 522, 529, 534, 537, 539, 541, 554, 556, 558, 562, 566, 568, 572, 576, 580, 581, 583, 588, 591, 594, 600, 602, 627, 629, 632, 640, 643, 646, 649, 656, 657, 660, 662, 670, 678, 687, 690, 692, 697, 698, 699, 700, 701, 702, 703, 707, 719, 721, 723, 725, 739, 769, 783, 787], "modul": [0, 2, 10, 15, 18, 29, 34, 37, 46, 55, 61, 73, 89, 94, 100, 101, 115, 133, 151, 152, 160, 188, 190, 191, 193, 206, 236, 244, 269, 275, 282, 287, 288, 291, 296, 297, 299, 325, 326, 350, 374, 377, 382, 395, 415, 418, 429, 433, 434, 438, 445, 449, 450, 452, 453, 455, 456, 458, 459, 460, 461, 462, 464, 466, 467, 468, 470, 471, 473, 474, 476, 477, 478, 479, 484, 489, 493, 500, 502, 505, 511, 512, 516, 524, 528, 533, 544, 550, 551, 552, 553, 555, 557, 565, 571, 578, 582, 584, 585, 587, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 613, 614, 615, 620, 621, 622, 626, 648, 657, 673, 674, 676, 677, 682, 683, 685, 688, 689, 696, 705, 729, 732, 739, 778, 790], "dist": 1, "ani": [1, 21, 23, 25, 26, 28, 31, 33, 57, 71, 91, 92, 93, 112, 115, 183, 214, 238, 268, 367, 391, 397, 400, 402, 403, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 560, 562, 565, 682, 695, 698, 699, 700, 701, 702, 703, 710, 731, 734, 736, 738, 745, 768, 780, 782, 784], "bool": [1, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 50, 64, 66, 83, 97, 99, 107, 111, 112, 113, 115, 165, 190, 191, 200, 271, 279, 281, 295, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 330, 332, 381, 391, 397, 400, 409, 426, 427, 428, 431, 432, 437, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 518, 519, 520, 521, 546, 548, 557, 562, 569, 580, 581, 596, 597, 598, 599, 603, 604, 605, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 630, 636, 645, 682, 688, 695, 711, 717, 731, 734, 736, 738, 761, 768, 776, 777, 780, 782, 784], "sourc": [1, 4, 5, 6, 7, 8, 9, 12, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 39, 40, 41, 45, 48, 50, 52, 54, 57, 59, 60, 64, 66, 68, 70, 71, 75, 76, 77, 79, 80, 82, 83, 85, 87, 91, 92, 93, 96, 97, 98, 99, 103, 105, 107, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 126, 128, 130, 132, 135, 136, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 154, 155, 157, 158, 159, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 186, 187, 190, 191, 192, 195, 196, 197, 200, 201, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 241, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 274, 277, 279, 281, 284, 285, 286, 290, 293, 295, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 325, 328, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 367, 369, 370, 371, 372, 373, 376, 379, 381, 384, 385, 386, 388, 389, 391, 392, 393, 394, 397, 398, 399, 400, 402, 403, 405, 407, 408, 409, 411, 412, 413, 414, 417, 420, 421, 424, 425, 426, 427, 428, 431, 432, 437, 440, 442, 444, 448, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 483, 486, 488, 491, 492, 495, 496, 497, 498, 499, 502, 504, 507, 508, 509, 511, 514, 518, 519, 520, 521, 523, 526, 527, 530, 532, 535, 536, 538, 540, 542, 543, 546, 547, 548, 549, 555, 557, 559, 560, 562, 563, 565, 566, 567, 569, 570, 573, 575, 577, 580, 581, 584, 585, 589, 590, 592, 593, 595, 596, 598, 599, 601, 603, 605, 606, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 628, 630, 631, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 647, 650, 651, 652, 653, 654, 655, 657, 659, 661, 663, 664, 665, 667, 671, 672, 676, 679, 682, 685, 688, 691, 693, 695, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 780, 782, 784, 785, 786, 788], "return": [1, 4, 5, 6, 7, 9, 14, 36, 41, 48, 50, 52, 57, 59, 60, 75, 76, 77, 82, 83, 85, 87, 92, 96, 97, 98, 99, 103, 105, 107, 111, 112, 113, 115, 118, 126, 128, 138, 140, 148, 149, 154, 155, 157, 158, 159, 163, 165, 166, 167, 171, 173, 174, 175, 176, 177, 180, 183, 186, 187, 190, 192, 195, 196, 197, 200, 201, 203, 204, 205, 214, 238, 240, 241, 246, 257, 268, 274, 277, 281, 290, 295, 325, 328, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 352, 354, 355, 356, 358, 359, 360, 361, 367, 376, 379, 381, 388, 391, 392, 393, 394, 397, 400, 403, 407, 408, 409, 411, 412, 413, 414, 432, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 486, 488, 491, 492, 495, 496, 497, 498, 499, 507, 508, 509, 511, 518, 519, 520, 521, 523, 530, 535, 536, 538, 540, 555, 560, 562, 563, 565, 567, 569, 570, 575, 577, 589, 592, 593, 595, 596, 597, 598, 599, 603, 604, 605, 606, 628, 630, 634, 635, 636, 637, 638, 641, 642, 645, 650, 651, 652, 653, 654, 655, 657, 661, 663, 664, 665, 667, 679, 682, 691, 693, 695, 698, 700, 702, 710, 720, 721, 722, 723, 727, 731, 734, 736, 738, 761, 768, 776, 777, 780, 782, 784, 785, 786, 788], "true": [1, 21, 23, 25, 26, 28, 31, 33, 36, 50, 64, 66, 71, 82, 85, 92, 97, 99, 111, 115, 200, 312, 313, 322, 323, 381, 397, 400, 426, 427, 428, 431, 432, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 518, 519, 520, 521, 557, 562, 570, 580, 581, 596, 597, 598, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 645, 682, 688, 695, 717, 731, 734, 736, 738, 761, 768, 780, 782, 784], "given": [1, 85, 115, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 562], "distribut": [1, 18, 449, 682, 743], "an": [1, 5, 85, 103, 107, 115, 162, 169, 170, 179, 182, 185, 190, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 267, 273, 284, 378, 402, 403, 405, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 548, 562, 566, 575, 633, 676, 682, 685, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 763, 766, 782], "edit": 1, "instal": [1, 46, 312, 789], "03": [2, 3, 29, 88, 94, 109, 125, 127, 152, 153, 160, 172, 189, 199, 239, 242, 287, 288, 289, 291, 292, 294, 296, 301, 308, 406, 434, 435, 438, 439, 443, 484, 485, 487, 512, 529, 576, 608, 649, 733, 735], "05": [2, 3, 236, 326, 327, 337, 350, 351, 353, 357, 366, 368, 378, 390, 555, 612, 619, 706], "2021": [2, 3, 16, 22, 34, 35, 55, 56, 119, 125, 127, 131, 134, 236, 237, 239, 324, 326, 327, 337, 350, 351, 353, 357, 362, 366, 368, 378, 390, 418, 419, 422, 423, 434, 435, 436, 438, 439, 443, 506, 510, 561, 588, 649, 670, 706, 707, 725, 733, 735], "class": [3, 4, 5, 11, 12, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 78, 79, 80, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 103, 107, 109, 110, 111, 114, 115, 161, 162, 168, 169, 170, 178, 179, 181, 182, 184, 185, 190, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 283, 284, 292, 293, 294, 295, 308, 309, 329, 330, 362, 363, 364, 368, 369, 370, 371, 378, 379, 380, 381, 404, 405, 421, 430, 431, 437, 439, 440, 441, 442, 443, 444, 447, 448, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 513, 514, 525, 526, 527, 531, 532, 545, 546, 547, 548, 549, 561, 562, 563, 564, 565, 574, 575, 579, 580, 581, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 632, 633, 658, 659, 666, 667, 675, 676, 680, 682, 684, 685, 694, 695, 707, 708, 709, 730, 731, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 779, 780, 781, 782, 783, 784], "valu": [4, 5, 12, 79, 80, 82, 85, 87, 110, 115, 140, 145, 146, 162, 169, 170, 179, 182, 185, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 267, 273, 284, 309, 352, 363, 364, 367, 369, 370, 371, 373, 381, 405, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 532, 557, 562, 565, 566, 569, 633, 682, 695, 708, 709, 729, 731, 734, 736, 738, 743, 749, 751, 755, 761, 763, 765, 768, 770, 771, 772, 773, 774, 775, 780, 782, 784], "base": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 79, 80, 82, 85, 87, 91, 92, 93, 110, 111, 115, 162, 169, 170, 179, 182, 185, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 284, 293, 295, 309, 330, 363, 364, 369, 370, 371, 379, 381, 405, 431, 440, 442, 444, 448, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 477, 478, 481, 483, 486, 488, 491, 492, 514, 526, 527, 532, 546, 547, 548, 549, 562, 563, 565, 575, 580, 581, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 633, 659, 667, 676, 682, 685, 695, 708, 709, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 780, 782, 784], "enum": [4, 5, 110, 162, 169, 170, 179, 182, 185, 208, 267, 273, 284, 309, 363, 364, 369, 370, 371, 405, 633, 682, 708, 709, 751, 765, 770, 771, 772, 773, 774, 775, 776, 777, 782], "s": [4, 21, 23, 25, 26, 28, 31, 33, 85, 115, 372, 379, 417, 431, 432, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 486, 562, 565, 647, 657, 667, 713, 718], "5": [4, 37, 38, 42, 44, 115, 190, 191, 200, 253, 258, 312, 548, 557, 718], "point": [4, 45, 46, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 751], "facial": 4, "landmark": 4, "detector": 4, "__init__": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 79, 80, 82, 85, 87, 91, 92, 93, 110, 111, 115, 162, 169, 170, 179, 182, 185, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 284, 293, 295, 309, 330, 363, 364, 369, 370, 371, 379, 381, 405, 431, 440, 442, 444, 448, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 483, 486, 488, 491, 492, 514, 526, 527, 532, 546, 547, 548, 549, 562, 563, 565, 575, 580, 581, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 633, 659, 667, 676, 682, 685, 695, 708, 709, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 780, 782, 784], "method": [4, 5, 17, 21, 23, 25, 26, 28, 31, 33, 36, 79, 80, 82, 85, 87, 91, 92, 93, 111, 115, 163, 171, 183, 187, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 293, 295, 330, 364, 371, 379, 381, 431, 440, 442, 444, 448, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 483, 486, 488, 491, 492, 514, 526, 527, 546, 547, 548, 549, 562, 563, 565, 575, 580, 581, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625, 659, 667, 676, 682, 685, 695, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 766, 768, 780, 782, 784], "attribut": [4, 5, 21, 23, 25, 26, 28, 31, 33, 82, 85, 87, 92, 110, 111, 115, 162, 169, 170, 179, 182, 185, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 267, 273, 284, 293, 295, 309, 363, 364, 369, 370, 405, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 486, 488, 491, 492, 532, 562, 633, 659, 682, 708, 709, 765, 770, 771, 772, 773, 774, 775], "static": [4, 5, 21, 23, 25, 26, 28, 31, 33, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476, 562, 565, 731, 738], "slice": [4, 5, 115, 481], "seq": [4, 5, 240, 241], "sequenc": [4, 5, 6, 7, 36, 45, 107, 111, 112, 115, 116, 138, 148, 149, 150, 157, 190, 200, 236, 246, 398, 399, 402, 411, 412, 413, 414, 437, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476, 481, 483, 486, 546, 682, 710, 745, 755, 763], "ind": [4, 5, 111], "union": [4, 5, 14, 40, 64, 66, 76, 77, 103, 105, 107, 120, 121, 122, 123, 124, 126, 128, 132, 154, 155, 158, 190, 200, 204, 205, 238, 240, 241, 260, 281, 286, 295, 358, 361, 372, 411, 412, 413, 414, 420, 421, 426, 427, 428, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 535, 536, 538, 540, 542, 543, 603, 604, 628, 636, 645, 682, 695, 712, 715, 717, 723, 727, 731, 734, 736, 738, 741, 751, 757, 761, 766, 768, 780, 782, 784], "tupl": [4, 5, 8, 21, 23, 25, 26, 28, 40, 85, 115, 126, 128, 130, 154, 155, 159, 191, 200, 201, 240, 241, 257, 260, 265, 268, 420, 424, 425, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 486, 488, 491, 492, 504, 535, 536, 538, 540, 542, 543, 562, 603, 604, 723, 731], "paramet": [4, 5, 6, 7, 9, 14, 21, 23, 25, 26, 28, 31, 33, 36, 50, 57, 64, 66, 68, 70, 75, 76, 77, 79, 80, 82, 83, 85, 87, 92, 93, 96, 97, 98, 99, 103, 105, 111, 112, 113, 115, 118, 126, 128, 138, 148, 149, 154, 155, 157, 163, 165, 166, 167, 171, 173, 174, 175, 176, 177, 180, 183, 186, 187, 192, 195, 196, 197, 204, 205, 238, 240, 241, 243, 246, 268, 271, 274, 279, 281, 285, 286, 310, 311, 314, 315, 316, 317, 320, 321, 328, 331, 338, 352, 354, 355, 356, 358, 359, 361, 367, 381, 388, 394, 397, 398, 399, 400, 403, 409, 411, 412, 413, 414, 432, 440, 442, 444, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 495, 496, 497, 498, 499, 504, 511, 518, 519, 520, 521, 523, 530, 535, 536, 538, 540, 555, 557, 560, 562, 563, 565, 573, 575, 577, 580, 581, 589, 590, 592, 593, 595, 596, 597, 598, 599, 628, 630, 634, 636, 637, 638, 650, 651, 652, 653, 654, 655, 657, 661, 663, 664, 665, 667, 676, 679, 682, 685, 688, 691, 693, 695, 710, 718, 720, 726, 727, 728, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 755, 757, 761, 763, 766, 768, 776, 777, 780, 782, 784, 788], "enumer": [5, 162, 169, 170, 179, 182, 185, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 267, 273, 284, 405, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 633, 682, 751, 782], "coordin": [6, 7, 712], "float": [6, 7, 8, 14, 21, 23, 25, 26, 28, 31, 33, 40, 45, 64, 66, 75, 76, 77, 103, 105, 107, 111, 113, 115, 120, 121, 122, 123, 124, 126, 128, 138, 154, 155, 173, 175, 176, 177, 190, 191, 200, 204, 205, 240, 241, 250, 252, 253, 254, 257, 258, 260, 332, 358, 361, 372, 411, 412, 413, 414, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 492, 548, 555, 557, 661, 682, 695, 712, 715, 717, 727, 731, 734, 736, 738, 761, 766, 768, 780, 782, 784], "rect": [8, 14, 192], "take": [8, 115, 452, 467, 491, 492], "bound": [8, 152, 158, 159, 190, 257, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "predict": [8, 115, 478, 504, 566, 682, 759], "convert": [8, 57, 115, 167, 180, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 721], "format": [8, 115, 167, 180, 190, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565], "x": [8, 21, 23, 25, 26, 28, 31, 33, 45, 91, 115, 120, 121, 122, 123, 124, 130, 140, 141, 145, 146, 268, 352, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 498, 562, 566, 661, 710, 715, 718, 721], "y": [8, 21, 23, 25, 26, 28, 31, 33, 115, 141, 562, 710, 715], "w": [8, 115, 126, 128, 159, 440, 442, 444, 540, 562, 682, 715, 723], "h": [8, 126, 128, 159, 195, 196, 197, 540, 682, 723], "shape": [9, 115, 158, 190, 200, 268, 562, 682, 723], "dtype": [9, 115, 421, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 562, 625, 630, 631, 671, 672], "str": [9, 21, 23, 28, 31, 33, 36, 41, 50, 64, 71, 103, 105, 107, 113, 115, 190, 191, 238, 240, 274, 277, 281, 286, 295, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 325, 359, 360, 361, 365, 367, 372, 381, 408, 420, 421, 437, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 486, 488, 511, 523, 596, 597, 598, 601, 603, 604, 605, 628, 636, 641, 642, 645, 679, 682, 685, 688, 695, 713, 715, 717, 722, 723, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 755, 757, 759, 761, 763, 766, 768, 780, 782, 784], "int": [9, 14, 21, 23, 25, 26, 28, 31, 33, 40, 45, 64, 66, 76, 77, 79, 80, 92, 111, 115, 120, 121, 122, 123, 124, 126, 128, 130, 132, 135, 138, 148, 154, 155, 166, 180, 190, 191, 200, 203, 204, 205, 238, 240, 241, 246, 259, 260, 271, 277, 279, 281, 286, 328, 331, 332, 334, 335, 338, 352, 358, 360, 361, 367, 372, 381, 391, 392, 393, 397, 398, 399, 400, 402, 407, 409, 411, 412, 413, 414, 417, 420, 421, 424, 425, 426, 427, 428, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 483, 486, 488, 502, 504, 514, 535, 536, 538, 540, 542, 543, 547, 562, 580, 581, 634, 637, 645, 647, 657, 665, 679, 682, 685, 688, 695, 712, 715, 717, 723, 727, 731, 734, 736, 738, 743, 745, 747, 749, 755, 759, 761, 763, 766, 768, 780, 782, 784], "30": [10, 11, 14, 115, 241, 682, 766], "01": [10, 11, 16, 22, 34, 35, 43, 51, 70, 117, 119, 131, 134, 151, 188, 206, 209, 230, 237, 244, 266, 282, 324, 362, 377, 423, 471, 484, 485, 487, 576], "2022": [10, 11, 43, 117, 209, 230, 288, 289, 790], "todo": [12, 33, 392, 393, 435, 440, 442, 444, 566, 567, 682], "implement": [12, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 682, 739], "pair": [12, 85], "wise": [12, 115], "imag": [14, 23, 57, 103, 107, 115, 165, 166, 167, 173, 174, 175, 176, 177, 180, 190, 191, 200, 210, 246, 257, 260, 440, 442, 444, 449, 491, 492, 546, 547, 548, 549, 682, 720, 721, 722, 723, 724, 741, 751, 757, 766, 782], "grai": [14, 167, 187], "predictor": 14, "desired_left_ey": 14, "0": [14, 21, 23, 25, 26, 28, 31, 33, 45, 75, 77, 82, 103, 105, 107, 111, 113, 115, 138, 140, 141, 158, 159, 180, 186, 190, 191, 200, 216, 238, 240, 241, 253, 254, 258, 260, 277, 281, 358, 361, 367, 388, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 492, 514, 535, 538, 542, 543, 548, 557, 562, 566, 575, 665, 682, 688, 718, 727, 738, 790], "35": 14, "desired_face_s": 14, "none": [14, 21, 23, 25, 26, 28, 31, 33, 40, 48, 52, 64, 66, 70, 75, 76, 82, 85, 92, 103, 105, 107, 115, 126, 128, 130, 132, 141, 190, 191, 200, 205, 238, 271, 277, 279, 281, 285, 286, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 333, 361, 367, 381, 417, 421, 437, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 491, 492, 502, 507, 508, 509, 538, 547, 555, 557, 562, 565, 569, 570, 575, 580, 581, 592, 593, 595, 598, 599, 603, 604, 605, 606, 613, 614, 615, 630, 631, 636, 638, 639, 644, 676, 682, 685, 688, 695, 710, 711, 714, 716, 717, 718, 723, 726, 728, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 766, 768, 780, 782, 784, 786], "pad": [14, 535, 538, 542, 547], "debug": 14, "fals": [14, 17, 21, 28, 33, 36, 82, 107, 112, 113, 115, 190, 191, 271, 279, 281, 310, 311, 313, 314, 315, 316, 317, 330, 332, 381, 391, 426, 427, 428, 431, 432, 437, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548, 562, 581, 598, 599, 605, 618, 630, 636, 682, 695, 711, 717, 723, 731, 734, 736, 738, 761, 768, 780, 782, 784], "For": [15, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481], "displai": [15, 575, 724], "blit": 15, "plot": [15, 18, 26, 31, 73, 437, 557, 566], "screen": 15, "util": [15, 18, 89, 94, 100, 101, 133, 151, 395, 415, 418, 429, 433, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 502, 626, 696, 705, 721, 723], "draw": [15, 17, 18, 21, 23, 25, 26, 28, 31, 33, 36], "real": [15, 18, 26, 115, 281], "time": [15, 18, 26, 28, 33, 115, 281, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 538, 565, 566, 596, 597, 630, 636, 682], "data": [15, 18, 21, 23, 25, 26, 28, 31, 33, 36, 87, 103, 111, 115, 491, 492, 502, 504, 546, 547, 566, 682, 741, 751, 757, 766, 782], "stream": [15, 18, 238, 729], "figur": [15, 18, 21, 23, 25, 26, 28, 31, 33, 440, 442, 444, 682, 747], "also": [15, 18, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "some": [15, 18, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566, 645], "gener": [15, 18, 75, 76, 77, 115, 372, 491, 492, 566, 647, 698, 700, 702], "classif": [15, 18], "metric": [15, 18, 682, 729, 753], "25": [16, 34, 35, 64, 66, 109, 138, 152, 160, 172, 237, 350, 351, 353, 357, 366, 529], "verbos": [17, 36, 107, 112, 113, 271, 279, 330, 332, 381, 391, 431, 432, 581, 598, 605, 630, 636, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "object": [17, 59, 80, 82, 85, 87, 91, 92, 111, 115, 190, 191, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 293, 381, 437, 442, 448, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 526, 527, 546, 547, 548, 549, 562, 563, 565, 575, 657, 659, 667], "descript": [17, 21, 23, 25, 26, 28, 31, 33, 36, 39, 40, 71, 79, 80, 82, 85, 87, 111, 115, 116, 130, 132, 135, 136, 142, 143, 150, 191, 238, 249, 250, 251, 252, 253, 254, 255, 258, 259, 265, 293, 295, 309, 312, 318, 319, 322, 323, 365, 369, 370, 371, 379, 384, 385, 386, 389, 417, 424, 425, 427, 428, 448, 452, 458, 459, 460, 461, 464, 467, 468, 469, 476, 483, 486, 488, 491, 492, 502, 532, 542, 543, 559, 563, 565, 575, 580, 581, 584, 585, 601, 621, 631, 644, 671, 672, 682, 695, 708, 709, 712, 715, 716, 731, 734, 736, 738, 753, 759, 761, 768, 770, 771, 772, 773, 774, 775, 780, 782, 784], "abstract": [17, 93, 486, 488, 676, 685, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 763, 766], "arg": [17, 85, 92, 93, 103, 115, 158, 159, 190, 200, 201, 248, 260, 293, 295, 379, 398, 399, 431, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 546, 547, 548, 562, 565, 667], "kwarg": [17, 21, 23, 25, 26, 31, 33, 85, 92, 93, 115, 163, 171, 183, 187, 201, 293, 295, 379, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 667, 676, 682, 685, 688, 698, 699, 700, 701, 702, 703, 731, 738, 741, 743, 745, 747, 749, 751, 755, 757, 763, 766, 782], "matplotlib": [18, 26, 437], "us": [18, 91, 92, 115, 167, 180, 352, 378, 392, 393, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 491, 492, 504, 557, 562, 565, 566, 607], "multi": [18, 367, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 473, 474, 476, 478], "seri": [18, 295, 372], "scroll": 18, "discret": [18, 486], "waterfal": 18, "fft": [18, 31, 33], "evalu": [18, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 609, 620, 622, 625], "overview": 18, "22": [20, 22, 27, 37, 38, 42, 44, 115, 380], "11": [20, 27, 100, 101, 115, 415, 416, 522, 612, 619, 629, 632, 759, 790], "window_length": [21, 28], "option": [21, 23, 25, 26, 28, 31, 33, 40, 64, 66, 70, 76, 105, 115, 126, 128, 132, 141, 190, 191, 200, 205, 238, 243, 277, 281, 312, 320, 321, 322, 367, 381, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 538, 546, 547, 548, 565, 569, 580, 581, 596, 597, 599, 605, 606, 613, 614, 615, 630, 636, 682, 695, 714, 717, 723, 726, 728, 731, 734, 736, 738, 745, 755, 761, 763, 768, 780, 782, 784, 785], "titl": [21, 23, 28, 31, 33, 36, 281, 437], "data_label": [21, 28], "magnitud": [21, 28, 682, 755, 763], "revers": [21, 28, 33, 115], "overwrit": [21, 28], "render": [21, 23, 25, 26, 28, 31, 33, 36], "bin": [21, 682], "rang": 21, "densiti": 21, "weight": [21, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566, 682, 727], "cumul": [21, 115], "bottom": [21, 540], "histtyp": 21, "bar": [21, 682, 697, 698, 699, 700, 701, 702, 703, 714, 743], "align": [21, 33, 115, 566], "mid": 21, "orient": 21, "vertic": [21, 33, 682], "rwidth": 21, "log": [21, 82, 83, 566, 682, 729, 738], "color": [21, 57, 160, 200, 208, 240, 241, 372, 373, 437, 682, 711, 715, 718], "label": [21, 103, 107, 159, 190, 200, 216, 257, 504, 566, 667, 713], "stack": 21, "default_delta": [21, 23, 25, 26, 28], "008333333333333333": [21, 23, 25, 26, 28], "placement": [21, 23, 25, 26, 28, 31, 33, 240, 241], "mpldrawer": [21, 23, 28, 31, 33], "close": [21, 23, 25, 26, 28, 31, 33, 92, 115, 682, 695, 731, 734, 736, 738, 768, 780, 782, 784], "delta": [21, 23, 25, 26, 28, 31, 33, 252, 254], "move_figur": [21, 23, 25, 26, 28, 31, 33], "move": [21, 23, 25, 26, 28, 31, 33, 45, 115, 277, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "upper": [21, 23, 25, 26, 28, 31, 33, 115, 253, 258], "left": [21, 23, 25, 26, 28, 31, 33, 115, 540], "corner": [21, 23, 25, 26, 28, 31, 33, 204], "pixel": [21, 23, 25, 26, 28, 31, 33, 40, 216], "n": [21, 23, 25, 26, 28, 31, 33, 79, 80, 115, 122, 190, 200, 312, 397, 400, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 502, 682], "fig_manag": [21, 23, 25, 26, 28, 31, 33], "pyplot": [21, 23, 25, 26, 28, 31, 33], "get_current_fig_manag": [21, 23, 25, 26, 28, 31, 33], "geom": [21, 23, 25, 26, 28, 31, 33], "window": [21, 23, 25, 26, 28, 31, 33, 691], "geometri": [21, 23, 25, 26, 28, 31, 33], "dx": [21, 23, 25, 26, 28, 31, 33], "dy": [21, 23, 25, 26, 28, 31, 33], "getrect": [21, 23, 25, 26, 28, 31, 33], "setgeometri": [21, 23, 25, 26, 28, 31, 33], "setposit": [21, 23, 25, 26, 28, 31, 33], "500": [21, 23, 25, 26, 28, 31, 33, 575], "cmap": [23, 33, 437], "norm": 23, "aspect": 23, "interpol": [23, 268], "alpha": [23, 190, 200, 557], "vmin": 23, "vmax": 23, "origin": [23, 257], "extent": 23, "interpolation_stag": 23, "filternorm": 23, "filterrad": 23, "4": [23, 115, 158, 190, 201, 562, 727], "resampl": [23, 130], "url": 23, "event": [23, 440, 442, 444, 481], "21": [24, 104, 115, 242, 396, 490, 591, 626, 648, 660], "09": [24, 47, 61, 72, 95, 374, 375, 479, 480, 482, 493, 494, 516, 517, 627, 646, 675, 684, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 762, 764], "mock": [25, 729], "accept": [25, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "noth": 25, "time_label": 28, "2020": [29, 47, 51, 61, 72, 74, 78, 88, 94, 100, 101, 104, 109, 114, 129, 137, 139, 144, 147, 151, 152, 153, 156, 160, 172, 188, 189, 199, 206, 242, 244, 282, 287, 291, 292, 294, 296, 301, 308, 329, 374, 375, 377, 406, 410, 415, 416, 471, 475, 484, 485, 487, 489, 490, 500, 501, 503, 512, 522, 528, 529, 533, 534, 537, 539, 541, 544, 545, 550, 551, 552, 553, 554, 556, 558, 564, 566, 568, 571, 576, 591, 600, 602, 608, 610, 612, 616, 619, 624, 626, 643, 648, 656, 660, 662, 683, 686, 687, 696, 704, 719], "n_fft": [31, 33, 682], "64": [31, 33, 464], "sampling_r": [31, 33, 421, 424, 425], "2000": [31, 33], "figure_s": [31, 33], "9": [31, 33, 115, 694, 732, 778], "last": [31, 85, 115, 575], "comput": [31, 79, 87, 158, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 575, 634], "fig_siz": [31, 33], "buffer_size_sec": 33, "1": [33, 57, 79, 80, 111, 115, 140, 141, 158, 200, 204, 214, 216, 240, 241, 253, 258, 260, 360, 381, 388, 420, 421, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 535, 536, 538, 540, 542, 543, 557, 562, 565, 566, 575, 682, 718, 723, 734, 736, 751, 761, 768, 780, 784, 790], "viridi": 33, "center": [33, 126, 128, 246], "mayb": [33, 334], "mimick": 33, "librosa": 33, "stft": 33, "short": [33, 115], "fourier": 33, "transform": [33, 217, 491, 492, 546, 547, 548, 549], "step": [33, 115, 440, 442, 444, 478, 481, 682, 685, 688, 741, 743, 745, 747, 749, 751, 755, 757, 759, 763, 766, 782], "size": [33, 115, 130, 204, 205, 217, 259, 398, 399, 400, 402, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 547, 657, 714, 715], "lenght": 33, "han": 33, "smooth": 33, "7": [37, 38, 42, 44, 111, 115, 380], "path": [39, 64, 66, 68, 70, 103, 105, 107, 113, 115, 281, 304, 312, 322, 420, 421, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 589, 590, 592, 593, 595, 596, 597, 598, 599, 603, 604, 605, 606, 679, 682, 717, 731, 738], "scale": [39, 40], "60": 39, "ndarrai": [40, 57, 96, 97, 98, 99, 111, 115, 116, 118, 126, 128, 130, 135, 136, 140, 141, 142, 143, 145, 146, 157, 158, 159, 173, 174, 175, 176, 177, 186, 187, 190, 200, 204, 205, 240, 241, 246, 281, 420, 421, 424, 425, 426, 427, 428, 481, 682, 712, 721, 723, 741, 751, 757, 766, 782, 788], "max_val": [40, 277], "list": [40, 41, 45, 83, 103, 115, 190, 203, 248, 365, 367, 372, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 565, 682, 699, 701, 703, 727, 743, 749, 755, 759, 763], "output": [41, 115, 145, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 547, 562, 565, 566, 729], "join": 41, "nest": [41, 115, 116, 214, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565], "newlin": 41, "24": [43, 475], "length": [45, 85, 115, 135, 483], "distanc": [45, 217], "between": [45, 115, 201, 227, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "max": [45, 82, 115, 257], "min": [45, 82, 115, 257, 372], "equal": [45, 115, 159, 378, 481, 581], "entri": [46, 103, 107, 115, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 575], "eas": 46, "start": [46, 54, 115, 238, 566, 790], "tensorboard": [46, 433, 435, 438, 673, 727], "visdom": [46, 54, 729], "process": [46, 92, 407, 429, 697], "16": [47, 74, 115, 147, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "type": [48, 50, 52, 57, 59, 60, 75, 76, 77, 82, 83, 85, 87, 96, 97, 98, 99, 111, 112, 115, 118, 154, 155, 157, 163, 165, 166, 167, 171, 173, 174, 175, 176, 177, 180, 183, 186, 187, 190, 191, 192, 195, 196, 197, 203, 204, 205, 210, 227, 243, 246, 274, 277, 281, 312, 340, 341, 342, 343, 344, 345, 346, 372, 376, 379, 381, 388, 391, 394, 411, 412, 413, 414, 421, 431, 432, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 495, 496, 497, 498, 499, 502, 507, 508, 509, 518, 519, 520, 521, 530, 535, 536, 538, 540, 546, 547, 555, 560, 565, 575, 577, 580, 581, 628, 630, 634, 635, 636, 637, 641, 642, 650, 651, 652, 653, 654, 655, 657, 667, 679, 682, 693, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784, 785, 786, 788], "keep_al": 50, "use_asyncio": 50, "param": [50, 87, 91, 103, 105, 107, 277, 310, 311, 312, 313, 314, 315, 316, 317, 332, 352, 360, 391, 392, 393, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 540, 569, 570, 645, 676, 722, 743, 745, 747, 749, 755, 763, 766, 782], "10": [51, 95, 115, 120, 123, 202, 240, 248, 396, 401, 426, 427, 428, 466, 468, 473, 479, 480, 482, 493, 494, 502, 504, 515, 516, 517, 566, 572, 610, 616, 627, 646, 675, 683, 684, 687, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 762, 764], "Will": 54, "server": [54, 729], "ob": 57, "3": [57, 111, 115, 201, 214, 240, 241, 352, 358, 360, 361, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682, 718, 751], "channel": [57, 190, 200, 260, 449, 478, 546, 682], "observ": [57, 645], "grayscal": 57, "uint8": [57, 115, 682], "numpi": [57, 94, 115, 190, 200, 421, 562, 628, 667, 721, 723], "arrai": [57, 115, 159, 186, 190, 200, 402, 481, 721, 723, 788], "conform": 57, "observation_spac": 57, "version": [57, 115, 201, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 790], "repres": [57, 562], "17": [61, 72, 114, 115, 129, 137, 139, 144, 301, 308, 326, 327, 337, 374, 375, 438, 439, 443, 512, 545, 719], "file_path": 64, "frame_out_dir": 64, "audio_out_dir": 64, "rate": [64, 449, 575], "frame_format": 64, "jpg": [64, 103, 107], "extract_sound": 64, "ffmpeg_path": [64, 66, 70], "ffmpeg": [64, 66, 70], "frames_dir": [66, 68], "merge_audio": 66, "audio_dir": 66, "merge_dir": 66, "merge_r": 66, "video_path": 70, "start_tim": 70, "40": [70, 115], "00": 70, "stop_tim": 70, "50": [70, 566], "split_dir": 70, "append_tim": 71, "aggreg": [73, 440, 442, 444], "accumul": 73, "collect": [73, 639], "summari": [73, 440, 442, 444], "02": [74, 117, 131, 209, 230, 288, 289, 418, 419, 422, 475, 500, 501, 550, 561, 600, 626, 648, 660, 662, 670, 707], "start_valu": [75, 76, 77], "lambd": [75, 82, 264], "99": [75, 82], "28": [78, 401, 515, 571, 610, 649, 656], "06": [78, 506, 510, 555, 568, 588, 616, 624, 656, 661, 725], "store": [79, 80, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565, 630, 636], "averag": [79, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "current": [79, 80, 115, 249, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 575], "reset": [79, 80, 580, 581], "updat": [79, 80, 85, 115, 238, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "val": [79, 80, 87, 115], "measur": [82, 85, 566, 657], "statisticserror": [82, 85], "fmean": [82, 85], "geometric_mean": [82, 85], "harmonic_mean": [82, 85], "mean": [82, 85, 87, 115, 141, 145, 146, 250, 265, 360, 440, 442, 444, 498, 546, 566], "median": [82, 85], "median_group": [82, 85], "median_high": [82, 85], "median_low": [82, 85], "mode": [82, 85, 115, 190, 257, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 523, 562, 765], "multimod": [82, 85], "pstdev": [82, 85], "pvarianc": [82, 85], "quantil": [82, 85], "stdev": [82, 85], "varianc": [82, 85, 87, 115, 141], "keep_measure_histori": [82, 85], "use_disk_cach": [82, 85], "add": [82, 92, 277, 348, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "append": [82, 85, 87], "calc_moving_averag": 82, "window_s": [82, 87], "100": [82, 87, 92, 391, 392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "calc_running_valu": 82, "new_val": 82, "properti": [82, 85, 87, 92, 115, 293, 295, 452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476, 486, 488, 682], "rtype": [82, 85, 87, 92, 214, 290, 407, 452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476, 486, 488, 682], "save": [82, 85, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566, 598, 717], "stat_nam": 82, "project_nam": [82, 83, 325], "non": [82, 115, 216, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566, 609], "config_nam": [82, 83], "directori": [82, 83, 103, 105, 107, 491, 492], "metricaggreg": 83, "metric_nam": 83, "posixpath": [83, 440, 442, 444, 682, 731, 738], "signal": [85, 133, 135, 136, 140, 141, 142, 143, 145, 146, 150, 421, 424, 425, 426, 427, 428, 691], "dict": [85, 103, 105, 107, 111, 112, 113, 190, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 486, 488, 565, 575, 667, 682], "add_metr": 85, "name": [85, 115, 190, 277, 367, 392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492], "clear": [85, 115, 609], "remov": [85, 115, 159, 349, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "all": [85, 115, 214, 216, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 540, 562, 565, 566], "item": [85, 103, 107, 115, 481], "from": [85, 103, 115, 167, 180, 190, 191, 238, 349, 363, 367, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 514, 562, 566, 575], "d": [85, 115, 128, 431, 432, 562], "copi": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 645], "shallow": 85, "fromkei": 85, "new": [85, 87, 115, 367, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "dictionari": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565], "kei": [85, 115, 391, 429, 431, 432, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565], "iter": [85, 92, 103, 105, 107, 113, 115, 149, 243, 271, 274, 279, 281, 286, 381, 397, 400, 403, 426, 427, 428, 431, 432, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 514, 566, 569, 570, 682, 698, 699, 700, 701, 702, 703, 727, 734, 736, 761, 768, 780, 784], "set": [85, 103, 107, 111, 115, 158, 214, 295, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 562, 566, 613, 614, 615, 659, 711], "get": [85, 92, 115, 216, 408, 481, 565, 566, 657, 790], "default": [85, 115, 167, 180, 277, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 548, 562, 566, 714, 722], "els": 85, "pop": 85, "k": [85, 115, 195, 196, 197, 718], "v": [85, 115], "specifi": [85, 115, 260, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 514], "correspond": [85, 115, 159, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "If": [85, 115, 214, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566, 657], "found": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "otherwis": [85, 91, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "keyerror": 85, "rais": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "popitem": 85, "2": [85, 111, 115, 121, 124, 140, 173, 175, 176, 177, 190, 191, 214, 240, 241, 260, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 538, 562], "ar": [85, 115, 210, 214, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 565, 566, 657], "lifo": 85, "first": [85, 115, 562, 566, 630, 636], "out": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 538, 546, 548, 562], "order": [85, 103, 107, 115, 260, 285, 379, 403, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 649, 698, 699], "empti": [85, 115, 639], "remove_metr": 85, "setdefault": 85, "insert": [85, 115, 367], "e": [85, 115, 158, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 546, 547, 548, 562, 565, 566], "f": [85, 115, 392, 393], "present": [85, 295], "ha": [85, 92, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 562, 566, 609], "doe": [85, 115, 373, 378, 481, 546, 548, 555, 714], "lack": 85, "In": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 565], "either": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "case": [85, 115, 565, 596, 597], "thi": [85, 92, 115, 214, 281, 378, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 504, 546, 548, 562, 566, 596, 597, 657], "follow": [85, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "provid": [85, 115, 281, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 676, 682, 685, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 763, 766], "view": [85, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "moving_averag": 87, "running_averag": 87, "run": [87, 429, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "piec": 87, "multiprocess": [89, 91, 92], "cloudpickl": 91, "serial": [91, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "content": [91, 115, 562], "tri": [91, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pickl": [91, 115, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "variabl": [91, 115, 562, 575], "you": [91, 115, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "wish": 91, "wrap": [91, 201, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 514, 565], "func": [92, 391, 562], "max_queue_s": 92, "n_proc": 92, "max_tasks_per_child": 92, "fill_at_construct": 92, "block": [92, 115, 473], "workaround": 92, "python": [92, 115, 440, 442, 444], "extrem": [92, 214], "slow": 92, "interprocess": 92, "commun": 92, "pipe": 92, "The": [92, 103, 107, 115, 141, 158, 367, 408, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 562, 565, 566, 682], "ideal": 92, "solut": 92, "would": [92, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 562], "queue": [92, 93], "appar": 92, "band": 92, "limit": [92, 115], "complet": 92, "task": [92, 93], "batch": [92, 149, 402, 546, 547, 548, 549, 566, 682], "thread": [92, 238], "result": [92, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pool": [92, 93], "fill": [92, 115, 190], "maybe_fil": 92, "full": [92, 115, 214, 562], "put": [92, 115, 214], "re": [92, 402, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 514, 566], "queue_siz": 92, "raise_error": 92, "excptn": 92, "termin": [92, 729], "abc": [93, 452, 676, 685, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 766], "interfac": [93, 115, 238, 676, 682, 685, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 763, 766], "call": [93, 115, 277, 392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 504, 562, 565, 575, 630, 636, 639, 657], "26": [94, 362, 506, 510, 725], "inp": [96, 97, 98, 99, 411, 412, 413, 414], "unnormalis": [97, 111, 518, 519], "normalis": [99, 141, 190, 420, 421, 449, 520, 521], "12": [100, 101, 115, 137, 139, 144, 147, 266, 329, 378, 390, 415, 416, 500, 501, 600, 643, 696, 704], "validation_percentag": [103, 105, 107, 113], "15": [103, 105, 107, 113, 115, 410, 471, 492, 550, 624, 629, 632, 707], "testing_percentag": [103, 105, 107, 113], "extens": [103, 105, 107, 115, 281, 491, 492], "png": [103, 107, 722], "jpeg": [103, 107], "gif": [103, 107], "is_valid_fil": [103, 105, 107, 491, 492], "callabl": [103, 105, 107, 243, 264, 277, 372, 391, 392, 393, 432, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 502, 555, 560, 580, 581, 698, 699, 700, 701, 702, 703], "build": [103, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "train": [103, 107, 111, 257, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 492, 557, 566, 609, 620, 622, 625], "file": [103, 115, 440, 442, 444, 478, 491, 492, 673, 729], "system": [103, 348, 349], "analyz": 103, "sub": [103, 115], "folder": 103, "split": [103, 107, 488, 492], "them": [103, 115, 214, 452, 467, 562], "stabl": [103, 115, 437], "test": [103, 107, 111, 115, 504], "valid": [103, 107, 111, 159, 491, 492], "structur": [103, 115], "describ": [103, 115], "each": [103, 107, 115, 190, 216, 257, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 546, 547, 562], "image_directori": 103, "string": [103, 115, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492], "contain": [103, 107, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 477, 478, 566, 575], "subfold": [103, 107], "integ": [103, 115], "percentag": [103, 111, 330, 332], "reserv": 103, "ordereddict": [103, 107, 113, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565, 788], "within": [103, 107, 115, 381, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "defin": [103, 107, 115, 452, 467, 562, 657], "indic": [103, 107, 111, 115, 562], "07": [104, 114, 119, 129, 329, 489, 490, 503, 528, 533, 534, 537, 539, 541, 544, 545, 551, 552, 553, 554, 556, 558, 564, 566, 571, 591, 602, 683, 686, 687, 719], "splitenum": [107, 111, 112, 486, 488, 492], "select": [110, 115, 437, 449, 565, 634], "dataset_length": 111, "part": [111, 115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504], "select_shuffled_split_indic": 111, "seed": [111, 115, 132], "select_testing_indic": 111, "select_train_indic": 111, "select_validation_indic": 111, "shuffled_indic": 111, "num": [111, 331], "floor": 111, "data_cat_split": 112, "categori": [113, 190, 486], "magic": 113, "hash": 113, "small": 115, "t": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 562, 566, 663, 682, 710, 712], "transpos": [115, 566], "same": [115, 216, 378, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 562, 566], "self": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 575, 682], "exampl": [115, 248, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 562, 566], "np": [115, 159], "axi": [115, 360], "keepdim": 115, "where": [115, 367, 481, 491, 492, 566], "element": [115, 373], "refer": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 555, 630, 636], "document": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "equival": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "argmax": 115, "maximum": [115, 372], "along": 115, "argmin": 115, "minimum": [115, 566], "detail": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "argpartit": 115, "kth": 115, "kind": 115, "introselect": 115, "partit": 115, "8": [115, 190, 191, 380], "argsort": 115, "sort": [115, 491, 492, 562], "astyp": 115, "cast": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "unsaf": 115, "subok": 115, "dpython": 115, "typecod": 115, "which": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 566, 575], "c": [115, 214, 431, 432, 562, 657, 682, 723, 751], "A": [115, 158, 367, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 566, 649], "control": 115, "memori": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 634, 645, 657], "layout": 115, "fortran": 115, "contigu": 115, "appear": 115, "possibl": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 557], "equiv": 115, "safe": 115, "same_kind": 115, "what": [115, 566], "mai": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "occur": 115, "backward": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 557, 562, 566], "compat": [115, 201, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "should": [115, 190, 200, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 562, 566, 575, 682], "onli": [115, 214, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "byte": [115, 295, 440, 442, 444, 657, 720, 722], "chang": [115, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 667], "allow": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 739], "can": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 557, 562, 565, 566], "preserv": 115, "like": [115, 367, 403, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 566, 727], "float64": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "float32": [115, 421, 546, 547, 625], "convers": [115, 167, 208, 449, 711], "done": [115, 566, 567], "pass": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 562, 566, 657], "through": [115, 557, 562], "forc": 115, "By": 115, "alwai": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "newli": 115, "alloc": [115, 334], "requir": [115, 562], "satisfi": 115, "input": [115, 145, 146, 257, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548, 562, 566, 765], "instead": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "arr_t": 115, "unless": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "other": [115, 407, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566, 751], "condit": 115, "see": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "note": [115, 407, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548, 580, 581, 609], "simpl": [115, 187, 312, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "one": [115, 452, 467, 481, 562, 565, 566, 724], "multipl": [115, 158], "field": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "numer": [115, 555], "long": 115, "enough": 115, "complexwarn": 115, "when": [115, 277, 352, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 645], "complex": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "To": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 566], "avoid": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504], "own": [115, 216, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "its": [115, 159, 216, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 566], "whose": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 657], "share": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 562], "byteswap": 115, "inplac": [115, 414, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548, 562, 603, 604], "swap": [115, 260], "toggl": 115, "low": [115, 649], "endian": 115, "big": 115, "represent": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "place": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548, 562, 566], "imaginari": 115, "number": [115, 120, 121, 122, 123, 124, 352, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 514, 566], "individu": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "256": [115, 476], "8755": 115, "int16": 115, "map": [115, 190, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 697, 698, 699, 700, 701, 702, 703, 753, 755, 763], "hex": 115, "0x1": 115, "0x100": 115, "0x2233": 115, "13090": 115, "0x3322": 115, "b": [115, 158, 195, 196, 197, 478, 481, 562, 682], "ceg": 115, "fac": 115, "s3": 115, "newbyteord": 115, "produc": 115, "differ": [115, 402, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 557, 714], "choos": 115, "choic": 115, "index": [115, 367, 440, 442, 444, 491, 492, 790], "construct": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "clip": [115, 741, 766], "One": [115, 566], "must": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 630, 636], "compress": [115, 440, 442, 444], "conj": 115, "conjug": 115, "conjugate_transpos": 115, "match": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "veri": [115, 378], "similar": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "have": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 514, 562, 566], "argument": [115, 257, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 565], "copyto": 115, "6": [115, 205], "flag": [115, 216, 281], "c_contigu": 115, "ctype": 115, "simplifi": 115, "interact": [115, 745], "make": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 548], "easier": 115, "librari": 115, "among": 115, "stride": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 535, 536, 538, 542, 543], "below": [115, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "themselv": 115, "possess": 115, "etc": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566, 667], "ctypeslib": 115, "public": 115, "were": [115, 562], "guid": [115, 790], "we": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 562, 566], "omit": 115, "undocu": 115, "well": [115, 216, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566, 714], "privat": 115, "_ctype": 115, "pointer": 115, "area": [115, 158], "correct": [115, 562, 566], "even": 115, "writeabl": 115, "respect": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 711], "arbitrari": 115, "code": [115, 208, 566, 722], "troubl": 115, "includ": [115, 381, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "crash": 115, "user": [115, 310, 311, 312, 313, 314, 315, 316, 317, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 682, 738], "bewar": 115, "exactli": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "_array_interface_": 115, "unlik": 115, "data_a": 115, "kept": 115, "c_void_p": 115, "dealloc": 115, "spelt": 115, "ndim": 115, "basetyp": 115, "p": [115, 548], "platform": 115, "could": [115, 407], "c_int": 115, "c_long": 115, "c_longlong": 115, "depend": [115, 566], "c_intp": 115, "accordingli": 115, "underli": 115, "inform": [115, 190, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 566], "import": [115, 363], "show": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "how": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 657], "mani": [115, 562], "jump": 115, "next": [115, 120, 121, 122, 123, 124, 566], "obj": [115, 565, 657], "particular": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "_as_parameter_": 115, "perhap": 115, "want": [115, 566], "c_doubl": 115, "keep": [115, 481], "shape_a": 115, "c_short": 115, "strides_a": 115, "avail": [115, 364, 504, 614, 634], "still": [115, 214, 407, 562, 566], "someth": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "error": [115, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 714], "as_paramet": 115, "int32": 115, "31962608": 115, "vari": 115, "c_uint32": 115, "__main__": 115, "lp_c_uint": 115, "0x7ff2fc1fc200": 115, "c_uint": 115, "c_uint64": 115, "c_ulong": 115, "4294967296": 115, "core": [115, 330, 363, 372], "_intern": 115, "c_long_array_2": 115, "0x7ff2fc1fce60": 115, "0x7ff2fc1ff320": 115, "cumprod": 115, "product": 115, "cumsum": 115, "sum": [115, 566], "buffer": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "diagon": 115, "offset": 115, "axis1": 115, "axis2": 115, "read": [115, 238, 435, 442, 790], "previou": 115, "futur": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "restrict": 115, "dot": 115, "two": [115, 158, 214, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 555, 566, 724], "ey": 115, "ones": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "conveni": 115, "chain": [115, 378], "dump": 115, "back": [115, 367], "load": [115, 491, 492, 575, 596, 597, 598, 723], "pathlib": [115, 421, 491, 492], "now": [115, 392, 393, 440, 442, 444, 473, 562], "scalar": [115, 367, 682, 695, 727, 731, 734, 736, 738, 761, 768, 780, 782, 784], "assign": [115, 216], "about": [115, 481, 566], "singl": [115, 158, 167, 180, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 540, 566], "style": 115, "segment": 115, "f_contigu": 115, "o": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 718], "owndata": 115, "borrow": 115, "anoth": [115, 214, 481, 657], "written": 115, "lock": 115, "inherit": [115, 667], "creation": [115, 449, 596, 597], "subsequ": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "while": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "remain": 115, "opposit": 115, "made": [115, 562], "howev": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "alreadi": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "so": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 566], "under": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "circumst": 115, "alter": 115, "via": 115, "previous": 115, "onto": 115, "attempt": 115, "runtimeerror": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "except": 115, "appropri": 115, "hardwar": 115, "writebackifcopi": 115, "api": [115, 228], "pyarray_resolvewritebackifcopi": 115, "befor": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "u": [115, 789], "updateifcopi": 115, "deprec": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "fnc": 115, "behav": 115, "ca": 115, "carrai": 115, "fa": 115, "farrai": 115, "access": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "lowercas": 115, "support": [115, 440, 442, 444, 473], "direct": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "setflag": 115, "cannot": [115, 566], "arbitrarili": 115, "truli": 115, "ultim": 115, "owner": 115, "expos": [115, 739], "both": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 566], "simultan": 115, "dimension": [115, 649, 745], "higher": 115, "dimens": [115, 478, 566], "arr": [115, 665], "dim": [115, 665], "It": [115, 214, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 562, 566, 575], "hold": [115, 504], "items": 115, "flat": 115, "over": [115, 158, 334, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "flatit": 115, "instanc": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682, 753], "act": [115, 476, 546, 548], "similarli": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 657], "subclass": [115, 452, 467, 562, 667, 739, 741, 751, 757, 766], "built": [115, 214, 580, 581], "flatten": [115, 481], "collaps": 115, "arang": 115, "reshap": [115, 449], "row": [115, 190, 481], "major": 115, "column": [115, 440, 442, 444], "ravel": 115, "getfield": 115, "certain": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "determin": 115, "need": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 562], "fit": 115, "complex128": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "32": [115, 252, 397, 400, 402, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "bit": [115, 566], "larger": 115, "than": [115, 392, 393, 565, 580, 581], "itself": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "skip": 115, "begin": 115, "diag": 115, "j": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "our": [115, 562, 566], "sqrt": 115, "0j": 115, "1j": 115, "70710678": 115, "standard": [115, 141, 546, 657], "work": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 555, 566, 657, 714], "int_typ": 115, "interpret": 115, "nd": 115, "z": [115, 562], "suitabl": 115, "longdoubl": 115, "clongdoubl": 115, "becaus": [115, 566], "lose": 115, "void": 115, "speed": [115, 566, 609, 620, 622, 625], "up": [115, 566, 609, 620, 622, 625], "do": [115, 566], "arithmet": 115, "optim": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 573, 575, 577, 589, 603, 604, 605, 606], "math": 115, "random": [115, 403, 415], "123": [115, 491, 492], "randint": 115, "itemset": 115, "There": 115, "least": 115, "Then": 115, "faster": 115, "locat": 115, "compar": [115, 352], "syntax": 115, "increas": [115, 562, 566], "discourag": 115, "problem": [115, 486, 557, 566], "complic": [115, 566], "insid": [115, 214, 562], "loop": [115, 403, 431, 448], "sure": 115, "local": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "look": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "initi": [115, 391, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "amax": 115, "amin": 115, "nbyte": 115, "total": 115, "consum": [115, 657], "zero": [115, 216, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "480": 115, "prod": 115, "new_ord": 115, "newbytord": 115, "specif": [115, 657], "littl": [115, 566], "nativ": 115, "sy": [115, 657], "byteord": 115, "i": [115, 214, 546, 547, 548, 566], "ignor": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "new_arr": 115, "reflect": 115, "nonzero": 115, "rearrang": 115, "wai": [115, 491, 492, 566], "posit": [115, 373, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "smaller": 115, "greater": [115, 580, 581], "behind": 115, "undefin": [115, 562], "final": [115, 260, 566], "onc": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "algorithm": [115, 213, 216], "second": [115, 214], "unspecifi": 115, "thei": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566, 657], "come": [115, 566], "break": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "ti": 115, "paritit": 115, "indirect": 115, "ptp": 115, "peak": 115, "repeat": [115, 504], "free": 115, "separ": [115, 488, 729], "resiz": 115, "new_shap": 115, "refcheck": 115, "count": [115, 367, 566], "check": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 557, 562], "valueerror": 115, "exist": [115, 435, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pypi": 115, "sinc": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "reliabl": 115, "systemerror": 115, "keyword": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 607], "behaviour": [115, 645], "bug": [115, 566], "realloc": 115, "space": [115, 160, 745], "necessari": [115, 562], "consecut": [115, 639], "purpos": 115, "shrink": 115, "enlarg": 115, "abov": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "miss": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "doesn": [115, 562], "referenc": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "prevent": [115, 562], "traceback": 115, "most": [115, 562], "recent": 115, "round": 115, "decim": [115, 352, 440, 442, 444], "around": [115, 238], "searchsort": 115, "side": [115, 555, 609, 724], "sorter": 115, "find": 115, "maintain": [115, 201], "setfield": 115, "0e": 115, "000": 115, "5e": 115, "323": 115, "write": [115, 676, 685, 729, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 763, 766], "uic": 115, "These": 115, "boolean": [115, 381, 562, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "affect": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "actual": 115, "accord": 115, "never": 115, "unpickl": 115, "without": [115, 214, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "whether": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "properli": 115, "four": 115, "compil": 115, "replac": 115, "letter": 115, "stdin": 115, "line": [115, 159, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 557, 682, 755], "usual": [115, 727], "As": 115, "infer": [115, 281, 440, 442, 444], "fail": [115, 408, 504], "unchang": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "attributeerror": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "incompat": 115, "modif": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "desir": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 547], "precis": [115, 352, 358, 360, 361], "obtain": [115, 408], "suggest": 115, "int_": 115, "relev": 115, "further": 115, "calcul": [115, 120, 121, 122, 123, 124, 657], "overflow": 115, "fix": 115, "quicksort": 115, "mergesort": 115, "heapsort": 115, "timsort": 115, "cover": 115, "datatyp": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "retain": 115, "wa": 115, "ad": [115, 367, 437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "lexsort": 115, "partial": 115, "s1": [115, 138], "i8": 115, "squeez": 115, "ax": [115, 710, 711, 714, 716, 717, 726, 728], "std": [115, 360, 495, 497, 498, 546], "ddof": 115, "deviat": [115, 546], "travers": 115, "more": [115, 392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 565, 566, 645], "explan": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "rst": 115, "imagin": 115, "after": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 557, 562, 609, 620, 622, 625], "known": 115, "tell": 115, "20": [115, 138, 436, 458, 459, 460, 461, 572, 602, 608], "lib": [115, 190, 191], "stride_trick": 115, "as_strid": 115, "13": 115, "14": [115, 125, 127, 151, 188, 206, 244, 282, 377, 522, 561, 694, 732, 733, 735, 778], "18": [115, 134, 254, 406], "19": [115, 199, 694, 732, 778], "23": [115, 153, 156, 417, 489, 528, 533, 534, 537, 539, 541, 544, 662], "48": 115, "224": 115, "1344": 115, "813": 115, "swapax": 115, "interchang": 115, "form": [115, 257, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "tobyt": 115, "raw": [115, 566], "behavior": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "exhibit": 115, "u2": 115, "x00": 115, "x01": 115, "x02": 115, "x03": [115, 431, 432], "tofil": 115, "fid": 115, "sep": [115, 440, 442, 444], "text": [115, 190, 538, 738], "binari": 115, "independ": 115, "recov": 115, "fromfil": 115, "open": [115, 163, 682, 695, 731, 734, 736, 738, 768, 780, 782, 784], "filenam": 115, "closest": [115, 216], "quick": 115, "storag": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "lost": 115, "good": 115, "intend": [115, 562], "archiv": 115, "transport": 115, "machin": [115, 504], "overcom": 115, "expens": 115, "directli": [115, 562], "bypass": 115, "g": [115, 158, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 562, 565, 566], "gzipfil": 115, "fileno": 115, "bytesio": 115, "tolist": 115, "level": [115, 138, 214, 360, 367], "deep": [115, 566], "nearest": 115, "builtin": 115, "depth": 115, "recreat": 115, "although": [115, 452, 467], "sometim": 115, "1d": 115, "almost": [115, 352], "uint32": 115, "a_list": 115, "a_tolist": 115, "addition": 115, "2d": [115, 745], "appli": [115, 264, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 548, 549, 562], "recurs": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 688], "0d": 115, "typeerror": 115, "tostr": 115, "alia": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 623, 681], "despit": 115, "trace": [115, 611, 617, 618], "effect": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 609], "vector": [115, 145, 146, 566], "simpli": [115, 158], "addit": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "atleast2d": 115, "achiev": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "newaxi": 115, "matrix": [115, 437], "permut": [115, 402, 403, 566], "th": [115, 566], "becom": 115, "altern": 115, "give": [115, 566], "var": [115, 560], "former": [115, 452, 467], "invok": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "float_": 115, "descriptor": 115, "again": 115, "omiss": 115, "some_dtyp": 115, "caus": 115, "reinterpret": 115, "ndarray_subclass": 115, "just": [115, 504, 562, 566, 727], "per": [115, 478, 481], "regular": 115, "superfici": 115, "shown": [115, 214], "print": [115, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 580, 581], "therefor": 115, "versu": 115, "int8": 115, "513": 115, "xv": 115, "i1": 115, "recarrai": 115, "normal": [115, 138, 141, 437, 546], "width": [115, 190, 196, 197, 200, 268], "i2": 115, "raster": [118, 236, 649, 751], "radiu": [126, 128, 246], "box": [130, 152, 154, 155, 158, 159, 190, 257, 530, 667], "reducing_gap": 130, "randomst": 132, "s2": 138, "db_ratio": 138, "log_multipli": 138, "mix": [138, 566], "clean": [138, 713], "speech": 138, "nois": [138, 141], "variou": [138, 210], "snr": 138, "db": 138, "fs": 138, "power": 141, "white": [141, 711], "gaussian": 141, "mu": 141, "sigma": 141, "squar": [145, 146], "root": [146, 491, 492], "min_length": 148, "opencv": [151, 214, 238], "box_a": [157, 158], "box_b": [157, 158], "jaccard": [158, 257], "overlap": [158, 257], "intersect": [158, 227], "num_box": 158, "bbox": [159, 190, 257], "x1": 159, "y1": 159, "x2": 159, "y2": 159, "img": [163, 171, 183, 192, 204, 205, 257, 721], "cleanupmethod": 163, "colorconversionenum": 167, "gray2bgr": 167, "bgr": [167, 180], "cv2": [167, 180, 201, 238, 243], "compon": [167, 180, 214, 216], "toedgemethodenum": 171, "canni": 171, "to_gray_method": 180, "tograymethodenum": 180, "noisefiltermethodenum": 183, "bilateral_filt": 183, "input_imag": 186, "lower_bound": 186, "upper_bound": 186, "179": 186, "255": [186, 191, 200, 277, 682], "thresholdmethodenum": 187, "pil": [190, 191, 721], "score": [190, 504], "outline_width": [190, 191], "outline_alpha": [190, 191], "score_color_fil": 190, "score_font": 190, "imagefont": [190, 191], "home": [190, 191, 731], "heider": [190, 191, 469, 731], "miniconda3": [190, 191], "env": [190, 191], "py38": [190, 191], "python3": [190, 191], "site": [190, 191], "packag": [190, 191], "py": [190, 191, 437, 555], "score_format": 190, "2f": 190, "rgba": 190, "height": [190, 196, 197, 200, 268], "xmin": 190, "ymin": 190, "xmax": 190, "ymax": 190, "NOT": [190, 378, 566, 567], "class_name_map": 190, "id": 190, "visual": [190, 557, 566, 727], "background": 190, "font": [190, 240, 241], "drawn": 190, "x_min": 191, "y_min": 191, "x_max": 191, "y_max": 191, "score_color": 191, "display_str": 191, "font_typ": 191, "outline_color": 191, "color_fill_scor": 191, "theta": [195, 196, 197], "mask": [200, 217], "border": [200, 210, 547], "border_width": 200, "border_color": 200, "line_typ": 200, "linetypeenum": 200, "anti_alias": 200, "findcontour": 201, "contour": [201, 213, 214], "hierarchi": [201, 214], "rotation_vector": [204, 205], "translation_vector": [204, 205], "camera_matrix": [204, 205], "dist_coef": [204, 205], "boundari": [210, 214], "denot": 210, "approxim": [213, 555], "retr_extern": 214, "retriev": [214, 562], "outer": 214, "retr_list": 214, "establish": 214, "hierarch": 214, "relationship": 214, "retr_ccomp": 214, "organ": 214, "At": [214, 566], "top": [214, 540], "extern": 214, "hole": 214, "connect": [214, 216], "retr_tre": 214, "reconstruct": 214, "demo": 214, "distancetransform": 216, "ccomp": 216, "src": [216, 238], "rectangl": [227, 715], "videocaptur": [228, 238, 243], "backend": [228, 325], "identifi": 228, "thread_nam": 238, "group": [238, 575], "async": [238, 388], "wrapper": 238, "alik": 238, "isopen": 238, "frame": [238, 365], "video": [238, 682, 766], "stop": [238, 448], "31": [239, 434, 435], "fp": 240, "140": 240, "format_str": 240, "thick": [240, 241], "font_scal": [240, 241], "video_stream": 243, "coder": 243, "ident": [243, 352, 455, 456, 459, 470], "compos": [248, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "sever": [248, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "augment": [248, 566], "togeth": 248, "centercrop": 248, "totensor": [248, 549], "lower": [253, 258, 745], "crop": [257, 547], "being": [257, 392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 548, 682], "dure": [257, 557, 562], "tensor": [257, 260, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 495, 496, 497, 498, 499, 518, 519, 520, 521, 523, 530, 546, 547, 548, 555, 562, 565, 566, 628, 676, 682, 741, 751, 757, 766, 782], "pt": 257, "adjust": [257, 714], "300": 259, "tripl": 260, "eg": [260, 565, 745], "target_s": 268, "interpolationenum": 268, "linear": [268, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "proper": [268, 392, 393], "cv": 268, "crazi": 268, "ps": [271, 279], "wait_tim": [271, 279, 388], "33": [271, 279, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "ret_val": 274, "char": 274, "q": [274, 281], "x1b": [274, 281], "window_nam": 277, "trackbar_nam": 277, "min_val": 277, "callback": [277, 432, 580, 581], "sink": [277, 729], "windowflagenum": 281, "wait": 281, "draw_titl": 281, "save_path": 281, "exit_char": 281, "extensionenum": 281, "exr": 281, "min_default_s": 281, "200": [281, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "max_default_s": 281, "600": 281, "caution": 281, "imshow": 281, "anim": 281, "hurt": 281, "perform": [281, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 504, 699, 701, 703], "deviceorderenum": 285, "pci_bus_id": 285, "devic": [286, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 502, 546, 547, 613, 614, 615, 628, 645], "08": [287, 291, 292, 294, 296, 418, 419, 422, 643, 696, 704], "bad": 290, "all_set": [293, 295], "gtkset": 295, "slim": 295, "manipul": 295, "gtk": 295, "prefer_dark_mod": 295, "theme": 295, "service_nam": [302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317], "service_entry_point_path": [304, 312], "get_sudo": [310, 311, 313, 314, 315, 316, 317, 322, 323], "run_a": [310, 311, 312, 313, 314, 315, 316, 317], "runasenum": [310, 311, 312, 313, 314, 315, 316, 317], "auto_en": 312, "restart": 312, "restartserviceenum": 312, "on_failur": 312, "templat": [312, 477], "unit": 312, "ndescript": 312, "nafter": 312, "network": [312, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 477, 478, 566], "target": [312, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 555, 584, 585], "servic": 312, "ntype": 312, "nuser": 312, "service_us": 312, "ngroup": 312, "service_group": 312, "nexecstart": 312, "execut": 312, "nrestart": 312, "nsyslogidentifi": 312, "nrestartsec": 312, "ntimeoutstartsec": 312, "infin": 312, "nwantedbi": 312, "service_target": 312, "remove_app_us": 313, "usernam": [320, 321, 322, 323], "demo_us": [320, 321, 322, 323], "new_hom": 320, "password": [321, 322], "add_hom": 322, "home_dir": 322, "allow_existing_us": 322, "remove_hom": 323, "backend_nam": 325, "linux": 325, "expected_s": 328, "1024": [328, 338, 634], "of_remain": [330, 332], "alsodecor": [330, 609, 611, 613, 614, 615, 617, 618, 620, 621, 622, 625], "request": [330, 442, 634], "global_pin_memori": 332, "neg": [334, 367, 373, 566], "expected_size_mb": 338, "bold": 352, "num_decim": 352, "df": [354, 355, 356, 359, 360], "max_provider_df": 358, "datafram": [358, 359, 360, 361, 364, 365, 440, 442, 444], "entry_provider_df": [358, 361], "header_rot": [358, 361], "max_colwidth": [358, 361], "1000": [358, 361, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "group_bi": 359, "mean_col": 360, "std_col": 360, "latex": [360, 717], "pm": 360, "plu": 360, "minu": 360, "formatt": 361, "contextlib": 363, "suppress": 363, "panda": [363, 364, 372], "common": [363, 504, 566, 649], "settingwithcopywarn": 363, "export": 364, "old_index": 367, "loc": 367, "multiindex": 367, "expand": [367, 562, 723], "front": 367, "rear": 367, "end": [367, 440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "ndframe": 372, "colorenum": 372, "yellow": 372, "attr_templ": 372, "attrenum": 372, "bg": 372, "extreme_func": 372, "ndframeextremeenum": 372, "highlight": 372, "datefram": 373, "green": 373, "red": 373, "nan": 373, "thing": 378, "mro": 379, "resolut": 379, "interv": [381, 392, 393, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "filter": [381, 566, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "tag": [381, 440, 442, 444, 682, 685, 695, 731, 734, 736, 738, 741, 743, 745, 747, 749, 751, 755, 757, 759, 761, 763, 766, 768, 776, 777, 780, 782, 784], "exclud": [381, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "inclus": [381, 682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "min_interv": [391, 392, 393], "recal": 391, "later": [391, 598, 630, 636], "ensur": [392, 393, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566], "often": [392, 393, 566], "max_freq": [392, 393], "n_tupl": 394, "namedtupl": [394, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "drop_not_ful": [397, 400], "batch_siz": [398, 399, 402], "cycl": [402, 403], "itertool": 403, "everytim": 403, "exhaust": 403, "chanc": 407, "port": [407, 409, 679], "taken": 407, "host": [408, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "ip": 408, "unknown": 408, "strictnumb": [411, 412, 413, 414], "warn": [414, 473], "scipi": 418, "wav_file_nam": [420, 421], "max_resolut": [424, 425], "decimation_factor": [426, 427, 428], "return_indic": [426, 427, 428], "truncate_last_indivis": [426, 427, 428], "truncate_last_undivis": 426, "divis": 426, "has_x_serv": [431, 432], "combin": [431, 432], "ctrl": [431, 432], "65507": [431, 432], "shift": [431, 432], "65505": [431, 432], "alt": [431, 432], "65513": [431, 432], "x04": [431, 432], "abstractcontextmanag": [431, 580, 581], "context": [431, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 607], "earli": [431, 474], "plugin": 435, "go": [435, 562, 566], "finish": [435, 566, 567, 609, 620, 622, 625, 682], "y_true": 437, "y_pred": 437, "confus": [437, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "linearsegmentedcolormap": 437, "mostli": 437, "stolen": 437, "http": [437, 440, 442, 444, 565], "scikit": 437, "learn": [437, 449, 486, 504, 566, 575], "org": [437, 440, 442, 444], "auto_exampl": 437, "model_select": 437, "plot_confusion_matrix": 437, "html": 437, "sphx": 437, "glr": 437, "auto": [437, 634, 682, 686], "model": [437, 449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 477, 478, 481, 502, 504, 555, 557, 563, 565, 566, 589, 590, 601, 603, 604, 605, 606, 613, 614, 615, 620, 621, 622, 676, 682, 685, 688, 731], "classification_report": 437, "stat": [437, 693, 782], "path_to_events_file_": [440, 442, 444], "size_guid": [440, 442, 444], "save_to_disk": [440, 442, 444], "tensorboardeventexport": [440, 444], "export_audio": [440, 442, 444], "out_dir": [440, 442, 444], "mnt": [440, 442, 444, 682, 738], "win": [440, 442, 444, 682, 738], "christian": [440, 442, 444, 469, 682, 738], "projectswin": [440, 442, 444, 682, 738], "github": [440, 442, 444, 682, 738], "pyth": [440, 442, 444, 682, 738], "doc": [440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682, 738], "export_distribut": [440, 442, 444], "export_graph": [440, 442, 444], "export_histogram": [440, 442, 444], "www": [440, 442, 444], "tensorflow": [440, 442, 444], "api_doc": [440, 442, 444], "tf": [440, 442, 444, 566], "histogram": [440, 442, 444, 682, 749], "export_imag": [440, 442, 444], "export_line_plot": [440, 442, 444], "export_scalar": [440, 442, 444], "pkl": [440, 442, 444], "export_tensor": [440, 442, 444], "pr_curve_export_csv": [440, 442, 444], "index_label": [440, 442, 444], "epoch": [440, 442, 444, 575, 590], "path_or_buf": [440, 442, 444], "filepath": [440, 442, 444], "writebuff": [440, 442, 444], "na_rep": [440, 442, 444], "float_format": [440, 442, 444], "hashabl": [440, 442, 444], "header": [440, 442, 444], "bool_t": [440, 442, 444], "encod": [440, 442, 444, 478, 722], "compressionopt": [440, 442, 444], "quot": [440, 442, 444], "quotechar": [440, 442, 444], "line_termin": [440, 442, 444], "chunksiz": [440, 442, 444], "date_format": [440, 442, 444], "doublequot": [440, 442, 444], "escapechar": [440, 442, 444], "strict": [440, 442, 444, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "storage_opt": [440, 442, 444], "storageopt": [440, 442, 444], "drop": [440, 442, 444], "scalar_export_csv": [440, 442, 444], "tag_test": [440, 442, 444], "type_str": [440, 442, 444], "tagtypeenum": [440, 442, 444], "tensor_export_csv": [440, 442, 444], "fun": 448, "torch": [449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 491, 492, 502, 540, 546, 547, 555, 562, 607, 611, 613, 614, 615, 617, 618, 625, 639, 657, 685], "dataset": [449, 504, 566], "freez": [449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "baselin": 449, "initialis": 449, "optimis": [449, 590, 603, 604, 605, 606], "schedul": 449, "persist": [449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "tool": 449, "clone": [449, 562], "soft": 449, "cuda": [449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 502, 614, 639], "automat": [449, 562, 607], "global": [449, 613, 614, 615, 630, 636], "handl": [449, 452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 607, 751], "input_shap": [452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "output_shap": [452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "intern": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476], "state": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 481, 575, 639], "nn": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 502, 565, 657], "scriptmodul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476], "add_modul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "child": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "fn": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "everi": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 575], "submodul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565], "children": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "typic": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "init": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "no_grad": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "def": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "init_weight": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "m": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 511], "fill_": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "net": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 557, 566], "sequenti": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 697, 702, 703], "in_featur": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "out_featur": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "bia": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "bfloat16": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "modifi": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "yield": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "member": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "buf": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "20l": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "1l": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "5l": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "immedi": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "cpu": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 546, 547, 613, 615, 628], "gpu": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "associ": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "live": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "doubl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 540, 562], "eval": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "dropout": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "batchnorm": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "disabl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 611, 617, 618], "grad": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "comparison": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "mechan": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "extra_repr": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "extra": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "custom": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "your": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 565, 566], "forward": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 563], "overridden": [452, 467, 562], "recip": [452, 467], "afterward": [452, 467], "care": [452, 467], "regist": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 686], "latter": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "silent": [452, 467], "get_buff": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "throw": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "docstr": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "get_submodul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "correctli": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "fulli": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "qualifi": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "invalid": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "resolv": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "get_extra_st": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "state_dict": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 575], "set_extra_st": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pickleabl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "guarante": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "get_paramet": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "let": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "sai": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "net_b": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "net_c": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "conv": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "conv2d": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "kernel_s": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 535, 536, 538, 542, 543], "diagram": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "runtim": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "degre": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "queri": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "against": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "named_modul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "transit": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "half": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "ipu": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "load_state_dict": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 575], "descend": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "strictli": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 580], "enforc": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "missing_kei": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "unexpected_kei": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "unexpect": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "duplic": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "l": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "idx": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 486, 562], "named_buff": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "prefix": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 688], "prepend": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "running_var": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "named_children": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "conv4": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "conv5": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "memo": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "remove_dupl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "named_paramet": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_backward_hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "removablehandl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "favor": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_full_backward_hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_buff": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "consid": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 580], "running_mean": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "alongsid": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "oper": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562, 566, 657], "num_featur": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_forward_hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "signatur": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "won": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_forward_pre_hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pre": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "gradient": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 566], "grad_input": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "grad_output": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "technic": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "reason": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "receiv": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "caller": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_load_state_dict_post_hook": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "post": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "incompatible_kei": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "consist": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "expect": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 682], "thrown": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "clearn": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_modul": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "register_paramet": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "requires_grad_": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "requires_grad": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 562], "autograd": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 555, 562], "record": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "help": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 667], "finetun": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "gan": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "sample_input": [452, 455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "share_memori": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "share_memory_": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "destin": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "keep_var": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "whole": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "releas": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pleas": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 555], "design": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "detach": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "non_block": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "memory_format": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "channels_last": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "Its": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "integr": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "asynchron": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "pin": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478, 645], "4d": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "1913": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "3420": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "5113": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "2325": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "gpu1": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "1914": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "5112": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "2324": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "float16": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "cdoubl": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "3741": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "2382": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "5593": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "4443": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "6122": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "1150": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "to_empti": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "dst_type": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "xpu": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "zero_grad": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "set_to_non": [452, 455, 456, 458, 459, 460, 461, 464, 466, 467, 468, 470, 473, 474, 476, 478], "hidden_lay": [455, 456, 459, 470], "hidden_layer_activ": [455, 456, 459, 470, 476], "relu": [455, 456, 459, 470, 476], "output_activ": [455, 456, 459, 470], "use_bia": [455, 456, 459, 470], "use_dropout": [455, 456, 459, 470], "dropout_prob": [455, 456, 459, 470], "auto_build_hidden_layers_if_non": [455, 456, 459, 470], "input_multipli": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "max_layer_width": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "output_multipli": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "default_init": [455, 456, 459, 470], "fan_in_init": [455, 456, 459, 470], "mlp": [455, 456, 458, 459, 460, 461, 464, 468, 472, 473, 474, 475, 476, 478, 481], "construct_progressive_hidden_lay": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "_input_shap": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "_output_shap": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "infer_input_shap": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "infer_output_shap": [455, 456, 458, 459, 460, 461, 464, 466, 468, 470, 473, 474, 476], "entropi": 456, "sampl": [456, 491, 492, 504, 514], "mean_head_activ": [458, 459, 460, 461], "min_std": [458, 459, 460, 461], "max_std": [458, 459, 460, 461], "multivariatenorm": 459, "fixed_log_std": 461, "heads_hidden_s": 464, "r_hidden_lay": [466, 468], "recurrentcategoricalmlp": 466, "hidden_x": 466, "recurrent_input_s": 467, "hidden_s": 467, "layer": [469, 478, 557, 566], "perceptron": 469, "nielsen": 469, "oooo": 470, "xx": 470, "fc1": 470, "hidden_layer_s": 470, "bias": 470, "fc2": 470, "fc3": 470, "0000": 470, "fusion": [472, 473, 474], "variant": [472, 475], "fusion_hidden_multipli": 473, "late": 473, "quit": 473, "botch": 473, "job": 473, "been": [473, 514, 562], "fission": 475, "disjunction_s": 476, "subnet_s": 476, "128": [476, 682], "upon": 477, "featur": [477, 478], "num_input": 478, "num_output": 478, "a_valu": 478, "b_valu": 478, "layer_channel": 478, "preprocess": [478, 566], "constructor": 478, "uv": 478, "disk": 478, "parallel": [481, 697, 698, 699, 700, 701], "environ": 481, "explor": 481, "basic": [481, 566], "loos": 481, "action": [481, 743], "reward": 481, "lstm": 481, "nd_size": 483, "superviseddataset": 486, "categor": [486, 743], "orderedset": 486, "idx_to_str": 486, "predictor_shap": [486, 488], "response_shap": [486, 488], "split_nam": [486, 488], "str_to_idx": 486, "compris": 488, "vision": 489, "loader": [491, 492], "dataload": [491, 492, 502], "target_transform": [491, 492], "has_file_allowed_extens": [491, 492], "visiondataset": [491, 492], "arrang": [491, 492], "class_x": [491, 492], "xxx": [491, 492], "ext": [491, 492], "xxy": [491, 492], "xxz": [491, 492], "class_i": [491, 492], "nsdf3": [491, 492], "asd932_": [491, 492], "randomcrop": [491, 492, 547], "corrupt": [491, 492], "_categori": [491, 492], "alphabet": [491, 492], "_data": 491, "class_index": [491, 492], "numpy_util": 492, "valid_percentag": 492, "test_percentag": 492, "_data_categori": 492, "pytorch": [493, 550, 565, 587, 626, 648, 682], "log_prob": 496, "log_std": 498, "prob": 499, "evaluation_load": 502, "mapper": 502, "kws_sink": 502, "29": [503, 552, 553, 554, 556, 558], "n_split": 504, "subset": 504, "methodolog": 504, "mistak": 504, "seen": 504, "perfect": 504, "anyth": 504, "yet": 504, "unseen": 504, "situat": 504, "overfit": [504, 566], "practic": 504, "supervis": 504, "experi": 504, "batch_sampl": 514, "num_iter": 514, "start_it": 514, "batchsampl": 514, "until": 514, "rgb": [523, 721, 723], "lot": 523, "OF": [523, 609], "assumpt": 523, "date": 531, "h_w": [535, 538, 540, 542], "dilat": [535, 536, 538, 542, 543], "h_w_in": [536, 543], "h_w_out": [536, 543], "pool_siz": 538, "h_": 538, "leftlfloorfrac": 538, "1rightrfloor": 538, "w_": 538, "pad_siz": 540, "quad": 540, "right": 540, "definit": 540, "out_pad": [542, 543], "mutat": [546, 548], "randomhorizontalflip": 548, "probabl": [548, 566, 682, 743], "flip": 548, "loss_fn": 555, "iinput": 555, "epsilon": 555, "1e": [555, 661], "error_toler": 555, "gradcheck": 555, "line_width": 557, "vanish": 557, "explod": 557, "usag": 557, "var_grad_fn": 559, "input_img": [562, 563], "jvp": 562, "ctx": 562, "formula": 562, "differenti": 562, "got": 562, "r": 562, "mark_dirti": 562, "mark": 562, "matter": 562, "staticmethod": 562, "x_npy": 562, "once_differenti": 562, "lead": 562, "wrong": [562, 566], "engin": 562, "know": 562, "mark_non_differenti": 562, "effici": 562, "save_for_backward": 562, "g1": 562, "g2": 562, "saved_tensor": 562, "zeros_lik": 562, "index_add_": 562, "oppos": 562, "incorrect": 562, "leak": 562, "enabl": [562, 570, 618], "applic": 562, "graph": [562, 676, 682], "saved_tensors_hook": 562, "weren": 562, "op": 562, "extend": 562, "grad_out": 562, "gx": 562, "gy": 562, "gz": 562, "save_for_forward": 562, "x_t": 562, "y_t": 562, "_": 562, "vjp": 562, "fwad": 562, "dual_level": 562, "a_dual": 562, "make_du": 562, "set_materialize_grad": 562, "materi": 562, "prior": 562, "simplefunc": 562, "No": 562, "induc": 562, "needs_input_grad": 562, "use_cuda": 563, "return_lay": 565, "intermedi": 565, "activ": 565, "current_module_nam": 565, "desired_output_nam": 565, "submodule1": 565, "submodule2": 565, "submodule3": 565, "mid_output": 565, "model_output": 565, "those": [565, 657], "reduce_getattr": 565, "attr": 565, "wonder": 565, "beauti": 565, "simplif": 565, "stackoverflow": 565, "com": 565, "question": 565, "31174295": 565, "getattr": 565, "setattr": 565, "31174427": 565, "noredirect": 565, "comment86638618_31174427": 565, "verifi": 566, "n_class": 566, "softmax": 566, "deriv": 566, "l2": 566, "regress": 566, "huber": 566, "loss": [566, 590, 691], "imbalanc": 566, "ratio": 566, "logit": 566, "converg": 566, "elimin": 566, "hockei": 566, "stick": 566, "curv": 566, "few": [566, 649], "capac": 566, "reach": 566, "lowest": 566, "perfectli": 566, "somewher": 566, "continu": [566, 729], "stage": 566, "decreas": 566, "hopefulli": 566, "underfit": 566, "toi": 566, "try": 566, "did": 566, "down": 566, "unambigu": 566, "y_hat": 566, "sess": 566, "That": 566, "goe": 566, "decod": 566, "truth": [566, 682, 759], "me": 566, "reveal": 566, "backprop": 566, "chart": [566, 743, 755, 763], "broadcast": 566, "rel": 566, "ve": 566, "across": 566, "peopl": 566, "inadvert": 566, "depress": 566, "fact": 566, "okai": 566, "relat": 566, "trivial": 566, "strategi": 566, "autoregress": 566, "paramat": 568, "lr": [573, 575], "mileston": 575, "gamma": 575, "warmup_factor": [575, 577], "3333333333333333": 575, "warmup_it": [575, 577], "last_epoch": 575, "_lrschedul": 575, "get_last_lr": 575, "get_lr": 575, "print_lr": 575, "is_verbos": 575, "__dict__": 575, "patienc": [580, 581], "writer": [580, 581], "minim": [580, 581], "less": [580, 581], "improv": 580, "model_path": 592, "config_save_path": [593, 598, 599, 606], "config_file_path": [593, 598, 605], "model_nam": [596, 597, 598, 603, 604, 605], "model_directori": [596, 597, 603, 604], "raise_on_failur": [596, 597], "lastest": [596, 597], "appendix": [596, 597, 598], "save_directori": [598, 605], "prompt_on_failur": 598, "loaded_config_file_path": [598, 599, 606], "raise_on_exist": [598, 599], "timestamp": 598, "model_save_path": [599, 606], "optimiser_save_path": 606, "setup": 607, "__enter__": 607, "destruct": 607, "__exit__": 607, "using_cuda": 609, "THE": 609, "cach": [609, 639], "recover": 609, "no_side_effect": [611, 613, 614, 615, 617, 618, 620, 621, 622, 625], "jit": [611, 617, 618], "torchtrainsess": 623, "pi": 628, "overrid": [630, 636], "manual": [630, 636], "expected_memory_usage_mb": 634, "highest": 634, "capabl": 634, "device_prefer": 636, "torchdeviceenum": 636, "explicitli": 636, "cuda_device_idx": 637, "destroi": 639, "ipc": 639, "empty_cach": 639, "ipc_collect": 639, "num_work": 645, "prefer": 645, "update_num_thread_for_pinned_load": 645, "weird": 645, "worker": 645, "72163": 647, "reproduc": 647, "grid": 649, "routin": 657, "much": 657, "getsizeof": 657, "sizeof": 657, "tensoris": 659, "ep": 661, "_tensor": 664, "el": 665, "manag": 667, "Not": [667, 682, 686], "due": 667, "default_col": 667, "numpy_dtyp": 671, "torch_dtyp": 672, "input_to_model": [676, 682], "log_dir": 679, "6006": 679, "tensorboardpytorchwrit": 681, "summary_writer_kw": 682, "imagewritermixin": [682, 782], "graphwritermixin": 682, "histogramwritermixin": [682, 688], "barwritermixin": 682, "linewritermixin": 682, "spectrogramwritermixin": 682, "figurewritermixin": 682, "instantiationwritermixin": 682, "precisionrecallcurvewritermixin": 682, "embedwritermixin": 682, "moduleparameterwritermixin": 682, "videowritermixin": 682, "meshwritermixin": 682, "multichannelmethodenum": [682, 751, 782], "value_error": 682, "x_label": [682, 743, 755, 763], "y_label": [682, 743, 755, 763], "global_step": 682, "walltim": 682, "blip": [682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "step_i": [682, 695, 731, 734, 736, 738, 761, 768, 780, 782, 784], "emb": [682, 745], "respons": [682, 745], "metadata": [682, 745], "label_img": [682, 745], "metadata_head": 682, "bork": 682, "use_strict_trac": 682, "max_bin": 682, "data_format": 682, "nchw": [682, 751, 782], "multi_channel_method": 682, "seper": 682, "seperate_channel_postfix": 682, "seperate_image_postfix": 682, "dataformat": [682, 751, 782], "chw": 682, "plot_kw": [682, 755, 763], "mesh": [682, 757], "here": 682, "number_of_vertic": 682, "lie": 682, "face": [682, 711], "precision_recall_curv": [682, 759], "num_threshold": [682, 759], "127": 682, "spectrogram": [682, 763], "sample_r": [682, 763], "512": [682, 763], "step_siz": 682, "frequenc": 682, "hz": 682, "sec": 682, "frame_r": [682, 766], "input_dim": [682, 766], "videoinputdimsenum": [682, 766], "ntchw": [682, 766], "fastest": 682, "vid_tensor": 682, "summarywrit": 682, "mixin": 685, "publish": 686, "visualis": [691, 745], "episod": 691, "moving_loss": 691, "moving_reward": 691, "episode_length": 691, "moving_length": 691, "rgb_arrai": 691, "configur": 691, "tqdm": [696, 697], "progress": [697, 698, 699, 700, 701, 702, 703], "unord": [700, 701], "ax_": 711, "invert": 711, "black": 711, "edg": 711, "troublesom": 713, "symbol": 713, "legend": 714, "linestyl": [714, 718], "bbox_inch": 717, "tight": 717, "transpar": 717, "attempt_fix_empty_white_spac": 717, "post_process_crop": 717, "suffix": 717, "pdf": 717, "fig": 717, "embed": 717, "prop_cycl": 718, "cycler": 718, "marker": 718, "byte_arrai": 720, "data_path": 723, "desired_s": 723, "image1": 724, "image2": 724, "merg": 724, "decai": 727, "rep": 727, "invers": 727, "track": 729, "comma": 729, "get_csv_writ": 731, "textio": 731, "get_logg": 738, "write_to_std_out": 738, "logger": 738, "msg": 738, "unifi": 739, "audio": 741, "y_error": 743, "project": 745, "3d": 745, "bonu": 751, "multichannel": 751, "instanti": [753, 759], "counterfilt": 761, "num_fft": 763, "metriccollect": 782, "scalarwritermixin": 784, "draugr": 789, "pip": 789, "jul": 790, "search": 790, "page": 790}, "objects": {"": [[0, 0, 0, "-", "draugr"]], "draugr": [[1, 1, 1, "", "dist_is_editable"], [2, 0, 0, "-", "dlib_utilities"], [15, 0, 0, "-", "drawers"], [55, 0, 0, "-", "extensions"], [61, 0, 0, "-", "ffmpeg_utilities"], [71, 1, 1, "", "get_version"], [72, 0, 0, "-", "jax_utilities"], [73, 0, 0, "-", "metrics"], [89, 0, 0, "-", "multiprocessing_utilities"], [94, 0, 0, "-", "numpy_utilities"], [151, 0, 0, "-", "opencv_utilities"], [282, 0, 0, "-", "os_utilities"], [350, 0, 0, "-", "pandas_utilities"], [374, 0, 0, "-", "pygame_utilities"], [377, 0, 0, "-", "python_utilities"], [415, 0, 0, "-", "random_utilities"], [418, 0, 0, "-", "scipy_utilities"], [433, 0, 0, "-", "tensorboard_utilities"], [445, 0, 0, "-", "threading_utilities"], [449, 0, 0, "-", "torch_utilities"], [696, 0, 0, "-", "tqdm_utilities"], [705, 0, 0, "-", "visualisation"], [729, 0, 0, "-", "writers"]], "draugr.dlib_utilities": [[3, 0, 0, "-", "dlib_utilities"], [10, 0, 0, "-", "exclude"], [13, 0, 0, "-", "facealigner"]], "draugr.dlib_utilities.dlib_utilities": [[4, 2, 1, "", "Dlib5faciallandmarksindices"], [5, 2, 1, "", "Dlib68faciallandmarksindices"], [6, 1, 1, "", "eye_aspect_ratio"], [7, 1, 1, "", "mouth_aspect_ratio"], [8, 1, 1, "", "rect_to_bounding_box"], [9, 1, 1, "", "shape_to_ndarray"]], "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "slice"]], "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "slice"]], "draugr.dlib_utilities.exclude": [[11, 0, 0, "-", "flags"]], "draugr.dlib_utilities.exclude.flags": [[12, 2, 1, "", "TupleFlag"]], "draugr.dlib_utilities.exclude.flags.TupleFlag": [[12, 3, 1, "", "__init__"]], "draugr.dlib_utilities.facealigner": [[14, 1, 1, "", "align_face"]], "draugr.drawers": [[16, 0, 0, "-", "drawer"], [18, 0, 0, "-", "mpl_drawers"], [34, 0, 0, "-", "opencv_drawers"], [37, 0, 0, "-", "terminal"]], "draugr.drawers.drawer": [[17, 2, 1, "", "Drawer"]], "draugr.drawers.drawer.Drawer": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "draw"]], "draugr.drawers.mpl_drawers": [[19, 0, 0, "-", "discrete_scroll_plot"], [20, 0, 0, "-", "distribution_plot"], [22, 0, 0, "-", "image_stream_plot"], [24, 0, 0, "-", "mpldrawer"], [27, 0, 0, "-", "series_scroll_plot"], [29, 0, 0, "-", "spectral"]], "draugr.drawers.mpl_drawers.distribution_plot": [[21, 2, 1, "", "DistributionPlot"]], "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "close"], [21, 3, 1, "", "draw"], [21, 3, 1, "", "move_figure"], [21, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.image_stream_plot": [[23, 2, 1, "", "ImageStreamPlot"]], "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "close"], [23, 3, 1, "", "draw"], [23, 3, 1, "", "move_figure"], [23, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer": [[25, 2, 1, "", "MockDrawer"], [26, 2, 1, "", "MplDrawer"]], "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "close"], [25, 3, 1, "", "draw"], [25, 3, 1, "", "move_figure"], [25, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "close"], [26, 3, 1, "", "draw"], [26, 3, 1, "", "move_figure"], [26, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.series_scroll_plot": [[28, 2, 1, "", "SeriesScrollPlot"]], "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "close"], [28, 3, 1, "", "draw"], [28, 3, 1, "", "move_figure"], [28, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral": [[30, 0, 0, "-", "fast_fourier_transform"], [32, 0, 0, "-", "fast_fourier_transform_spectrogram"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform": [[31, 2, 1, "", "FastFourierTransformPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "close"], [31, 3, 1, "", "draw"], [31, 3, 1, "", "move_figure"], [31, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram": [[33, 2, 1, "", "FastFourierTransformSpectrogramPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "close"], [33, 3, 1, "", "draw"], [33, 3, 1, "", "move_figure"], [33, 4, 1, "", "n"]], "draugr.drawers.opencv_drawers": [[35, 0, 0, "-", "opencv_image_stream"]], "draugr.drawers.opencv_drawers.opencv_image_stream": [[36, 2, 1, "", "OpencvImageStream"]], "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "draw"]], "draugr.drawers.terminal": [[38, 0, 0, "-", "terminal_image_renderer"], [42, 0, 0, "-", "terminal_plot"], [43, 0, 0, "-", "terminal_plotter"], [44, 0, 0, "-", "terminal_utilities"]], "draugr.drawers.terminal.terminal_image_renderer": [[39, 1, 1, "", "render_file"], [40, 1, 1, "", "terminal_render_image"], [41, 1, 1, "", "terminalise_image"]], "draugr.drawers.terminal.terminal_utilities": [[45, 1, 1, "", "scale"]], "draugr.entry_points": [[47, 0, 0, "-", "cpu_usage_entry_point"], [49, 0, 0, "-", "tensorboard_entry_point"], [51, 0, 0, "-", "toggle_darkmode"], [53, 0, 0, "-", "visdom_entry_point"]], "draugr.entry_points.cpu_usage_entry_point": [[48, 1, 1, "", "main"]], "draugr.entry_points.tensorboard_entry_point": [[50, 1, 1, "", "main"]], "draugr.entry_points.toggle_darkmode": [[52, 1, 1, "", "main"]], "draugr.entry_points.visdom_entry_point": [[54, 1, 1, "", "main"]], "draugr.extensions": [[56, 0, 0, "-", "skimage_utilities"], [58, 0, 0, "-", "sorcery_utilities"]], "draugr.extensions.skimage_utilities": [[57, 1, 1, "", "rgb_to_grayscale"]], "draugr.extensions.sorcery_utilities": [[59, 1, 1, "", "lower_case_assigned_names"], [60, 1, 1, "", "upper_case_assigned_names"]], "draugr.ffmpeg_utilities": [[62, 0, 0, "-", "exclude"], [63, 0, 0, "-", "extract"], [65, 0, 0, "-", "merge"], [67, 0, 0, "-", "sequencify"], [69, 0, 0, "-", "split"]], "draugr.ffmpeg_utilities.extract": [[64, 1, 1, "", "extract_frames"]], "draugr.ffmpeg_utilities.merge": [[66, 1, 1, "", "merge_video"]], "draugr.ffmpeg_utilities.sequencify": [[68, 1, 1, "", "sequencify_files"]], "draugr.ffmpeg_utilities.split": [[70, 1, 1, "", "spilt_video"]], "draugr.metrics": [[74, 0, 0, "-", "accumulation"], [78, 0, 0, "-", "meters"], [81, 0, 0, "-", "metric_aggregator"], [84, 0, 0, "-", "metric_collection"], [86, 0, 0, "-", "metric_summary"], [88, 0, 0, "-", "plotting"]], "draugr.metrics.accumulation": [[75, 1, 1, "", "lambda_accumulator"], [76, 1, 1, "", "mean_accumulator"], [77, 1, 1, "", "total_accumulator"]], "draugr.metrics.meters": [[79, 2, 1, "", "AverageMeter"], [80, 2, 1, "", "Meter"]], "draugr.metrics.meters.AverageMeter": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "reset"], [79, 3, 1, "", "update"]], "draugr.metrics.meters.Meter": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "reset"], [80, 3, 1, "", "update"]], "draugr.metrics.metric_aggregator": [[82, 2, 1, "", "MetricAggregator"], [83, 1, 1, "", "save_metric"]], "draugr.metrics.metric_aggregator.MetricAggregator": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "add"], [82, 3, 1, "", "append"], [82, 3, 1, "", "calc_moving_average"], [82, 3, 1, "", "calc_running_value"], [82, 5, 1, "", "max"], [82, 5, 1, "", "measures"], [82, 5, 1, "", "min"], [82, 3, 1, "", "save"], [82, 5, 1, "", "values"]], "draugr.metrics.metric_collection": [[85, 2, 1, "", "MetricCollection"]], "draugr.metrics.metric_collection.MetricCollection": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "add_metric"], [85, 3, 1, "", "append"], [85, 3, 1, "", "clear"], [85, 3, 1, "", "copy"], [85, 3, 1, "", "fromkeys"], [85, 3, 1, "", "get"], [85, 3, 1, "", "items"], [85, 3, 1, "", "keys"], [85, 5, 1, "", "metrics"], [85, 3, 1, "", "pop"], [85, 3, 1, "", "popitem"], [85, 3, 1, "", "remove_metric"], [85, 3, 1, "", "save"], [85, 3, 1, "", "setdefault"], [85, 3, 1, "", "update"], [85, 3, 1, "", "values"]], "draugr.metrics.metric_summary": [[87, 2, 1, "", "MetricSummary"]], "draugr.metrics.metric_summary.MetricSummary": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "append"], [87, 3, 1, "", "moving_average"], [87, 3, 1, "", "running_average"], [87, 5, 1, "", "values"]], "draugr.multiprocessing_utilities": [[90, 0, 0, "-", "pooled_queue_processor"]], "draugr.multiprocessing_utilities.pooled_queue_processor": [[91, 2, 1, "", "CloudPickleBase"], [92, 2, 1, "", "PooledQueueProcessor"], [93, 2, 1, "", "PooledQueueTask"]], "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase": [[91, 3, 1, "", "__init__"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor": [[92, 3, 1, "", "__init__"], [92, 3, 1, "", "close"], [92, 3, 1, "", "fill"], [92, 3, 1, "", "get"], [92, 3, 1, "", "maybe_fill"], [92, 3, 1, "", "put"], [92, 5, 1, "", "queue_size"], [92, 3, 1, "", "raise_error"], [92, 3, 1, "", "terminate"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "call"]], "draugr.numpy_utilities": [[95, 0, 0, "-", "channel_transform"], [100, 0, 0, "-", "datasets"], [114, 0, 0, "-", "manipulation"], [117, 0, 0, "-", "mixing"], [119, 0, 0, "-", "powers"], [125, 0, 0, "-", "raster_grid_2d_masking"], [127, 0, 0, "-", "raster_grid_3d_masking"], [129, 0, 0, "-", "resize"], [131, 0, 0, "-", "sampling"], [133, 0, 0, "-", "signal_utilities"]], "draugr.numpy_utilities.channel_transform": [[96, 1, 1, "", "chw_to_hwc"], [97, 1, 1, "", "float_chw_to_hwc_uint"], [98, 1, 1, "", "hwc_to_chw"], [99, 1, 1, "", "uint_hwc_to_chw_float"]], "draugr.numpy_utilities.datasets": [[101, 0, 0, "-", "categorical"], [108, 0, 0, "-", "defaults"], [109, 0, 0, "-", "splitting"]], "draugr.numpy_utilities.datasets.categorical": [[102, 0, 0, "-", "deep_category"], [104, 0, 0, "-", "flat_category"], [106, 0, 0, "-", "shallow_category"]], "draugr.numpy_utilities.datasets.categorical.deep_category": [[103, 1, 1, "", "build_deep_categorical_dataset"]], "draugr.numpy_utilities.datasets.categorical.flat_category": [[105, 1, 1, "", "build_flat_dataset"]], "draugr.numpy_utilities.datasets.categorical.shallow_category": [[107, 1, 1, "", "build_shallow_categorical_dataset"]], "draugr.numpy_utilities.datasets.splitting": [[110, 2, 1, "", "SplitEnum"], [111, 2, 1, "", "SplitIndexer"], [112, 1, 1, "", "select_split"], [113, 1, 1, "", "train_valid_test_split"]], "draugr.numpy_utilities.datasets.splitting.SplitEnum": [[110, 3, 1, "", "__init__"]], "draugr.numpy_utilities.datasets.splitting.SplitIndexer": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "select_shuffled_split_indices"], [111, 3, 1, "", "select_testing_indices"], [111, 3, 1, "", "select_train_indices"], [111, 3, 1, "", "select_validation_indices"], [111, 3, 1, "", "shuffled_indices"], [111, 3, 1, "", "unnormalised"]], "draugr.numpy_utilities.manipulation": [[115, 2, 1, "", "MyNdArray"], [116, 1, 1, "", "recursive_flatten_numpy"]], "draugr.numpy_utilities.manipulation.MyNdArray": [[115, 4, 1, "", "T"], [115, 3, 1, "", "__init__"], [115, 3, 1, "", "all"], [115, 3, 1, "", "any"], [115, 3, 1, "", "argmax"], [115, 3, 1, "", "argmin"], [115, 3, 1, "", "argpartition"], [115, 3, 1, "", "argsort"], [115, 3, 1, "", "astype"], [115, 4, 1, "", "base"], [115, 3, 1, "", "byteswap"], [115, 3, 1, "", "choose"], [115, 3, 1, "", "clip"], [115, 3, 1, "", "compress"], [115, 3, 1, "", "conj"], [115, 3, 1, "", "conjugate"], [115, 5, 1, "", "conjugate_transpose"], [115, 3, 1, "", "copy"], [115, 4, 1, "", "ctypes"], [115, 3, 1, "", "cumprod"], [115, 3, 1, "", "cumsum"], [115, 4, 1, "", "data"], [115, 3, 1, "", "diagonal"], [115, 3, 1, "", "dot"], [115, 4, 1, "", "dtype"], [115, 3, 1, "", "dump"], [115, 3, 1, "", "dumps"], [115, 3, 1, "", "fill"], [115, 4, 1, "", "flags"], [115, 4, 1, "", "flat"], [115, 3, 1, "", "flatten"], [115, 3, 1, "", "getfield"], [115, 4, 1, "", "imag"], [115, 3, 1, "", "item"], [115, 3, 1, "", "itemset"], [115, 4, 1, "", "itemsize"], [115, 3, 1, "", "max"], [115, 3, 1, "", "mean"], [115, 3, 1, "", "min"], [115, 4, 1, "", "nbytes"], [115, 4, 1, "", "ndim"], [115, 3, 1, "", "newbyteorder"], [115, 3, 1, "", "nonzero"], [115, 3, 1, "", "partition"], [115, 3, 1, "", "prod"], [115, 3, 1, "", "ptp"], [115, 3, 1, "", "put"], [115, 3, 1, "", "ravel"], [115, 4, 1, "", "real"], [115, 3, 1, "", "repeat"], [115, 3, 1, "", "reshape"], [115, 3, 1, "", "resize"], [115, 3, 1, "", "round"], [115, 3, 1, "", "searchsorted"], [115, 3, 1, "", "setfield"], [115, 3, 1, "", "setflags"], [115, 4, 1, "", "shape"], [115, 4, 1, "", "size"], [115, 3, 1, "", "sort"], [115, 3, 1, "", "squeeze"], [115, 3, 1, "", "std"], [115, 4, 1, "", "strides"], [115, 3, 1, "", "sum"], [115, 3, 1, "", "swapaxes"], [115, 3, 1, "", "take"], [115, 3, 1, "", "tobytes"], [115, 3, 1, "", "tofile"], [115, 3, 1, "", "tolist"], [115, 3, 1, "", "tostring"], [115, 3, 1, "", "trace"], [115, 3, 1, "", "transpose"], [115, 3, 1, "", "var"], [115, 3, 1, "", "view"]], "draugr.numpy_utilities.mixing": [[118, 1, 1, "", "mix_channels"]], "draugr.numpy_utilities.powers": [[120, 1, 1, "", "next_pow_10_numpy"], [121, 1, 1, "", "next_pow_2_numpy"], [122, 1, 1, "", "next_pow_numpy"], [123, 1, 1, "", "next_power_10_numpy"], [124, 1, 1, "", "next_power_2_numpy"]], "draugr.numpy_utilities.raster_grid_2d_masking": [[126, 1, 1, "", "circular_mask"]], "draugr.numpy_utilities.raster_grid_3d_masking": [[128, 1, 1, "", "sphere_mask"]], "draugr.numpy_utilities.resize": [[130, 1, 1, "", "resize_array"]], "draugr.numpy_utilities.sampling": [[132, 1, 1, "", "get_sampler"]], "draugr.numpy_utilities.signal_utilities": [[134, 0, 0, "-", "padding"], [137, 0, 0, "-", "signal_mixing"], [139, 0, 0, "-", "signal_projection"], [144, 0, 0, "-", "signal_statistics"], [147, 0, 0, "-", "truncation"]], "draugr.numpy_utilities.signal_utilities.padding": [[135, 1, 1, "", "zero_pad_to"], [136, 1, 1, "", "zero_pad_to_power_2"]], "draugr.numpy_utilities.signal_utilities.signal_mixing": [[138, 1, 1, "", "mix_ratio"]], "draugr.numpy_utilities.signal_utilities.signal_projection": [[140, 1, 1, "", "heaviside"], [141, 1, 1, "", "normalise_signal"], [142, 1, 1, "", "normalise_signal_max_abs"], [143, 1, 1, "", "normalise_signal_minmax"]], "draugr.numpy_utilities.signal_utilities.signal_statistics": [[145, 1, 1, "", "mean_square"], [146, 1, 1, "", "root_mean_square"]], "draugr.numpy_utilities.signal_utilities.truncation": [[148, 1, 1, "", "last_dim_truncate"], [149, 1, 1, "", "min_length_truncate_batch"], [150, 1, 1, "", "truncate_to_power_2"]], "draugr.opencv_utilities": [[152, 0, 0, "-", "bounding_boxes"], [160, 0, 0, "-", "color_space"], [188, 0, 0, "-", "drawing"], [206, 0, 0, "-", "namespaces"], [236, 0, 0, "-", "raster_sequences"], [244, 0, 0, "-", "transformation"], [269, 0, 0, "-", "windows"]], "draugr.opencv_utilities.bounding_boxes": [[153, 0, 0, "-", "boxes_2d"], [156, 0, 0, "-", "evaluation"]], "draugr.opencv_utilities.bounding_boxes.boxes_2d": [[154, 1, 1, "", "minmax_to_xywh"], [155, 1, 1, "", "xywh_to_minmax"]], "draugr.opencv_utilities.bounding_boxes.evaluation": [[157, 1, 1, "", "intersect_numpy"], [158, 1, 1, "", "jaccard_overlap_numpy"], [159, 1, 1, "", "remove_null_boxes"]], "draugr.opencv_utilities.color_space": [[161, 0, 0, "-", "clean"], [164, 0, 0, "-", "color"], [168, 0, 0, "-", "edge"], [172, 0, 0, "-", "gamma"], [178, 0, 0, "-", "gray"], [181, 0, 0, "-", "noise"], [184, 0, 0, "-", "threshold"]], "draugr.opencv_utilities.color_space.clean": [[162, 2, 1, "", "CleanUpMethod"], [163, 1, 1, "", "clean_up"]], "draugr.opencv_utilities.color_space.clean.CleanUpMethod": [[162, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.color": [[165, 1, 1, "", "is_singular_channel"], [166, 1, 1, "", "num_channels"], [167, 1, 1, "", "to_color"]], "draugr.opencv_utilities.color_space.edge": [[169, 2, 1, "", "CannyApertureSize"], [170, 2, 1, "", "ToEdgeMethodEnum"], [171, 1, 1, "", "to_edge"]], "draugr.opencv_utilities.color_space.edge.CannyApertureSize": [[169, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum": [[170, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.gamma": [[173, 1, 1, "", "gamma_correct_byte"], [174, 1, 1, "", "gamma_correct_fast_to_byte"], [175, 1, 1, "", "gamma_correct_float_to_byte"], [176, 1, 1, "", "linear_correct_byte"], [177, 1, 1, "", "linear_correct_float_to_byte"]], "draugr.opencv_utilities.color_space.gray": [[179, 2, 1, "", "ToGrayMethodEnum"], [180, 1, 1, "", "to_gray"]], "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum": [[179, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.noise": [[182, 2, 1, "", "NoiseFilterMethodEnum"], [183, 1, 1, "", "noise_filter"]], "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum": [[182, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.threshold": [[185, 2, 1, "", "ThresholdMethodEnum"], [186, 1, 1, "", "hsv_min_max_clip_mask"], [187, 1, 1, "", "threshold_channel"]], "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum": [[185, 3, 1, "", "__init__"]], "draugr.opencv_utilities.drawing": [[189, 0, 0, "-", "draw_boxes"], [193, 0, 0, "-", "masks"], [199, 0, 0, "-", "opencv_draw"], [202, 0, 0, "-", "opencv_drawing_utilities"]], "draugr.opencv_utilities.drawing.draw_boxes": [[190, 1, 1, "", "draw_bounding_boxes"], [191, 1, 1, "", "draw_single_box"], [192, 1, 1, "", "draw_single_rect"]], "draugr.opencv_utilities.drawing.masks": [[194, 0, 0, "-", "gauss_circles"], [198, 0, 0, "-", "segment_ellipse"]], "draugr.opencv_utilities.drawing.masks.gauss_circles": [[195, 1, 1, "", "ellipse_bbox"], [196, 1, 1, "", "make_gradient_v1"], [197, 1, 1, "", "make_gradient_v2"]], "draugr.opencv_utilities.drawing.opencv_draw": [[200, 1, 1, "", "draw_masks"], [201, 1, 1, "", "find_contours"]], "draugr.opencv_utilities.drawing.opencv_drawing_utilities": [[203, 1, 1, "", "cube_3d_matrix"], [204, 1, 1, "", "draw_axis"], [205, 1, 1, "", "draw_cube"]], "draugr.opencv_utilities.namespaces": [[207, 0, 0, "-", "color_conversion_enum"], [209, 0, 0, "-", "enums"], [230, 0, 0, "-", "flags"]], "draugr.opencv_utilities.namespaces.color_conversion_enum": [[208, 2, 1, "", "ColorConversionEnum"]], "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum": [[208, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums": [[210, 2, 1, "", "BorderTypeEnum"], [211, 2, 1, "", "CameraPropertyEnum"], [212, 2, 1, "", "ComparisonEnum"], [213, 2, 1, "", "ContourApproximationModeEnum"], [214, 2, 1, "", "ContourRetrievalModeEnum"], [215, 2, 1, "", "DataTypeEnum"], [216, 2, 1, "", "DistanceTransformLabelTypeEnum"], [217, 2, 1, "", "DistanceTransformMaskEnum"], [218, 2, 1, "", "DistanceTypeEnum"], [219, 2, 1, "", "FontEnum"], [220, 2, 1, "", "HoughModeEnum"], [221, 2, 1, "", "KmeansEnum"], [222, 2, 1, "", "LineTypeEnum"], [223, 2, 1, "", "MarkerTypeEnum"], [224, 2, 1, "", "MorphShapeEnum"], [225, 2, 1, "", "MorphTypeEnum"], [226, 2, 1, "", "MouseEventEnum"], [227, 2, 1, "", "RectanglesIntersectTypes"], [228, 2, 1, "", "VideoCaptureAPIEnum"], [229, 2, 1, "", "WindowFlagEnum"]], "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum": [[210, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum": [[211, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ComparisonEnum": [[212, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum": [[213, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum": [[214, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DataTypeEnum": [[215, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum": [[216, 3, 1, "", "__init__"], [216, 4, 1, "", "ccomp"], [216, 4, 1, "", "pixel"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum": [[217, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum": [[218, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.FontEnum": [[219, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.HoughModeEnum": [[220, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.KmeansEnum": [[221, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.LineTypeEnum": [[222, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum": [[223, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum": [[224, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum": [[225, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MouseEventEnum": [[226, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes": [[227, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum": [[228, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum": [[229, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags": [[231, 2, 1, "", "DrawMatchesFlagEnum"], [232, 2, 1, "", "MouseEventFlag"], [233, 2, 1, "", "TermCriteriaFlag"], [234, 2, 1, "", "ThresholdTypeFlag"], [235, 2, 1, "", "WindowPropertyFlag"]], "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum": [[231, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.MouseEventFlag": [[232, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag": [[233, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag": [[234, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag": [[235, 3, 1, "", "__init__"]], "draugr.opencv_utilities.raster_sequences": [[237, 0, 0, "-", "async_video_stream"], [239, 0, 0, "-", "frame_annotation"], [242, 0, 0, "-", "frames"]], "draugr.opencv_utilities.raster_sequences.async_video_stream": [[238, 2, 1, "", "AsyncVideoStream"]], "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream": [[238, 3, 1, "", "__init__"], [238, 3, 1, "", "isOpened"], [238, 3, 1, "", "read"], [238, 3, 1, "", "start"], [238, 3, 1, "", "stop"], [238, 3, 1, "", "update"]], "draugr.opencv_utilities.raster_sequences.frame_annotation": [[240, 1, 1, "", "blit_fps"], [241, 1, 1, "", "blit_numbering_raster_sequence"]], "draugr.opencv_utilities.raster_sequences.frames": [[243, 1, 1, "", "frame_generator"]], "draugr.opencv_utilities.transformation": [[245, 0, 0, "-", "cropping"], [247, 0, 0, "-", "cv2_transforms"], [266, 0, 0, "-", "resize"]], "draugr.opencv_utilities.transformation.cropping": [[246, 1, 1, "", "circle_crop"]], "draugr.opencv_utilities.transformation.cv2_transforms": [[248, 2, 1, "", "CV2Compose"], [249, 2, 1, "", "CV2ConvertColor"], [250, 2, 1, "", "CV2Expand"], [251, 2, 1, "", "CV2PhotometricDistort"], [252, 2, 1, "", "CV2RandomBrightness"], [253, 2, 1, "", "CV2RandomContrast"], [254, 2, 1, "", "CV2RandomHue"], [255, 2, 1, "", "CV2RandomLightingNoise"], [256, 2, 1, "", "CV2RandomMirror"], [257, 2, 1, "", "CV2RandomSampleCrop"], [258, 2, 1, "", "CV2RandomSaturation"], [259, 2, 1, "", "CV2Resize"], [260, 2, 1, "", "CV2SwapChannels"], [261, 2, 1, "", "CV2ToAbsoluteCoords"], [262, 2, 1, "", "CV2ToPercentCoords"], [263, 2, 1, "", "ConvertFromInts"], [264, 2, 1, "", "Lambda"], [265, 2, 1, "", "SubtractMeans"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose": [[248, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor": [[249, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand": [[250, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort": [[251, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness": [[252, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast": [[253, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue": [[254, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise": [[255, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror": [[256, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop": [[257, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation": [[258, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize": [[259, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels": [[260, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords": [[261, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords": [[262, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts": [[263, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.Lambda": [[264, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans": [[265, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.resize": [[267, 2, 1, "", "InterpolationEnum"], [268, 1, 1, "", "cv2_resize"]], "draugr.opencv_utilities.transformation.resize.InterpolationEnum": [[267, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows": [[270, 0, 0, "-", "color_picker"], [272, 0, 0, "-", "default"], [275, 0, 0, "-", "elements"], [278, 0, 0, "-", "hough_circles"], [280, 0, 0, "-", "image"]], "draugr.opencv_utilities.windows.color_picker": [[271, 1, 1, "", "interactive_hsv_color_picker"]], "draugr.opencv_utilities.windows.default": [[273, 2, 1, "", "ExtensionEnum"], [274, 1, 1, "", "match_return_code"]], "draugr.opencv_utilities.windows.default.ExtensionEnum": [[273, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows.elements": [[276, 0, 0, "-", "trackbar"]], "draugr.opencv_utilities.windows.elements.trackbar": [[277, 1, 1, "", "add_trackbar"]], "draugr.opencv_utilities.windows.hough_circles": [[279, 1, 1, "", "interactive_hough_circles"]], "draugr.opencv_utilities.windows.image": [[281, 1, 1, "", "show_image"]], "draugr.os_utilities": [[283, 0, 0, "-", "cuda_device"], [287, 0, 0, "-", "linux_utilities"], [324, 0, 0, "-", "platform_selection"], [326, 0, 0, "-", "resource_utilities"], [339, 0, 0, "-", "screen_resolution"], [347, 0, 0, "-", "service"]], "draugr.os_utilities.cuda_device": [[284, 2, 1, "", "DeviceOrderEnum"], [285, 1, 1, "", "set_cuda_device_order"], [286, 1, 1, "", "set_cuda_visible_devices"]], "draugr.os_utilities.cuda_device.DeviceOrderEnum": [[284, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities": [[288, 0, 0, "-", "gnome_utilities"], [291, 0, 0, "-", "gtk_utilities"], [296, 0, 0, "-", "systemd_utilities"], [319, 0, 0, "-", "user_utilities"]], "draugr.os_utilities.linux_utilities.gnome_utilities": [[289, 0, 0, "-", "dark_mode"]], "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode": [[290, 1, 1, "", "is_dark_mode_active"]], "draugr.os_utilities.linux_utilities.gtk_utilities": [[292, 0, 0, "-", "gtk_settings"], [294, 0, 0, "-", "theme_preferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings": [[293, 2, 1, "", "GtkSettings"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings": [[293, 3, 1, "", "__init__"], [293, 5, 1, "", "all_settings"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences": [[295, 2, 1, "", "GtkThemePreferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences": [[295, 3, 1, "", "__init__"], [295, 5, 1, "", "all_settings"], [295, 5, 1, "", "prefer_dark_mode"], [295, 5, 1, "", "theme"]], "draugr.os_utilities.linux_utilities.systemd_utilities": [[297, 0, 0, "-", "exclude"], [308, 0, 0, "-", "service_management"], [318, 0, 0, "-", "service_template"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude": [[298, 0, 0, "-", "amdroc"], [299, 0, 0, "-", "deprecated"], [306, 0, 0, "-", "docker_inspection"], [307, 0, 0, "-", "psystemd"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated": [[300, 0, 0, "-", "libuser_test"], [301, 0, 0, "-", "systemd_utilities_old"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old": [[302, 1, 1, "", "disable_service"], [303, 1, 1, "", "enable_service"], [304, 1, 1, "", "install_service"], [305, 1, 1, "", "remove_service"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management": [[309, 2, 1, "", "RunAsEnum"], [310, 1, 1, "", "disable_service"], [311, 1, 1, "", "enable_service"], [312, 1, 1, "", "install_service"], [313, 1, 1, "", "remove_service"], [314, 1, 1, "", "restart_service"], [315, 1, 1, "", "start_service"], [316, 1, 1, "", "status_service"], [317, 1, 1, "", "stop_service"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum": [[309, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.user_utilities": [[320, 1, 1, "", "change_home_dir"], [321, 1, 1, "", "change_passwd"], [322, 1, 1, "", "make_user"], [323, 1, 1, "", "remove_user"]], "draugr.os_utilities.platform_selection": [[325, 1, 1, "", "get_backend_module"]], "draugr.os_utilities.resource_utilities": [[327, 0, 0, "-", "all"], [336, 0, 0, "-", "gpu"], [337, 0, 0, "-", "ram"]], "draugr.os_utilities.resource_utilities.all": [[328, 1, 1, "", "get_num_instances"]], "draugr.os_utilities.resource_utilities.cpu": [[330, 2, 1, "", "WorkerSession"], [331, 1, 1, "", "release_worker_cores"], [332, 1, 1, "", "request_worker_cores"], [333, 1, 1, "", "reset_worker_tracker"], [334, 1, 1, "", "worker_cores_available"], [335, 1, 1, "", "worker_cores_in_use"]], "draugr.os_utilities.resource_utilities.cpu.WorkerSession": [[330, 3, 1, "", "__init__"]], "draugr.os_utilities.resource_utilities.ram": [[338, 1, 1, "", "num_instance_no_paging"]], "draugr.os_utilities.screen_resolution": [[340, 1, 1, "", "get_screen_resolution"], [341, 1, 1, "", "screen_res_gtk"], [342, 1, 1, "", "screen_res_mac"], [343, 1, 1, "", "screen_res_pygame"], [344, 1, 1, "", "screen_res_tk"], [345, 1, 1, "", "screen_res_win"], [346, 1, 1, "", "screen_res_xlib"]], "draugr.os_utilities.service": [[348, 1, 1, "", "add_service"], [349, 1, 1, "", "remove_service"]], "draugr.pandas_utilities": [[351, 0, 0, "-", "formatting"], [353, 0, 0, "-", "from_dict"], [357, 0, 0, "-", "latex_mean_std"], [362, 0, 0, "-", "misc_utilities"], [366, 0, 0, "-", "multi_index_utilities"], [368, 0, 0, "-", "styling"]], "draugr.pandas_utilities.formatting": [[352, 1, 1, "", "pandas_mean_std_bold_formatter"]], "draugr.pandas_utilities.from_dict": [[354, 1, 1, "", "nested_dict_to_four_level_column_df"], [355, 1, 1, "", "nested_dict_to_three_level_column_df"], [356, 1, 1, "", "nested_dict_to_two_level_column_df"]], "draugr.pandas_utilities.latex_mean_std": [[358, 1, 1, "", "pandas_format_bold_max_row_latex"], [359, 1, 1, "", "pandas_mean_std"], [360, 1, 1, "", "pandas_mean_std_to_str"], [361, 1, 1, "", "pandas_to_latex_clean"]], "draugr.pandas_utilities.misc_utilities": [[363, 2, 1, "", "ChainedAssignmentOptionEnum"], [364, 2, 1, "", "ExportMethodEnum"], [365, 1, 1, "", "duplicate_columns"]], "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum": [[363, 3, 1, "", "__init__"]], "draugr.pandas_utilities.misc_utilities.ExportMethodEnum": [[364, 3, 1, "", "__init__"]], "draugr.pandas_utilities.multi_index_utilities": [[367, 1, 1, "", "add_index_level"]], "draugr.pandas_utilities.styling": [[369, 2, 1, "", "AttrEnum"], [370, 2, 1, "", "ColorEnum"], [371, 2, 1, "", "NDFrameExtremeEnum"], [372, 1, 1, "", "color_highlight_extreme"], [373, 1, 1, "", "color_negative_red"]], "draugr.pandas_utilities.styling.AttrEnum": [[369, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.ColorEnum": [[370, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.NDFrameExtremeEnum": [[371, 3, 1, "", "__init__"]], "draugr.pygame_utilities": [[375, 0, 0, "-", "screen"]], "draugr.pygame_utilities.screen": [[376, 1, 1, "", "get_screen_resolution"]], "draugr.python_utilities": [[378, 0, 0, "-", "broadcasting"], [380, 0, 0, "-", "counter_filter"], [382, 0, 0, "-", "exclude"], [390, 0, 0, "-", "function_wrappers"], [404, 0, 0, "-", "http"], [406, 0, 0, "-", "sockets"], [410, 0, 0, "-", "torch_like_channel_transformation"]], "draugr.python_utilities.broadcasting": [[379, 2, 1, "", "BroadcastNone"]], "draugr.python_utilities.broadcasting.BroadcastNone": [[379, 3, 1, "", "__init__"], [379, 3, 1, "", "mro"]], "draugr.python_utilities.counter_filter": [[381, 2, 1, "", "CounterFilter"]], "draugr.python_utilities.counter_filter.CounterFilter": [[381, 3, 1, "", "__init__"], [381, 3, 1, "", "filter"]], "draugr.python_utilities.exclude": [[383, 0, 0, "-", "packages"], [387, 0, 0, "-", "worker"]], "draugr.python_utilities.exclude.packages": [[384, 1, 1, "", "a"], [385, 1, 1, "", "b"], [386, 1, 1, "", "c"]], "draugr.python_utilities.exclude.worker": [[388, 1, 1, "", "main"], [389, 1, 1, "", "spawn"]], "draugr.python_utilities.function_wrappers": [[391, 1, 1, "", "max_frequency"], [392, 1, 1, "", "min_interval_wrapper"], [393, 1, 1, "", "min_interval_wrapper_global"], [394, 1, 1, "", "wrap_args"]], "draugr.python_utilities.generators": [[396, 0, 0, "-", "batching_generator"], [401, 0, 0, "-", "recycling_generator"]], "draugr.python_utilities.generators.batching_generator": [[397, 1, 1, "", "batch_generator"], [398, 1, 1, "", "random_batches"], [399, 1, 1, "", "shuffled_batches"], [400, 1, 1, "", "sized_batch"]], "draugr.python_utilities.generators.recycling_generator": [[402, 1, 1, "", "batched_recycle"], [403, 1, 1, "", "recycle"]], "draugr.python_utilities.http": [[405, 2, 1, "", "HttpMethodEnum"]], "draugr.python_utilities.http.HttpMethodEnum": [[405, 3, 1, "", "__init__"]], "draugr.python_utilities.sockets": [[407, 1, 1, "", "find_unclaimed_port"], [408, 1, 1, "", "get_host_ip"], [409, 1, 1, "", "is_port_in_use"]], "draugr.python_utilities.torch_like_channel_transformation": [[411, 1, 1, "", "reverse_torch_vision_normalize_batch_nchw"], [412, 1, 1, "", "rgb_drop_alpha_batch_nhwc"], [413, 1, 1, "", "rgb_drop_alpha_hwc"], [414, 1, 1, "", "torch_vision_normalize_batch_nchw"]], "draugr.random_utilities": [[416, 0, 0, "-", "seeding"]], "draugr.random_utilities.seeding": [[417, 1, 1, "", "seed_stack"]], "draugr.scipy_utilities": [[419, 0, 0, "-", "scipy_utilities"], [422, 0, 0, "-", "signal_processing"], [423, 0, 0, "-", "subsampling"]], "draugr.scipy_utilities.scipy_utilities": [[420, 1, 1, "", "read_normalised_wave"], [421, 1, 1, "", "write_normalised_wave"]], "draugr.scipy_utilities.subsampling": [[424, 1, 1, "", "fft_subsample"], [425, 1, 1, "", "fir_subsample"], [426, 1, 1, "", "mag_decimation_subsample"], [427, 1, 1, "", "max_decimation_subsample"], [428, 1, 1, "", "min_decimation_subsample"]], "draugr.stopping": [[430, 0, 0, "-", "stopping_key"]], "draugr.stopping.stopping_key": [[431, 2, 1, "", "CaptureEarlyStop"], [432, 1, 1, "", "add_early_stopping_key_combination"]], "draugr.stopping.stopping_key.CaptureEarlyStop": [[431, 3, 1, "", "__init__"]], "draugr.tensorboard_utilities": [[434, 0, 0, "-", "experimental"], [438, 0, 0, "-", "exporting"]], "draugr.tensorboard_utilities.experimental": [[435, 0, 0, "-", "confusion_matrix"], [436, 0, 0, "-", "pretty_cf"]], "draugr.tensorboard_utilities.experimental.pretty_cf": [[437, 1, 1, "", "pretty_print_conf_matrix"]], "draugr.tensorboard_utilities.exporting": [[439, 0, 0, "-", "db_export"], [441, 0, 0, "-", "event_export"], [443, 0, 0, "-", "file_export"]], "draugr.tensorboard_utilities.exporting.db_export": [[440, 2, 1, "", "TensorboardEventExporterDatabase"]], "draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase": [[440, 3, 1, "", "__init__"], [440, 3, 1, "", "export_audio"], [440, 3, 1, "", "export_distribution"], [440, 3, 1, "", "export_graph"], [440, 3, 1, "", "export_histogram"], [440, 3, 1, "", "export_image"], [440, 3, 1, "", "export_line_plot"], [440, 3, 1, "", "export_scalar"], [440, 3, 1, "", "export_tensor"], [440, 3, 1, "", "pr_curve_export_csv"], [440, 3, 1, "", "scalar_export_csv"], [440, 3, 1, "", "tag_test"], [440, 3, 1, "", "tensor_export_csv"]], "draugr.tensorboard_utilities.exporting.event_export": [[442, 2, 1, "", "TensorboardEventExporter"]], "draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter": [[442, 3, 1, "", "__init__"], [442, 3, 1, "", "export_audio"], [442, 3, 1, "", "export_distribution"], [442, 3, 1, "", "export_graph"], [442, 3, 1, "", "export_histogram"], [442, 3, 1, "", "export_image"], [442, 3, 1, "", "export_line_plot"], [442, 3, 1, "", "export_scalar"], [442, 3, 1, "", "export_tensor"], [442, 3, 1, "", "pr_curve_export_csv"], [442, 3, 1, "", "scalar_export_csv"], [442, 3, 1, "", "tag_test"], [442, 3, 1, "", "tensor_export_csv"]], "draugr.tensorboard_utilities.exporting.file_export": [[444, 2, 1, "", "TensorboardEventExporterFile"]], "draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile": [[444, 3, 1, "", "__init__"], [444, 3, 1, "", "export_audio"], [444, 3, 1, "", "export_distribution"], [444, 3, 1, "", "export_graph"], [444, 3, 1, "", "export_histogram"], [444, 3, 1, "", "export_image"], [444, 3, 1, "", "export_line_plot"], [444, 3, 1, "", "export_scalar"], [444, 3, 1, "", "export_tensor"], [444, 3, 1, "", "pr_curve_export_csv"], [444, 3, 1, "", "scalar_export_csv"], [444, 3, 1, "", "tag_test"], [444, 3, 1, "", "tensor_export_csv"]], "draugr.threading_utilities": [[446, 0, 0, "-", "exclude"], [447, 0, 0, "-", "skipper"]], "draugr.threading_utilities.skipper": [[448, 2, 1, "", "Skipper"]], "draugr.threading_utilities.skipper.Skipper": [[448, 3, 1, "", "__init__"], [448, 3, 1, "", "loop"], [448, 3, 1, "", "stop"]], "draugr.torch_utilities": [[450, 0, 0, "-", "architectures"], [479, 0, 0, "-", "datasets"], [493, 0, 0, "-", "distributions"], [500, 0, 0, "-", "evaluation"], [505, 0, 0, "-", "exporting"], [512, 0, 0, "-", "generators"], [516, 0, 0, "-", "images"], [524, 0, 0, "-", "opencv"], [528, 0, 0, "-", "operations"], [550, 0, 0, "-", "optimisation"], [587, 0, 0, "-", "persistence"], [626, 0, 0, "-", "system"], [648, 0, 0, "-", "tensors"]], "draugr.torch_utilities.architectures": [[451, 0, 0, "-", "architecture"], [453, 0, 0, "-", "distributional"], [462, 0, 0, "-", "experimental"], [469, 0, 0, "-", "mlp"], [471, 0, 0, "-", "mlp_variants"]], "draugr.torch_utilities.architectures.architecture": [[452, 2, 1, "", "Architecture"]], "draugr.torch_utilities.architectures.architecture.Architecture": [[452, 3, 1, "", "__init__"], [452, 3, 1, "", "add_module"], [452, 3, 1, "", "apply"], [452, 3, 1, "", "bfloat16"], [452, 3, 1, "", "buffers"], [452, 3, 1, "", "children"], [452, 3, 1, "", "cpu"], [452, 3, 1, "", "cuda"], [452, 3, 1, "", "double"], [452, 3, 1, "", "eval"], [452, 3, 1, "", "extra_repr"], [452, 3, 1, "", "float"], [452, 3, 1, "", "forward"], [452, 3, 1, "", "get_buffer"], [452, 3, 1, "", "get_extra_state"], [452, 3, 1, "", "get_parameter"], [452, 3, 1, "", "get_submodule"], [452, 3, 1, "", "half"], [452, 5, 1, "", "input_shape"], [452, 3, 1, "", "ipu"], [452, 3, 1, "", "load_state_dict"], [452, 3, 1, "", "modules"], [452, 3, 1, "", "named_buffers"], [452, 3, 1, "", "named_children"], [452, 3, 1, "", "named_modules"], [452, 3, 1, "", "named_parameters"], [452, 5, 1, "", "output_shape"], [452, 3, 1, "", "parameters"], [452, 3, 1, "", "register_backward_hook"], [452, 3, 1, "", "register_buffer"], [452, 3, 1, "", "register_forward_hook"], [452, 3, 1, "", "register_forward_pre_hook"], [452, 3, 1, "", "register_full_backward_hook"], [452, 3, 1, "", "register_load_state_dict_post_hook"], [452, 3, 1, "", "register_module"], [452, 3, 1, "", "register_parameter"], [452, 3, 1, "", "requires_grad_"], [452, 3, 1, "", "sample_input"], [452, 3, 1, "", "set_extra_state"], [452, 3, 1, "", "share_memory"], [452, 3, 1, "", "state_dict"], [452, 3, 1, "", "to"], [452, 3, 1, "", "to_empty"], [452, 3, 1, "", "train"], [452, 3, 1, "", "type"], [452, 3, 1, "", "xpu"], [452, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional": [[454, 0, 0, "-", "categorical"], [457, 0, 0, "-", "normal"]], "draugr.torch_utilities.architectures.distributional.categorical": [[455, 2, 1, "", "CategoricalMLP"], [456, 2, 1, "", "MultipleCategoricalMLP"]], "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP": [[455, 3, 1, "", "__init__"], [455, 3, 1, "", "add_module"], [455, 3, 1, "", "apply"], [455, 3, 1, "", "bfloat16"], [455, 3, 1, "", "buffers"], [455, 3, 1, "", "children"], [455, 3, 1, "", "construct_progressive_hidden_layers"], [455, 3, 1, "", "cpu"], [455, 3, 1, "", "cuda"], [455, 3, 1, "", "double"], [455, 3, 1, "", "eval"], [455, 3, 1, "", "extra_repr"], [455, 3, 1, "", "float"], [455, 3, 1, "", "forward"], [455, 3, 1, "", "get_buffer"], [455, 3, 1, "", "get_extra_state"], [455, 3, 1, "", "get_parameter"], [455, 3, 1, "", "get_submodule"], [455, 3, 1, "", "half"], [455, 3, 1, "", "infer_input_shape"], [455, 3, 1, "", "infer_output_shape"], [455, 5, 1, "", "input_shape"], [455, 3, 1, "", "ipu"], [455, 3, 1, "", "load_state_dict"], [455, 3, 1, "", "modules"], [455, 3, 1, "", "named_buffers"], [455, 3, 1, "", "named_children"], [455, 3, 1, "", "named_modules"], [455, 3, 1, "", "named_parameters"], [455, 5, 1, "", "output_shape"], [455, 3, 1, "", "parameters"], [455, 3, 1, "", "register_backward_hook"], [455, 3, 1, "", "register_buffer"], [455, 3, 1, "", "register_forward_hook"], [455, 3, 1, "", "register_forward_pre_hook"], [455, 3, 1, "", "register_full_backward_hook"], [455, 3, 1, "", "register_load_state_dict_post_hook"], [455, 3, 1, "", "register_module"], [455, 3, 1, "", "register_parameter"], [455, 3, 1, "", "requires_grad_"], [455, 3, 1, "", "sample_input"], [455, 3, 1, "", "set_extra_state"], [455, 3, 1, "", "share_memory"], [455, 3, 1, "", "state_dict"], [455, 3, 1, "", "to"], [455, 3, 1, "", "to_empty"], [455, 3, 1, "", "train"], [455, 3, 1, "", "type"], [455, 3, 1, "", "xpu"], [455, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP": [[456, 3, 1, "", "__init__"], [456, 3, 1, "", "add_module"], [456, 3, 1, "", "apply"], [456, 3, 1, "", "bfloat16"], [456, 3, 1, "", "buffers"], [456, 3, 1, "", "children"], [456, 3, 1, "", "construct_progressive_hidden_layers"], [456, 3, 1, "", "cpu"], [456, 3, 1, "", "cuda"], [456, 3, 1, "", "double"], [456, 3, 1, "", "entropy"], [456, 3, 1, "", "eval"], [456, 3, 1, "", "extra_repr"], [456, 3, 1, "", "float"], [456, 3, 1, "", "forward"], [456, 3, 1, "", "get_buffer"], [456, 3, 1, "", "get_extra_state"], [456, 3, 1, "", "get_parameter"], [456, 3, 1, "", "get_submodule"], [456, 3, 1, "", "half"], [456, 3, 1, "", "infer_input_shape"], [456, 3, 1, "", "infer_output_shape"], [456, 5, 1, "", "input_shape"], [456, 3, 1, "", "ipu"], [456, 3, 1, "", "load_state_dict"], [456, 3, 1, "", "modules"], [456, 3, 1, "", "named_buffers"], [456, 3, 1, "", "named_children"], [456, 3, 1, "", "named_modules"], [456, 3, 1, "", "named_parameters"], [456, 5, 1, "", "output_shape"], [456, 3, 1, "", "parameters"], [456, 3, 1, "", "register_backward_hook"], [456, 3, 1, "", "register_buffer"], [456, 3, 1, "", "register_forward_hook"], [456, 3, 1, "", "register_forward_pre_hook"], [456, 3, 1, "", "register_full_backward_hook"], [456, 3, 1, "", "register_load_state_dict_post_hook"], [456, 3, 1, "", "register_module"], [456, 3, 1, "", "register_parameter"], [456, 3, 1, "", "requires_grad_"], [456, 3, 1, "", "sample"], [456, 3, 1, "", "sample_input"], [456, 3, 1, "", "set_extra_state"], [456, 3, 1, "", "share_memory"], [456, 3, 1, "", "state_dict"], [456, 3, 1, "", "to"], [456, 3, 1, "", "to_empty"], [456, 3, 1, "", "train"], [456, 3, 1, "", "type"], [456, 3, 1, "", "xpu"], [456, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal": [[458, 2, 1, "", "MultiDimensionalNormalMLP"], [459, 2, 1, "", "MultiVariateNormalMLP"], [460, 2, 1, "", "MultipleNormalMLP"], [461, 2, 1, "", "ShallowStdNormalMLP"]], "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP": [[458, 3, 1, "", "__init__"], [458, 3, 1, "", "add_module"], [458, 3, 1, "", "apply"], [458, 3, 1, "", "bfloat16"], [458, 3, 1, "", "buffers"], [458, 3, 1, "", "children"], [458, 3, 1, "", "construct_progressive_hidden_layers"], [458, 3, 1, "", "cpu"], [458, 3, 1, "", "cuda"], [458, 3, 1, "", "double"], [458, 3, 1, "", "eval"], [458, 3, 1, "", "extra_repr"], [458, 3, 1, "", "float"], [458, 3, 1, "", "forward"], [458, 3, 1, "", "get_buffer"], [458, 3, 1, "", "get_extra_state"], [458, 3, 1, "", "get_parameter"], [458, 3, 1, "", "get_submodule"], [458, 3, 1, "", "half"], [458, 3, 1, "", "infer_input_shape"], [458, 3, 1, "", "infer_output_shape"], [458, 5, 1, "", "input_shape"], [458, 3, 1, "", "ipu"], [458, 3, 1, "", "load_state_dict"], [458, 3, 1, "", "modules"], [458, 3, 1, "", "named_buffers"], [458, 3, 1, "", "named_children"], [458, 3, 1, "", "named_modules"], [458, 3, 1, "", "named_parameters"], [458, 5, 1, "", "output_shape"], [458, 3, 1, "", "parameters"], [458, 3, 1, "", "register_backward_hook"], [458, 3, 1, "", "register_buffer"], [458, 3, 1, "", "register_forward_hook"], [458, 3, 1, "", "register_forward_pre_hook"], [458, 3, 1, "", "register_full_backward_hook"], [458, 3, 1, "", "register_load_state_dict_post_hook"], [458, 3, 1, "", "register_module"], [458, 3, 1, "", "register_parameter"], [458, 3, 1, "", "requires_grad_"], [458, 3, 1, "", "sample_input"], [458, 3, 1, "", "set_extra_state"], [458, 3, 1, "", "share_memory"], [458, 3, 1, "", "state_dict"], [458, 3, 1, "", "to"], [458, 3, 1, "", "to_empty"], [458, 3, 1, "", "train"], [458, 3, 1, "", "type"], [458, 3, 1, "", "xpu"], [458, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP": [[459, 3, 1, "", "__init__"], [459, 3, 1, "", "add_module"], [459, 3, 1, "", "apply"], [459, 3, 1, "", "bfloat16"], [459, 3, 1, "", "buffers"], [459, 3, 1, "", "children"], [459, 3, 1, "", "construct_progressive_hidden_layers"], [459, 3, 1, "", "cpu"], [459, 3, 1, "", "cuda"], [459, 3, 1, "", "double"], [459, 3, 1, "", "eval"], [459, 3, 1, "", "extra_repr"], [459, 3, 1, "", "float"], [459, 3, 1, "", "forward"], [459, 3, 1, "", "get_buffer"], [459, 3, 1, "", "get_extra_state"], [459, 3, 1, "", "get_parameter"], [459, 3, 1, "", "get_submodule"], [459, 3, 1, "", "half"], [459, 3, 1, "", "infer_input_shape"], [459, 3, 1, "", "infer_output_shape"], [459, 5, 1, "", "input_shape"], [459, 3, 1, "", "ipu"], [459, 3, 1, "", "load_state_dict"], [459, 3, 1, "", "modules"], [459, 3, 1, "", "named_buffers"], [459, 3, 1, "", "named_children"], [459, 3, 1, "", "named_modules"], [459, 3, 1, "", "named_parameters"], [459, 5, 1, "", "output_shape"], [459, 3, 1, "", "parameters"], [459, 3, 1, "", "register_backward_hook"], [459, 3, 1, "", "register_buffer"], [459, 3, 1, "", "register_forward_hook"], [459, 3, 1, "", "register_forward_pre_hook"], [459, 3, 1, "", "register_full_backward_hook"], [459, 3, 1, "", "register_load_state_dict_post_hook"], [459, 3, 1, "", "register_module"], [459, 3, 1, "", "register_parameter"], [459, 3, 1, "", "requires_grad_"], [459, 3, 1, "", "sample_input"], [459, 3, 1, "", "set_extra_state"], [459, 3, 1, "", "share_memory"], [459, 3, 1, "", "state_dict"], [459, 3, 1, "", "to"], [459, 3, 1, "", "to_empty"], [459, 3, 1, "", "train"], [459, 3, 1, "", "type"], [459, 3, 1, "", "xpu"], [459, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP": [[460, 3, 1, "", "__init__"], [460, 3, 1, "", "add_module"], [460, 3, 1, "", "apply"], [460, 3, 1, "", "bfloat16"], [460, 3, 1, "", "buffers"], [460, 3, 1, "", "children"], [460, 3, 1, "", "construct_progressive_hidden_layers"], [460, 3, 1, "", "cpu"], [460, 3, 1, "", "cuda"], [460, 3, 1, "", "double"], [460, 3, 1, "", "eval"], [460, 3, 1, "", "extra_repr"], [460, 3, 1, "", "float"], [460, 3, 1, "", "forward"], [460, 3, 1, "", "get_buffer"], [460, 3, 1, "", "get_extra_state"], [460, 3, 1, "", "get_parameter"], [460, 3, 1, "", "get_submodule"], [460, 3, 1, "", "half"], [460, 3, 1, "", "infer_input_shape"], [460, 3, 1, "", "infer_output_shape"], [460, 5, 1, "", "input_shape"], [460, 3, 1, "", "ipu"], [460, 3, 1, "", "load_state_dict"], [460, 3, 1, "", "modules"], [460, 3, 1, "", "named_buffers"], [460, 3, 1, "", "named_children"], [460, 3, 1, "", "named_modules"], [460, 3, 1, "", "named_parameters"], [460, 5, 1, "", "output_shape"], [460, 3, 1, "", "parameters"], [460, 3, 1, "", "register_backward_hook"], [460, 3, 1, "", "register_buffer"], [460, 3, 1, "", "register_forward_hook"], [460, 3, 1, "", "register_forward_pre_hook"], [460, 3, 1, "", "register_full_backward_hook"], [460, 3, 1, "", "register_load_state_dict_post_hook"], [460, 3, 1, "", "register_module"], [460, 3, 1, "", "register_parameter"], [460, 3, 1, "", "requires_grad_"], [460, 3, 1, "", "sample_input"], [460, 3, 1, "", "set_extra_state"], [460, 3, 1, "", "share_memory"], [460, 3, 1, "", "state_dict"], [460, 3, 1, "", "to"], [460, 3, 1, "", "to_empty"], [460, 3, 1, "", "train"], [460, 3, 1, "", "type"], [460, 3, 1, "", "xpu"], [460, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP": [[461, 3, 1, "", "__init__"], [461, 3, 1, "", "add_module"], [461, 3, 1, "", "apply"], [461, 3, 1, "", "bfloat16"], [461, 3, 1, "", "buffers"], [461, 3, 1, "", "children"], [461, 3, 1, "", "construct_progressive_hidden_layers"], [461, 3, 1, "", "cpu"], [461, 3, 1, "", "cuda"], [461, 3, 1, "", "double"], [461, 3, 1, "", "eval"], [461, 3, 1, "", "extra_repr"], [461, 3, 1, "", "float"], [461, 3, 1, "", "forward"], [461, 3, 1, "", "get_buffer"], [461, 3, 1, "", "get_extra_state"], [461, 3, 1, "", "get_parameter"], [461, 3, 1, "", "get_submodule"], [461, 3, 1, "", "half"], [461, 3, 1, "", "infer_input_shape"], [461, 3, 1, "", "infer_output_shape"], [461, 5, 1, "", "input_shape"], [461, 3, 1, "", "ipu"], [461, 3, 1, "", "load_state_dict"], [461, 3, 1, "", "modules"], [461, 3, 1, "", "named_buffers"], [461, 3, 1, "", "named_children"], [461, 3, 1, "", "named_modules"], [461, 3, 1, "", "named_parameters"], [461, 5, 1, "", "output_shape"], [461, 3, 1, "", "parameters"], [461, 3, 1, "", "register_backward_hook"], [461, 3, 1, "", "register_buffer"], [461, 3, 1, "", "register_forward_hook"], [461, 3, 1, "", "register_forward_pre_hook"], [461, 3, 1, "", "register_full_backward_hook"], [461, 3, 1, "", "register_load_state_dict_post_hook"], [461, 3, 1, "", "register_module"], [461, 3, 1, "", "register_parameter"], [461, 3, 1, "", "requires_grad_"], [461, 3, 1, "", "sample_input"], [461, 3, 1, "", "set_extra_state"], [461, 3, 1, "", "share_memory"], [461, 3, 1, "", "state_dict"], [461, 3, 1, "", "to"], [461, 3, 1, "", "to_empty"], [461, 3, 1, "", "train"], [461, 3, 1, "", "type"], [461, 3, 1, "", "xpu"], [461, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental": [[463, 0, 0, "-", "heads"], [465, 0, 0, "-", "recurrent"]], "draugr.torch_utilities.architectures.experimental.heads": [[464, 2, 1, "", "MultiHeadedMLP"]], "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP": [[464, 3, 1, "", "__init__"], [464, 3, 1, "", "add_module"], [464, 3, 1, "", "apply"], [464, 3, 1, "", "bfloat16"], [464, 3, 1, "", "buffers"], [464, 3, 1, "", "children"], [464, 3, 1, "", "construct_progressive_hidden_layers"], [464, 3, 1, "", "cpu"], [464, 3, 1, "", "cuda"], [464, 3, 1, "", "double"], [464, 3, 1, "", "eval"], [464, 3, 1, "", "extra_repr"], [464, 3, 1, "", "float"], [464, 3, 1, "", "forward"], [464, 3, 1, "", "get_buffer"], [464, 3, 1, "", "get_extra_state"], [464, 3, 1, "", "get_parameter"], [464, 3, 1, "", "get_submodule"], [464, 3, 1, "", "half"], [464, 3, 1, "", "infer_input_shape"], [464, 3, 1, "", "infer_output_shape"], [464, 5, 1, "", "input_shape"], [464, 3, 1, "", "ipu"], [464, 3, 1, "", "load_state_dict"], [464, 3, 1, "", "modules"], [464, 3, 1, "", "named_buffers"], [464, 3, 1, "", "named_children"], [464, 3, 1, "", "named_modules"], [464, 3, 1, "", "named_parameters"], [464, 5, 1, "", "output_shape"], [464, 3, 1, "", "parameters"], [464, 3, 1, "", "register_backward_hook"], [464, 3, 1, "", "register_buffer"], [464, 3, 1, "", "register_forward_hook"], [464, 3, 1, "", "register_forward_pre_hook"], [464, 3, 1, "", "register_full_backward_hook"], [464, 3, 1, "", "register_load_state_dict_post_hook"], [464, 3, 1, "", "register_module"], [464, 3, 1, "", "register_parameter"], [464, 3, 1, "", "requires_grad_"], [464, 3, 1, "", "sample_input"], [464, 3, 1, "", "set_extra_state"], [464, 3, 1, "", "share_memory"], [464, 3, 1, "", "state_dict"], [464, 3, 1, "", "to"], [464, 3, 1, "", "to_empty"], [464, 3, 1, "", "train"], [464, 3, 1, "", "type"], [464, 3, 1, "", "xpu"], [464, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent": [[466, 2, 1, "", "ExposedRecurrentCategoricalMLP"], [467, 2, 1, "", "RecurrentBase"], [468, 2, 1, "", "RecurrentCategoricalMLP"]], "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP": [[466, 3, 1, "", "__init__"], [466, 3, 1, "", "add_module"], [466, 3, 1, "", "apply"], [466, 3, 1, "", "bfloat16"], [466, 3, 1, "", "buffers"], [466, 3, 1, "", "children"], [466, 3, 1, "", "construct_progressive_hidden_layers"], [466, 3, 1, "", "cpu"], [466, 3, 1, "", "cuda"], [466, 3, 1, "", "double"], [466, 3, 1, "", "eval"], [466, 3, 1, "", "extra_repr"], [466, 3, 1, "", "float"], [466, 3, 1, "", "forward"], [466, 3, 1, "", "get_buffer"], [466, 3, 1, "", "get_extra_state"], [466, 3, 1, "", "get_parameter"], [466, 3, 1, "", "get_submodule"], [466, 3, 1, "", "half"], [466, 3, 1, "", "infer_input_shape"], [466, 3, 1, "", "infer_output_shape"], [466, 5, 1, "", "input_shape"], [466, 3, 1, "", "ipu"], [466, 3, 1, "", "load_state_dict"], [466, 3, 1, "", "modules"], [466, 3, 1, "", "named_buffers"], [466, 3, 1, "", "named_children"], [466, 3, 1, "", "named_modules"], [466, 3, 1, "", "named_parameters"], [466, 5, 1, "", "output_shape"], [466, 3, 1, "", "parameters"], [466, 3, 1, "", "register_backward_hook"], [466, 3, 1, "", "register_buffer"], [466, 3, 1, "", "register_forward_hook"], [466, 3, 1, "", "register_forward_pre_hook"], [466, 3, 1, "", "register_full_backward_hook"], [466, 3, 1, "", "register_load_state_dict_post_hook"], [466, 3, 1, "", "register_module"], [466, 3, 1, "", "register_parameter"], [466, 3, 1, "", "requires_grad_"], [466, 3, 1, "", "sample_input"], [466, 3, 1, "", "set_extra_state"], [466, 3, 1, "", "share_memory"], [466, 3, 1, "", "state_dict"], [466, 3, 1, "", "to"], [466, 3, 1, "", "to_empty"], [466, 3, 1, "", "train"], [466, 3, 1, "", "type"], [466, 3, 1, "", "xpu"], [466, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase": [[467, 3, 1, "", "__init__"], [467, 3, 1, "", "add_module"], [467, 3, 1, "", "apply"], [467, 3, 1, "", "bfloat16"], [467, 3, 1, "", "buffers"], [467, 3, 1, "", "children"], [467, 3, 1, "", "cpu"], [467, 3, 1, "", "cuda"], [467, 3, 1, "", "double"], [467, 3, 1, "", "eval"], [467, 3, 1, "", "extra_repr"], [467, 3, 1, "", "float"], [467, 3, 1, "", "forward"], [467, 3, 1, "", "get_buffer"], [467, 3, 1, "", "get_extra_state"], [467, 3, 1, "", "get_parameter"], [467, 3, 1, "", "get_submodule"], [467, 3, 1, "", "half"], [467, 3, 1, "", "ipu"], [467, 3, 1, "", "load_state_dict"], [467, 3, 1, "", "modules"], [467, 3, 1, "", "named_buffers"], [467, 3, 1, "", "named_children"], [467, 3, 1, "", "named_modules"], [467, 3, 1, "", "named_parameters"], [467, 3, 1, "", "parameters"], [467, 3, 1, "", "register_backward_hook"], [467, 3, 1, "", "register_buffer"], [467, 3, 1, "", "register_forward_hook"], [467, 3, 1, "", "register_forward_pre_hook"], [467, 3, 1, "", "register_full_backward_hook"], [467, 3, 1, "", "register_load_state_dict_post_hook"], [467, 3, 1, "", "register_module"], [467, 3, 1, "", "register_parameter"], [467, 3, 1, "", "requires_grad_"], [467, 3, 1, "", "set_extra_state"], [467, 3, 1, "", "share_memory"], [467, 3, 1, "", "state_dict"], [467, 3, 1, "", "to"], [467, 3, 1, "", "to_empty"], [467, 3, 1, "", "train"], [467, 3, 1, "", "type"], [467, 3, 1, "", "xpu"], [467, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP": [[468, 3, 1, "", "__init__"], [468, 3, 1, "", "add_module"], [468, 3, 1, "", "apply"], [468, 3, 1, "", "bfloat16"], [468, 3, 1, "", "buffers"], [468, 3, 1, "", "children"], [468, 3, 1, "", "construct_progressive_hidden_layers"], [468, 3, 1, "", "cpu"], [468, 3, 1, "", "cuda"], [468, 3, 1, "", "double"], [468, 3, 1, "", "eval"], [468, 3, 1, "", "extra_repr"], [468, 3, 1, "", "float"], [468, 3, 1, "", "forward"], [468, 3, 1, "", "get_buffer"], [468, 3, 1, "", "get_extra_state"], [468, 3, 1, "", "get_parameter"], [468, 3, 1, "", "get_submodule"], [468, 3, 1, "", "half"], [468, 3, 1, "", "infer_input_shape"], [468, 3, 1, "", "infer_output_shape"], [468, 5, 1, "", "input_shape"], [468, 3, 1, "", "ipu"], [468, 3, 1, "", "load_state_dict"], [468, 3, 1, "", "modules"], [468, 3, 1, "", "named_buffers"], [468, 3, 1, "", "named_children"], [468, 3, 1, "", "named_modules"], [468, 3, 1, "", "named_parameters"], [468, 5, 1, "", "output_shape"], [468, 3, 1, "", "parameters"], [468, 3, 1, "", "register_backward_hook"], [468, 3, 1, "", "register_buffer"], [468, 3, 1, "", "register_forward_hook"], [468, 3, 1, "", "register_forward_pre_hook"], [468, 3, 1, "", "register_full_backward_hook"], [468, 3, 1, "", "register_load_state_dict_post_hook"], [468, 3, 1, "", "register_module"], [468, 3, 1, "", "register_parameter"], [468, 3, 1, "", "requires_grad_"], [468, 3, 1, "", "sample_input"], [468, 3, 1, "", "set_extra_state"], [468, 3, 1, "", "share_memory"], [468, 3, 1, "", "state_dict"], [468, 3, 1, "", "to"], [468, 3, 1, "", "to_empty"], [468, 3, 1, "", "train"], [468, 3, 1, "", "type"], [468, 3, 1, "", "xpu"], [468, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp": [[470, 2, 1, "", "MLP"]], "draugr.torch_utilities.architectures.mlp.MLP": [[470, 3, 1, "", "__init__"], [470, 3, 1, "", "add_module"], [470, 3, 1, "", "apply"], [470, 3, 1, "", "bfloat16"], [470, 3, 1, "", "buffers"], [470, 3, 1, "", "children"], [470, 3, 1, "", "construct_progressive_hidden_layers"], [470, 3, 1, "", "cpu"], [470, 3, 1, "", "cuda"], [470, 3, 1, "", "double"], [470, 3, 1, "", "eval"], [470, 3, 1, "", "extra_repr"], [470, 3, 1, "", "float"], [470, 3, 1, "", "forward"], [470, 3, 1, "", "get_buffer"], [470, 3, 1, "", "get_extra_state"], [470, 3, 1, "", "get_parameter"], [470, 3, 1, "", "get_submodule"], [470, 3, 1, "", "half"], [470, 3, 1, "", "infer_input_shape"], [470, 3, 1, "", "infer_output_shape"], [470, 5, 1, "", "input_shape"], [470, 3, 1, "", "ipu"], [470, 3, 1, "", "load_state_dict"], [470, 3, 1, "", "modules"], [470, 3, 1, "", "named_buffers"], [470, 3, 1, "", "named_children"], [470, 3, 1, "", "named_modules"], [470, 3, 1, "", "named_parameters"], [470, 5, 1, "", "output_shape"], [470, 3, 1, "", "parameters"], [470, 3, 1, "", "register_backward_hook"], [470, 3, 1, "", "register_buffer"], [470, 3, 1, "", "register_forward_hook"], [470, 3, 1, "", "register_forward_pre_hook"], [470, 3, 1, "", "register_full_backward_hook"], [470, 3, 1, "", "register_load_state_dict_post_hook"], [470, 3, 1, "", "register_module"], [470, 3, 1, "", "register_parameter"], [470, 3, 1, "", "requires_grad_"], [470, 3, 1, "", "sample_input"], [470, 3, 1, "", "set_extra_state"], [470, 3, 1, "", "share_memory"], [470, 3, 1, "", "state_dict"], [470, 3, 1, "", "to"], [470, 3, 1, "", "to_empty"], [470, 3, 1, "", "train"], [470, 3, 1, "", "type"], [470, 3, 1, "", "xpu"], [470, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants": [[472, 0, 0, "-", "concatination"], [475, 0, 0, "-", "disjunction"], [477, 0, 0, "-", "fourier"]], "draugr.torch_utilities.architectures.mlp_variants.concatination": [[473, 2, 1, "", "LateConcatInputMLP"], [474, 2, 1, "", "PreConcatInputMLP"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP": [[473, 3, 1, "", "__init__"], [473, 3, 1, "", "add_module"], [473, 3, 1, "", "apply"], [473, 3, 1, "", "bfloat16"], [473, 3, 1, "", "buffers"], [473, 3, 1, "", "children"], [473, 3, 1, "", "construct_progressive_hidden_layers"], [473, 3, 1, "", "cpu"], [473, 3, 1, "", "cuda"], [473, 3, 1, "", "double"], [473, 3, 1, "", "eval"], [473, 3, 1, "", "extra_repr"], [473, 3, 1, "", "float"], [473, 3, 1, "", "forward"], [473, 3, 1, "", "get_buffer"], [473, 3, 1, "", "get_extra_state"], [473, 3, 1, "", "get_parameter"], [473, 3, 1, "", "get_submodule"], [473, 3, 1, "", "half"], [473, 3, 1, "", "infer_input_shape"], [473, 3, 1, "", "infer_output_shape"], [473, 5, 1, "", "input_shape"], [473, 3, 1, "", "ipu"], [473, 3, 1, "", "load_state_dict"], [473, 3, 1, "", "modules"], [473, 3, 1, "", "named_buffers"], [473, 3, 1, "", "named_children"], [473, 3, 1, "", "named_modules"], [473, 3, 1, "", "named_parameters"], [473, 5, 1, "", "output_shape"], [473, 3, 1, "", "parameters"], [473, 3, 1, "", "register_backward_hook"], [473, 3, 1, "", "register_buffer"], [473, 3, 1, "", "register_forward_hook"], [473, 3, 1, "", "register_forward_pre_hook"], [473, 3, 1, "", "register_full_backward_hook"], [473, 3, 1, "", "register_load_state_dict_post_hook"], [473, 3, 1, "", "register_module"], [473, 3, 1, "", "register_parameter"], [473, 3, 1, "", "requires_grad_"], [473, 3, 1, "", "sample_input"], [473, 3, 1, "", "set_extra_state"], [473, 3, 1, "", "share_memory"], [473, 3, 1, "", "state_dict"], [473, 3, 1, "", "to"], [473, 3, 1, "", "to_empty"], [473, 3, 1, "", "train"], [473, 3, 1, "", "type"], [473, 3, 1, "", "xpu"], [473, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP": [[474, 3, 1, "", "__init__"], [474, 3, 1, "", "add_module"], [474, 3, 1, "", "apply"], [474, 3, 1, "", "bfloat16"], [474, 3, 1, "", "buffers"], [474, 3, 1, "", "children"], [474, 3, 1, "", "construct_progressive_hidden_layers"], [474, 3, 1, "", "cpu"], [474, 3, 1, "", "cuda"], [474, 3, 1, "", "double"], [474, 3, 1, "", "eval"], [474, 3, 1, "", "extra_repr"], [474, 3, 1, "", "float"], [474, 3, 1, "", "forward"], [474, 3, 1, "", "get_buffer"], [474, 3, 1, "", "get_extra_state"], [474, 3, 1, "", "get_parameter"], [474, 3, 1, "", "get_submodule"], [474, 3, 1, "", "half"], [474, 3, 1, "", "infer_input_shape"], [474, 3, 1, "", "infer_output_shape"], [474, 5, 1, "", "input_shape"], [474, 3, 1, "", "ipu"], [474, 3, 1, "", "load_state_dict"], [474, 3, 1, "", "modules"], [474, 3, 1, "", "named_buffers"], [474, 3, 1, "", "named_children"], [474, 3, 1, "", "named_modules"], [474, 3, 1, "", "named_parameters"], [474, 5, 1, "", "output_shape"], [474, 3, 1, "", "parameters"], [474, 3, 1, "", "register_backward_hook"], [474, 3, 1, "", "register_buffer"], [474, 3, 1, "", "register_forward_hook"], [474, 3, 1, "", "register_forward_pre_hook"], [474, 3, 1, "", "register_full_backward_hook"], [474, 3, 1, "", "register_load_state_dict_post_hook"], [474, 3, 1, "", "register_module"], [474, 3, 1, "", "register_parameter"], [474, 3, 1, "", "requires_grad_"], [474, 3, 1, "", "sample_input"], [474, 3, 1, "", "set_extra_state"], [474, 3, 1, "", "share_memory"], [474, 3, 1, "", "state_dict"], [474, 3, 1, "", "to"], [474, 3, 1, "", "to_empty"], [474, 3, 1, "", "train"], [474, 3, 1, "", "type"], [474, 3, 1, "", "xpu"], [474, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction": [[476, 2, 1, "", "DisjunctMLP"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP": [[476, 3, 1, "", "__init__"], [476, 3, 1, "", "add_module"], [476, 3, 1, "", "apply"], [476, 3, 1, "", "bfloat16"], [476, 3, 1, "", "buffers"], [476, 3, 1, "", "children"], [476, 3, 1, "", "construct_progressive_hidden_layers"], [476, 3, 1, "", "cpu"], [476, 3, 1, "", "cuda"], [476, 3, 1, "", "double"], [476, 3, 1, "", "eval"], [476, 3, 1, "", "extra_repr"], [476, 3, 1, "", "float"], [476, 3, 1, "", "forward"], [476, 3, 1, "", "get_buffer"], [476, 3, 1, "", "get_extra_state"], [476, 3, 1, "", "get_parameter"], [476, 3, 1, "", "get_submodule"], [476, 3, 1, "", "half"], [476, 3, 1, "", "infer_input_shape"], [476, 3, 1, "", "infer_output_shape"], [476, 5, 1, "", "input_shape"], [476, 3, 1, "", "ipu"], [476, 3, 1, "", "load_state_dict"], [476, 3, 1, "", "modules"], [476, 3, 1, "", "named_buffers"], [476, 3, 1, "", "named_children"], [476, 3, 1, "", "named_modules"], [476, 3, 1, "", "named_parameters"], [476, 5, 1, "", "output_shape"], [476, 3, 1, "", "parameters"], [476, 3, 1, "", "register_backward_hook"], [476, 3, 1, "", "register_buffer"], [476, 3, 1, "", "register_forward_hook"], [476, 3, 1, "", "register_forward_pre_hook"], [476, 3, 1, "", "register_full_backward_hook"], [476, 3, 1, "", "register_load_state_dict_post_hook"], [476, 3, 1, "", "register_module"], [476, 3, 1, "", "register_parameter"], [476, 3, 1, "", "requires_grad_"], [476, 3, 1, "", "sample_input"], [476, 3, 1, "", "set_extra_state"], [476, 3, 1, "", "share_memory"], [476, 3, 1, "", "state_dict"], [476, 3, 1, "", "to"], [476, 3, 1, "", "to_empty"], [476, 3, 1, "", "train"], [476, 3, 1, "", "type"], [476, 3, 1, "", "xpu"], [476, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.fourier": [[478, 2, 1, "", "BaseFourierFeatureMLP"]], "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP": [[478, 3, 1, "", "__init__"], [478, 3, 1, "", "add_module"], [478, 3, 1, "", "apply"], [478, 3, 1, "", "bfloat16"], [478, 3, 1, "", "buffers"], [478, 3, 1, "", "children"], [478, 3, 1, "", "cpu"], [478, 3, 1, "", "cuda"], [478, 3, 1, "", "double"], [478, 3, 1, "", "eval"], [478, 3, 1, "", "extra_repr"], [478, 3, 1, "", "float"], [478, 3, 1, "", "forward"], [478, 3, 1, "", "get_buffer"], [478, 3, 1, "", "get_extra_state"], [478, 3, 1, "", "get_parameter"], [478, 3, 1, "", "get_submodule"], [478, 3, 1, "", "half"], [478, 3, 1, "", "ipu"], [478, 3, 1, "", "load_state_dict"], [478, 3, 1, "", "modules"], [478, 3, 1, "", "named_buffers"], [478, 3, 1, "", "named_children"], [478, 3, 1, "", "named_modules"], [478, 3, 1, "", "named_parameters"], [478, 3, 1, "", "parameters"], [478, 3, 1, "", "register_backward_hook"], [478, 3, 1, "", "register_buffer"], [478, 3, 1, "", "register_forward_hook"], [478, 3, 1, "", "register_forward_pre_hook"], [478, 3, 1, "", "register_full_backward_hook"], [478, 3, 1, "", "register_load_state_dict_post_hook"], [478, 3, 1, "", "register_module"], [478, 3, 1, "", "register_parameter"], [478, 3, 1, "", "requires_grad_"], [478, 3, 1, "", "save"], [478, 3, 1, "", "set_extra_state"], [478, 3, 1, "", "share_memory"], [478, 3, 1, "", "state_dict"], [478, 3, 1, "", "to"], [478, 3, 1, "", "to_empty"], [478, 3, 1, "", "train"], [478, 3, 1, "", "type"], [478, 3, 1, "", "xpu"], [478, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.datasets": [[480, 0, 0, "-", "non_sequential_dataset"], [482, 0, 0, "-", "random_dataset"], [484, 0, 0, "-", "supervised"]], "draugr.torch_utilities.datasets.non_sequential_dataset": [[481, 2, 1, "", "NonSequentialDataset"]], "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset": [[481, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.random_dataset": [[483, 2, 1, "", "RandomDataset"]], "draugr.torch_utilities.datasets.random_dataset.RandomDataset": [[483, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.supervised": [[485, 0, 0, "-", "categorical_dataset"], [487, 0, 0, "-", "supervised_dataset"], [489, 0, 0, "-", "vision_datasets"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset": [[486, 2, 1, "", "CategoricalDataset"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset": [[486, 3, 1, "", "__init__"], [486, 5, 1, "", "categories"], [486, 3, 1, "", "idx_to_str"], [486, 5, 1, "", "predictor_shape"], [486, 5, 1, "", "response_shape"], [486, 5, 1, "", "split_names"], [486, 3, 1, "", "str_to_idx"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset": [[488, 2, 1, "", "SupervisedDataset"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset": [[488, 3, 1, "", "__init__"], [488, 5, 1, "", "predictor_shape"], [488, 5, 1, "", "response_shape"], [488, 5, 1, "", "split_names"]], "draugr.torch_utilities.datasets.supervised.vision_datasets": [[490, 0, 0, "-", "dict_dataset"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset": [[491, 2, 1, "", "DictDatasetFolder"], [492, 2, 1, "", "SplitDictDatasetFolder"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder": [[491, 3, 1, "", "__init__"], [491, 3, 1, "", "sample"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder": [[492, 3, 1, "", "__init__"], [492, 3, 1, "", "sample"]], "draugr.torch_utilities.distributions": [[494, 0, 0, "-", "entropy"]], "draugr.torch_utilities.distributions.entropy": [[495, 1, 1, "", "differential_entropy_gaussian"], [496, 1, 1, "", "log_shannon_entropy"], [497, 1, 1, "", "normal_entropy"], [498, 1, 1, "", "normal_log_density"], [499, 1, 1, "", "shannon_entropy"]], "draugr.torch_utilities.evaluation": [[501, 0, 0, "-", "classification"], [503, 0, 0, "-", "cross_validation"]], "draugr.torch_utilities.evaluation.classification": [[502, 1, 1, "", "find_n_misclassified"]], "draugr.torch_utilities.evaluation.cross_validation": [[504, 1, 1, "", "cross_validation_generator"]], "draugr.torch_utilities.exporting": [[506, 0, 0, "-", "latex_tables"], [510, 0, 0, "-", "summary"]], "draugr.torch_utilities.exporting.latex_tables": [[507, 1, 1, "", "adasdassijd"], [508, 1, 1, "", "asijd"], [509, 1, 1, "", "iasjduh"]], "draugr.torch_utilities.exporting.summary": [[511, 1, 1, "", "to_latex_table"]], "draugr.torch_utilities.generators": [[513, 0, 0, "-", "batching"], [515, 0, 0, "-", "to_tensor_generator"]], "draugr.torch_utilities.generators.batching": [[514, 2, 1, "", "LimitedBatchResampler"]], "draugr.torch_utilities.generators.batching.LimitedBatchResampler": [[514, 3, 1, "", "__init__"]], "draugr.torch_utilities.images": [[517, 0, 0, "-", "channel_transform"], [522, 0, 0, "-", "conversion"]], "draugr.torch_utilities.images.channel_transform": [[518, 1, 1, "", "float_chw_to_hwc_uint_tensor"], [519, 1, 1, "", "float_nchw_to_nhwc_uint_batch"], [520, 1, 1, "", "uint_hwc_to_chw_float_tensor"], [521, 1, 1, "", "uint_nhwc_to_nchw_float_batch"]], "draugr.torch_utilities.images.conversion": [[523, 1, 1, "", "quick_to_pil_image"]], "draugr.torch_utilities.opencv": [[525, 0, 0, "-", "torch_conversion"]], "draugr.torch_utilities.opencv.torch_conversion": [[526, 2, 1, "", "CV2ToImage"], [527, 2, 1, "", "CV2ToTensor"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage": [[526, 3, 1, "", "__init__"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor": [[527, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations": [[529, 0, 0, "-", "boxes_2d"], [531, 0, 0, "-", "enums"], [533, 0, 0, "-", "sizes"], [544, 0, 0, "-", "torch_transforms"]], "draugr.torch_utilities.operations.boxes_2d": [[530, 1, 1, "", "minmax_to_xywh_torch"]], "draugr.torch_utilities.operations.enums": [[532, 2, 1, "", "ReductionMethodEnum"]], "draugr.torch_utilities.operations.enums.ReductionMethodEnum": [[532, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.sizes": [[534, 0, 0, "-", "conv2d"], [537, 0, 0, "-", "max_pool2d"], [539, 0, 0, "-", "pad2d"], [541, 0, 0, "-", "transp_conv2d"]], "draugr.torch_utilities.operations.sizes.conv2d": [[535, 1, 1, "", "conv2d_hw_shape"], [536, 1, 1, "", "conv2d_padding_size"]], "draugr.torch_utilities.operations.sizes.max_pool2d": [[538, 1, 1, "", "max_pool2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.pad2d": [[540, 1, 1, "", "pad2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.transp_conv2d": [[542, 1, 1, "", "transp_conv2d_output_shape"], [543, 1, 1, "", "transp_conv2d_padding_sizes"]], "draugr.torch_utilities.operations.torch_transforms": [[545, 0, 0, "-", "batch_transforms"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms": [[546, 2, 1, "", "BatchNormalize"], [547, 2, 1, "", "BatchRandomCrop"], [548, 2, 1, "", "BatchRandomHorizontalFlip"], [549, 2, 1, "", "BatchToTensor"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize": [[546, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop": [[547, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip": [[548, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor": [[549, 3, 1, "", "__init__"]], "draugr.torch_utilities.optimisation": [[551, 0, 0, "-", "debugging"], [568, 0, 0, "-", "parameters"], [571, 0, 0, "-", "scheduling"], [578, 0, 0, "-", "stopping"], [582, 0, 0, "-", "updates"]], "draugr.torch_utilities.optimisation.debugging": [[552, 0, 0, "-", "gradients"], [564, 0, 0, "-", "layer_fetching"]], "draugr.torch_utilities.optimisation.debugging.gradients": [[553, 0, 0, "-", "checking"], [556, 0, 0, "-", "flow"], [558, 0, 0, "-", "grad_trace"], [561, 0, 0, "-", "guided"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking": [[554, 0, 0, "-", "numerical_gradient"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient": [[555, 1, 1, "", "loss_grad_check"]], "draugr.torch_utilities.optimisation.debugging.gradients.flow": [[557, 1, 1, "", "plot_grad_flow"]], "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace": [[559, 1, 1, "", "print_grad_trace"], [560, 1, 1, "", "register_bad_grad_hooks"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided": [[562, 2, 1, "", "GuidedBackPropReLU"], [563, 2, 1, "", "GuidedBackPropReLUModel"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU": [[562, 3, 1, "", "__init__"], [562, 3, 1, "", "backward"], [562, 3, 1, "", "forward"], [562, 3, 1, "", "jvp"], [562, 3, 1, "", "mark_dirty"], [562, 3, 1, "", "mark_non_differentiable"], [562, 3, 1, "", "save_for_backward"], [562, 3, 1, "", "save_for_forward"], [562, 3, 1, "", "set_materialize_grads"], [562, 3, 1, "", "vjp"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel": [[563, 3, 1, "", "__init__"], [563, 3, 1, "", "forward"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching": [[565, 2, 1, "", "IntermediateLayerGetter"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter": [[565, 3, 1, "", "__init__"], [565, 3, 1, "", "reduce_getattr"]], "draugr.torch_utilities.optimisation.debugging.opt_verification": [[567, 1, 1, "", "overfit_single_batch"]], "draugr.torch_utilities.optimisation.parameters": [[569, 1, 1, "", "freeze_parameters"], [570, 1, 1, "", "frozen_parameters"]], "draugr.torch_utilities.optimisation.scheduling": [[572, 0, 0, "-", "learning_rate_utilities"], [574, 0, 0, "-", "lr_scheduler"], [576, 0, 0, "-", "schedulers"]], "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities": [[573, 1, 1, "", "set_lr"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler": [[575, 2, 1, "", "WarmupMultiStepLR"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR": [[575, 3, 1, "", "__init__"], [575, 3, 1, "", "get_last_lr"], [575, 3, 1, "", "get_lr"], [575, 3, 1, "", "load_state_dict"], [575, 3, 1, "", "print_lr"], [575, 3, 1, "", "state_dict"]], "draugr.torch_utilities.optimisation.scheduling.schedulers": [[577, 1, 1, "", "warmup_lr_scheduler"]], "draugr.torch_utilities.optimisation.stopping": [[579, 0, 0, "-", "overfitting"]], "draugr.torch_utilities.optimisation.stopping.overfitting": [[580, 2, 1, "", "ImprovementDetector"], [581, 2, 1, "", "OverfitDetector"]], "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector": [[580, 3, 1, "", "__init__"], [580, 3, 1, "", "reset"]], "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector": [[581, 3, 1, "", "__init__"], [581, 3, 1, "", "reset"]], "draugr.torch_utilities.optimisation.updates": [[583, 0, 0, "-", "copying"], [586, 0, 0, "-", "soft_update"]], "draugr.torch_utilities.optimisation.updates.copying": [[584, 1, 1, "", "copy_parameters"], [585, 1, 1, "", "copy_state"]], "draugr.torch_utilities.persistence": [[588, 0, 0, "-", "checkpoint"], [591, 0, 0, "-", "config"], [594, 0, 0, "-", "model"], [600, 0, 0, "-", "naming"], [602, 0, 0, "-", "parameters"]], "draugr.torch_utilities.persistence.checkpoint": [[589, 1, 1, "", "load_checkpoint"], [590, 1, 1, "", "save_checkpoint"]], "draugr.torch_utilities.persistence.config": [[592, 1, 1, "", "ensure_directory_exist"], [593, 1, 1, "", "save_config"]], "draugr.torch_utilities.persistence.model": [[595, 1, 1, "", "convert_saved_model_to_cpu"], [596, 1, 1, "", "load_latest_model"], [597, 1, 1, "", "load_model"], [598, 1, 1, "", "save_model"], [599, 1, 1, "", "save_model_and_configuration"]], "draugr.torch_utilities.persistence.naming": [[601, 1, 1, "", "get_model_hash"]], "draugr.torch_utilities.persistence.parameters": [[603, 1, 1, "", "load_latest_model_parameters"], [604, 1, 1, "", "load_model_parameters"], [605, 1, 1, "", "save_model_parameters"], [606, 1, 1, "", "save_parameters_and_configuration"]], "draugr.torch_utilities.sessions": [[608, 0, 0, "-", "cache_sessions"], [610, 0, 0, "-", "determinism_sessions"], [612, 0, 0, "-", "device_sessions"], [616, 0, 0, "-", "jit_sessions"], [619, 0, 0, "-", "model_sessions"], [624, 0, 0, "-", "type_sessions"]], "draugr.torch_utilities.sessions.cache_sessions": [[609, 2, 1, "", "TorchCacheSession"]], "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession": [[609, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.determinism_sessions": [[611, 2, 1, "", "TorchDeterministicSession"]], "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession": [[611, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions": [[613, 2, 1, "", "TorchCpuSession"], [614, 2, 1, "", "TorchCudaSession"], [615, 2, 1, "", "TorchDeviceSession"]], "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession": [[613, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession": [[614, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession": [[615, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions": [[617, 2, 1, "", "TorchIgnoreJitSession"], [618, 2, 1, "", "TorchJitSession"]], "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession": [[617, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession": [[618, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions": [[620, 2, 1, "", "TorchEvalSession"], [621, 2, 1, "", "TorchFrozenModelSession"], [622, 2, 1, "", "TorchTrainSession"], [623, 4, 1, "", "TorchTrainingSession"]], "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession": [[620, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession": [[621, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession": [[622, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.type_sessions": [[625, 2, 1, "", "DefaultTypeSession"]], "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession": [[625, 3, 1, "", "__init__"]], "draugr.torch_utilities.system": [[627, 0, 0, "-", "constants"], [629, 0, 0, "-", "data_type"], [632, 0, 0, "-", "device"], [640, 0, 0, "-", "info"], [643, 0, 0, "-", "loading"], [646, 0, 0, "-", "seeding"]], "draugr.torch_utilities.system.constants": [[628, 1, 1, "", "torch_pi"]], "draugr.torch_utilities.system.data_type": [[630, 1, 1, "", "global_torch_dtype"], [631, 1, 1, "", "set_global_torch_dtype"]], "draugr.torch_utilities.system.device": [[633, 2, 1, "", "TorchDeviceEnum"], [634, 1, 1, "", "auto_select_available_cuda_device"], [635, 1, 1, "", "get_gpu_usage_mb"], [636, 1, 1, "", "global_torch_device"], [637, 1, 1, "", "select_cuda_device"], [638, 1, 1, "", "set_global_torch_device"], [639, 1, 1, "", "torch_clean_up"]], "draugr.torch_utilities.system.device.TorchDeviceEnum": [[633, 3, 1, "", "__init__"]], "draugr.torch_utilities.system.info": [[641, 1, 1, "", "cuda_info"], [642, 1, 1, "", "system_info"]], "draugr.torch_utilities.system.loading": [[644, 1, 1, "", "default_worker_init_fn"], [645, 1, 1, "", "global_pin_memory"]], "draugr.torch_utilities.system.seeding": [[647, 1, 1, "", "torch_seed"]], "draugr.torch_utilities.tensors": [[649, 0, 0, "-", "dimension_order"], [656, 0, 0, "-", "info"], [658, 0, 0, "-", "mixins"], [660, 0, 0, "-", "normalise"], [662, 0, 0, "-", "reshaping"], [666, 0, 0, "-", "tensor_container"], [668, 0, 0, "-", "to_scalar"], [669, 0, 0, "-", "to_tensor"], [670, 0, 0, "-", "types"]], "draugr.torch_utilities.tensors.dimension_order": [[650, 1, 1, "", "chw_to_hwc_tensor"], [651, 1, 1, "", "hwc_to_chw_tensor"], [652, 1, 1, "", "nchw_to_nhwc_tensor"], [653, 1, 1, "", "nhwc_to_nchw_tensor"], [654, 1, 1, "", "ntchw_to_nthwc_tensor"], [655, 1, 1, "", "nthwc_to_ntchw_tensor"]], "draugr.torch_utilities.tensors.info": [[657, 1, 1, "", "size_of_tensor"]], "draugr.torch_utilities.tensors.mixins": [[659, 2, 1, "", "TensoriseMixin"]], "draugr.torch_utilities.tensors.mixins.TensoriseMixin": [[659, 3, 1, "", "__init__"]], "draugr.torch_utilities.tensors.normalise": [[661, 1, 1, "", "standardise"]], "draugr.torch_utilities.tensors.reshaping": [[663, 1, 1, "", "flatten_keep_batch"], [664, 1, 1, "", "flatten_tn_dim"], [665, 1, 1, "", "safe_concat"]], "draugr.torch_utilities.tensors.tensor_container": [[667, 2, 1, "", "NamedTensorTuple"]], "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple": [[667, 3, 1, "", "__init__"], [667, 3, 1, "", "numpy"], [667, 3, 1, "", "to"]], "draugr.torch_utilities.tensors.types": [[671, 1, 1, "", "numpy_to_torch_dtype"], [672, 1, 1, "", "torch_to_numpy_dtype"]], "draugr.torch_utilities.writers": [[674, 0, 0, "-", "mixins"], [677, 0, 0, "-", "tensorboard"], [683, 0, 0, "-", "torch_module_writer"], [689, 0, 0, "-", "visdom"]], "draugr.torch_utilities.writers.mixins": [[675, 0, 0, "-", "graph_writer_mixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin": [[676, 2, 1, "", "GraphWriterMixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin": [[676, 3, 1, "", "__init__"], [676, 3, 1, "", "graph"]], "draugr.torch_utilities.writers.tensorboard": [[678, 0, 0, "-", "launcher"], [680, 0, 0, "-", "tensorboard_pytorch_writer"]], "draugr.torch_utilities.writers.tensorboard.launcher": [[679, 1, 1, "", "launch_tensorboard"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer": [[681, 4, 1, "", "PTW"], [682, 2, 1, "", "TensorBoardPytorchWriter"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter": [[682, 2, 1, "", "MultiChannelMethodEnum"], [682, 3, 1, "", "__init__"], [682, 3, 1, "", "bar"], [682, 3, 1, "", "blip"], [682, 3, 1, "", "close"], [682, 3, 1, "", "embed"], [682, 3, 1, "", "figure"], [682, 3, 1, "", "filter"], [682, 3, 1, "", "graph"], [682, 3, 1, "", "histogram"], [682, 3, 1, "", "image"], [682, 3, 1, "", "instance"], [682, 3, 1, "", "line"], [682, 3, 1, "", "mesh"], [682, 3, 1, "", "open"], [682, 3, 1, "", "parameters"], [682, 3, 1, "", "precision_recall_curve"], [682, 3, 1, "", "scalar"], [682, 3, 1, "", "spectrogram"], [682, 3, 1, "", "video"], [682, 5, 1, "", "writer"]], "draugr.torch_utilities.writers.torch_module_writer": [[684, 0, 0, "-", "module_parameter_writer_mixin"], [686, 0, 0, "-", "module_writer_hook"], [687, 0, 0, "-", "module_writer_parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin": [[685, 2, 1, "", "ModuleParameterWriterMixin"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin": [[685, 3, 1, "", "__init__"], [685, 3, 1, "", "parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters": [[688, 1, 1, "", "weight_bias_histograms"]], "draugr.torch_utilities.writers.visdom": [[690, 0, 0, "-", "episode_visual"], [692, 0, 0, "-", "plotting"], [694, 0, 0, "-", "visdom_writer"]], "draugr.torch_utilities.writers.visdom.episode_visual": [[691, 1, 1, "", "update_visualiser"]], "draugr.torch_utilities.writers.visdom.plotting": [[693, 1, 1, "", "plot_episode_stats"]], "draugr.torch_utilities.writers.visdom.visdom_writer": [[695, 2, 1, "", "VisdomWriter"]], "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter": [[695, 3, 1, "", "__init__"], [695, 3, 1, "", "blip"], [695, 3, 1, "", "close"], [695, 3, 1, "", "filter"], [695, 3, 1, "", "open"], [695, 3, 1, "", "scalar"]], "draugr.tqdm_utilities": [[697, 0, 0, "-", "pooled_progress_bar"], [704, 0, 0, "-", "progress_bar"]], "draugr.tqdm_utilities.pooled_progress_bar": [[698, 1, 1, "", "parallel_imap"], [699, 1, 1, "", "parallel_map"], [700, 1, 1, "", "parallel_uimap"], [701, 1, 1, "", "parallel_umap"], [702, 1, 1, "", "sequential_imap"], [703, 1, 1, "", "sequential_map"]], "draugr.visualisation": [[706, 0, 0, "-", "ggplot_utilities"], [707, 0, 0, "-", "matplotlib_utilities"], [719, 0, 0, "-", "pillow_utilities"], [725, 0, 0, "-", "seaborn_utilities"]], "draugr.visualisation.matplotlib_utilities": [[708, 2, 1, "", "MatplotlibHorizontalAlignment"], [709, 2, 1, "", "MatplotlibVerticalAlignment"], [710, 1, 1, "", "annotate_point"], [711, 1, 1, "", "decolorise_plot"], [712, 1, 1, "", "denormalise_minusoneone"], [713, 1, 1, "", "latex_clean_label"], [714, 1, 1, "", "make_errorbar_legend"], [715, 1, 1, "", "matplotlib_bounding_box"], [716, 1, 1, "", "remove_decoration"], [717, 1, 1, "", "save_embed_fig"], [718, 1, 1, "", "use_monochrome_style"]], "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment": [[708, 3, 1, "", "__init__"]], "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment": [[709, 3, 1, "", "__init__"]], "draugr.visualisation.pillow_utilities": [[720, 1, 1, "", "byte_array_to_pil_image"], [721, 1, 1, "", "np_array_to_pil_img"], [722, 1, 1, "", "pil_image_to_byte_array"], [723, 1, 1, "", "pil_img_to_np_array"], [724, 1, 1, "", "pil_merge_images"]], "draugr.visualisation.seaborn_utilities": [[726, 1, 1, "", "despine_all"], [727, 1, 1, "", "exponential_moving_average"], [728, 1, 1, "", "set_y_log_scale"]], "draugr.writers": [[730, 0, 0, "-", "csv_writer"], [732, 0, 0, "-", "databases"], [737, 0, 0, "-", "log_writer"], [767, 0, 0, "-", "mock_writer"], [769, 0, 0, "-", "standard_tags"], [778, 0, 0, "-", "terminal"], [783, 0, 0, "-", "writer"], [787, 0, 0, "-", "writer_utilities"]], "draugr.writers.csv_writer": [[731, 2, 1, "", "CSVWriter"]], "draugr.writers.csv_writer.CSVWriter": [[731, 3, 1, "", "__init__"], [731, 3, 1, "", "blip"], [731, 3, 1, "", "close"], [731, 3, 1, "", "filter"], [731, 3, 1, "", "get_csv_writer"], [731, 3, 1, "", "open"], [731, 3, 1, "", "scalar"]], "draugr.writers.databases": [[733, 0, 0, "-", "hdf_writer"], [735, 0, 0, "-", "sqlite_writer"]], "draugr.writers.databases.hdf_writer": [[734, 2, 1, "", "HdfWriter"]], "draugr.writers.databases.hdf_writer.HdfWriter": [[734, 3, 1, "", "__init__"], [734, 3, 1, "", "blip"], [734, 3, 1, "", "close"], [734, 3, 1, "", "filter"], [734, 3, 1, "", "open"], [734, 3, 1, "", "scalar"]], "draugr.writers.databases.sqlite_writer": [[736, 2, 1, "", "SqliteWriter"]], "draugr.writers.databases.sqlite_writer.SqliteWriter": [[736, 3, 1, "", "__init__"], [736, 3, 1, "", "blip"], [736, 3, 1, "", "close"], [736, 3, 1, "", "filter"], [736, 3, 1, "", "open"], [736, 3, 1, "", "scalar"]], "draugr.writers.log_writer": [[738, 2, 1, "", "LogWriter"]], "draugr.writers.log_writer.LogWriter": [[738, 3, 1, "", "__init__"], [738, 3, 1, "", "blip"], [738, 3, 1, "", "close"], [738, 3, 1, "", "filter"], [738, 3, 1, "", "get_logger"], [738, 3, 1, "", "log"], [738, 3, 1, "", "open"], [738, 3, 1, "", "scalar"], [738, 3, 1, "", "text"]], "draugr.writers.mixins": [[740, 0, 0, "-", "audio_writer_mixin"], [742, 0, 0, "-", "bar_writer_mixin"], [744, 0, 0, "-", "embed_writer_mixin"], [746, 0, 0, "-", "figure_writer_mixin"], [748, 0, 0, "-", "histogram_writer_mixin"], [750, 0, 0, "-", "image_writer_mixin"], [752, 0, 0, "-", "instantiation_writer_mixin"], [754, 0, 0, "-", "line_writer_mixin"], [756, 0, 0, "-", "mesh_writer_mixin"], [758, 0, 0, "-", "precision_recall_writer_mixin"], [760, 0, 0, "-", "scalar_writer_mixin"], [762, 0, 0, "-", "spectrogram_writer_mixin"], [764, 0, 0, "-", "video_writer_mixin"]], "draugr.writers.mixins.audio_writer_mixin": [[741, 2, 1, "", "AudioWriterMixin"]], "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin": [[741, 3, 1, "", "__init__"], [741, 3, 1, "", "audio"]], "draugr.writers.mixins.bar_writer_mixin": [[743, 2, 1, "", "BarWriterMixin"]], "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin": [[743, 3, 1, "", "__init__"], [743, 3, 1, "", "bar"]], "draugr.writers.mixins.embed_writer_mixin": [[745, 2, 1, "", "EmbedWriterMixin"]], "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin": [[745, 3, 1, "", "__init__"], [745, 3, 1, "", "embed"]], "draugr.writers.mixins.figure_writer_mixin": [[747, 2, 1, "", "FigureWriterMixin"]], "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin": [[747, 3, 1, "", "__init__"], [747, 3, 1, "", "figure"]], "draugr.writers.mixins.histogram_writer_mixin": [[749, 2, 1, "", "HistogramWriterMixin"]], "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin": [[749, 3, 1, "", "__init__"], [749, 3, 1, "", "histogram"]], "draugr.writers.mixins.image_writer_mixin": [[751, 2, 1, "", "ImageWriterMixin"]], "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin": [[751, 2, 1, "", "MultiChannelMethodEnum"], [751, 3, 1, "", "__init__"], [751, 3, 1, "", "image"]], "draugr.writers.mixins.instantiation_writer_mixin": [[753, 2, 1, "", "InstantiationWriterMixin"]], "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin": [[753, 3, 1, "", "__init__"], [753, 3, 1, "", "instance"]], "draugr.writers.mixins.line_writer_mixin": [[755, 2, 1, "", "LineWriterMixin"]], "draugr.writers.mixins.line_writer_mixin.LineWriterMixin": [[755, 3, 1, "", "__init__"], [755, 3, 1, "", "line"]], "draugr.writers.mixins.mesh_writer_mixin": [[757, 2, 1, "", "MeshWriterMixin"]], "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin": [[757, 3, 1, "", "__init__"], [757, 3, 1, "", "mesh"]], "draugr.writers.mixins.precision_recall_writer_mixin": [[759, 2, 1, "", "PrecisionRecallCurveWriterMixin"]], "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin": [[759, 3, 1, "", "__init__"], [759, 3, 1, "", "precision_recall_curve"]], "draugr.writers.mixins.scalar_writer_mixin": [[761, 2, 1, "", "ScalarWriterMixin"]], "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin": [[761, 3, 1, "", "__init__"], [761, 3, 1, "", "blip"], [761, 3, 1, "", "filter"], [761, 3, 1, "", "scalar"]], "draugr.writers.mixins.spectrogram_writer_mixin": [[763, 2, 1, "", "SpectrogramWriterMixin"]], "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin": [[763, 3, 1, "", "__init__"], [763, 3, 1, "", "spectrogram"]], "draugr.writers.mixins.video_writer_mixin": [[765, 2, 1, "", "VideoInputDimsEnum"], [766, 2, 1, "", "VideoWriterMixin"]], "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum": [[765, 3, 1, "", "__init__"]], "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin": [[766, 3, 1, "", "__init__"], [766, 3, 1, "", "video"]], "draugr.writers.mock_writer": [[768, 2, 1, "", "MockWriter"]], "draugr.writers.mock_writer.MockWriter": [[768, 3, 1, "", "__init__"], [768, 3, 1, "", "blip"], [768, 3, 1, "", "close"], [768, 3, 1, "", "filter"], [768, 3, 1, "", "open"], [768, 3, 1, "", "scalar"]], "draugr.writers.standard_tags": [[770, 2, 1, "", "TestingCurves"], [771, 2, 1, "", "TestingScalars"], [772, 2, 1, "", "TestingTables"], [773, 2, 1, "", "TrainingCurves"], [774, 2, 1, "", "TrainingScalars"], [775, 2, 1, "", "TrainingTables"], [776, 1, 1, "", "should_plot_y_log_scale"], [777, 1, 1, "", "should_smooth_series"]], "draugr.writers.standard_tags.TestingCurves": [[770, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingScalars": [[771, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingTables": [[772, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingCurves": [[773, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingScalars": [[774, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingTables": [[775, 3, 1, "", "__init__"]], "draugr.writers.terminal": [[779, 0, 0, "-", "console_writer"], [781, 0, 0, "-", "terminal_plot_writer"]], "draugr.writers.terminal.console_writer": [[780, 2, 1, "", "ConsoleWriter"]], "draugr.writers.terminal.console_writer.ConsoleWriter": [[780, 3, 1, "", "__init__"], [780, 3, 1, "", "blip"], [780, 3, 1, "", "close"], [780, 3, 1, "", "filter"], [780, 3, 1, "", "open"], [780, 3, 1, "", "scalar"]], "draugr.writers.terminal.terminal_plot_writer": [[782, 2, 1, "", "TerminalWriter"]], "draugr.writers.terminal.terminal_plot_writer.TerminalWriter": [[782, 2, 1, "", "MultiChannelMethodEnum"], [782, 3, 1, "", "__init__"], [782, 3, 1, "", "blip"], [782, 3, 1, "", "close"], [782, 3, 1, "", "filter"], [782, 3, 1, "", "image"], [782, 3, 1, "", "open"], [782, 3, 1, "", "scalar"], [782, 3, 1, "", "stats"]], "draugr.writers.writer": [[784, 2, 1, "", "Writer"], [785, 1, 1, "", "global_writer"], [786, 1, 1, "", "set_global_writer"]], "draugr.writers.writer.Writer": [[784, 3, 1, "", "__init__"], [784, 3, 1, "", "blip"], [784, 3, 1, "", "close"], [784, 3, 1, "", "filter"], [784, 3, 1, "", "open"], [784, 3, 1, "", "scalar"]], "draugr.writers.writer_utilities": [[788, 1, 1, "", "metrics"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"draugr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790], "dist_is_edit": 1, "dlib_util": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dlib5faciallandmarksindic": 4, "dlib68faciallandmarksindic": 5, "eye_aspect_ratio": 6, "mouth_aspect_ratio": 7, "rect_to_bounding_box": 8, "shape_to_ndarrai": 9, "exclud": [10, 11, 12, 62, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 382, 383, 384, 385, 386, 387, 388, 389, 446], "flag": [11, 12, 230, 231, 232, 233, 234, 235], "tupleflag": 12, "facealign": [13, 14], "align_fac": 14, "drawer": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "mpl_drawer": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "discrete_scroll_plot": 19, "distribution_plot": [20, 21], "distributionplot": 21, "image_stream_plot": [22, 23], "imagestreamplot": 23, "mpldrawer": [24, 25, 26], "mockdraw": 25, "series_scroll_plot": [27, 28], "seriesscrollplot": 28, "spectral": [29, 30, 31, 32, 33], "fast_fourier_transform": [30, 31], "fastfouriertransformplot": 31, "fast_fourier_transform_spectrogram": [32, 33], "fastfouriertransformspectrogramplot": 33, "opencv_draw": [34, 35, 36, 199, 200, 201], "opencv_image_stream": [35, 36], "opencvimagestream": 36, "termin": [37, 38, 39, 40, 41, 42, 43, 44, 45, 778, 779, 780, 781, 782], "terminal_image_render": [38, 39, 40, 41], "render_fil": 39, "terminal_render_imag": 40, "terminalise_imag": 41, "terminal_plot": 42, "terminal_plott": 43, "terminal_util": [44, 45], "scale": 45, "entry_point": [46, 47, 48, 49, 50, 51, 52, 53, 54], "cpu_usage_entry_point": [47, 48], "main": [48, 50, 52, 54, 388], "tensorboard_entry_point": [49, 50], "toggle_darkmod": [51, 52], "visdom_entry_point": [53, 54], "extens": [55, 56, 57, 58, 59, 60], "skimage_util": [56, 57], "rgb_to_grayscal": 57, "sorcery_util": [58, 59, 60], "lower_case_assigned_nam": 59, "upper_case_assigned_nam": 60, "ffmpeg_util": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "extract": [63, 64], "extract_fram": 64, "merg": [65, 66], "merge_video": 66, "sequencifi": [67, 68], "sequencify_fil": 68, "split": [69, 70, 109, 110, 111, 112, 113], "spilt_video": 70, "get_vers": 71, "jax_util": 72, "metric": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 788], "accumul": [74, 75, 76, 77], "lambda_accumul": 75, "mean_accumul": 76, "total_accumul": 77, "meter": [78, 79, 80], "averagemet": 79, "metric_aggreg": [81, 82, 83], "metricaggreg": 82, "save_metr": 83, "metric_collect": [84, 85], "metriccollect": 85, "metric_summari": [86, 87], "metricsummari": 87, "plot": [88, 692, 693], "multiprocessing_util": [89, 90, 91, 92, 93], "pooled_queue_processor": [90, 91, 92, 93], "cloudpicklebas": 91, "pooledqueueprocessor": 92, "pooledqueuetask": 93, "numpy_util": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "channel_transform": [95, 96, 97, 98, 99, 517, 518, 519, 520, 521], "chw_to_hwc": 96, "float_chw_to_hwc_uint": 97, "hwc_to_chw": 98, "uint_hwc_to_chw_float": 99, "dataset": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "categor": [101, 102, 103, 104, 105, 106, 107, 454, 455, 456], "deep_categori": [102, 103], "build_deep_categorical_dataset": 103, "flat_categori": [104, 105], "build_flat_dataset": 105, "shallow_categori": [106, 107], "build_shallow_categorical_dataset": 107, "default": [108, 272, 273, 274], "splitenum": 110, "splitindex": 111, "select_split": 112, "train_valid_test_split": 113, "manipul": [114, 115, 116], "myndarrai": 115, "recursive_flatten_numpi": 116, "mix": [117, 118], "mix_channel": 118, "power": [119, 120, 121, 122, 123, 124], "next_pow_10_numpi": 120, "next_pow_2_numpi": 121, "next_pow_numpi": 122, "next_power_10_numpi": 123, "next_power_2_numpi": 124, "raster_grid_2d_mask": [125, 126], "circular_mask": 126, "raster_grid_3d_mask": [127, 128], "sphere_mask": 128, "resiz": [129, 130, 266, 267, 268], "resize_arrai": 130, "sampl": [131, 132], "get_sampl": 132, "signal_util": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "pad": [134, 135, 136], "zero_pad_to": 135, "zero_pad_to_power_2": 136, "signal_mix": [137, 138], "mix_ratio": 138, "signal_project": [139, 140, 141, 142, 143], "heavisid": 140, "normalise_sign": 141, "normalise_signal_max_ab": 142, "normalise_signal_minmax": 143, "signal_statist": [144, 145, 146], "mean_squar": 145, "root_mean_squar": 146, "truncat": [147, 148, 149, 150], "last_dim_trunc": 148, "min_length_truncate_batch": 149, "truncate_to_power_2": 150, "opencv_util": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "bounding_box": [152, 153, 154, 155, 156, 157, 158, 159], "boxes_2d": [153, 154, 155, 529, 530], "minmax_to_xywh": 154, "xywh_to_minmax": 155, "evalu": [156, 157, 158, 159, 500, 501, 502, 503, 504], "intersect_numpi": 157, "jaccard_overlap_numpi": 158, "remove_null_box": 159, "color_spac": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "clean": [161, 162, 163], "cleanupmethod": 162, "clean_up": 163, "color": [164, 165, 166, 167], "is_singular_channel": 165, "num_channel": 166, "to_color": 167, "edg": [168, 169, 170, 171], "cannyapertures": 169, "toedgemethodenum": 170, "to_edg": 171, "gamma": [172, 173, 174, 175, 176, 177], "gamma_correct_byt": 173, "gamma_correct_fast_to_byt": 174, "gamma_correct_float_to_byt": 175, "linear_correct_byt": 176, "linear_correct_float_to_byt": 177, "grai": [178, 179, 180], "tograymethodenum": 179, "to_grai": 180, "nois": [181, 182, 183], "noisefiltermethodenum": 182, "noise_filt": 183, "threshold": [184, 185, 186, 187], "thresholdmethodenum": 185, "hsv_min_max_clip_mask": 186, "threshold_channel": 187, "draw": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "draw_box": [189, 190, 191, 192], "draw_bounding_box": 190, "draw_single_box": 191, "draw_single_rect": 192, "mask": [193, 194, 195, 196, 197, 198], "gauss_circl": [194, 195, 196, 197], "ellipse_bbox": 195, "make_gradient_v1": 196, "make_gradient_v2": 197, "segment_ellips": 198, "draw_mask": 200, "find_contour": 201, "opencv_drawing_util": [202, 203, 204, 205], "cube_3d_matrix": 203, "draw_axi": 204, "draw_cub": 205, "namespac": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "color_conversion_enum": [207, 208], "colorconversionenum": 208, "enum": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 531, 532], "bordertypeenum": 210, "camerapropertyenum": 211, "comparisonenum": 212, "contourapproximationmodeenum": 213, "contourretrievalmodeenum": 214, "datatypeenum": 215, "distancetransformlabeltypeenum": 216, "distancetransformmaskenum": 217, "distancetypeenum": 218, "fontenum": 219, "houghmodeenum": 220, "kmeansenum": 221, "linetypeenum": 222, "markertypeenum": 223, "morphshapeenum": 224, "morphtypeenum": 225, "mouseeventenum": 226, "rectanglesintersecttyp": 227, "videocaptureapienum": 228, "windowflagenum": 229, "drawmatchesflagenum": 231, "mouseeventflag": 232, "termcriteriaflag": 233, "thresholdtypeflag": 234, "windowpropertyflag": 235, "raster_sequ": [236, 237, 238, 239, 240, 241, 242, 243], "async_video_stream": [237, 238], "asyncvideostream": 238, "frame_annot": [239, 240, 241], "blit_fp": 240, "blit_numbering_raster_sequ": 241, "frame": [242, 243], "frame_gener": 243, "transform": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "crop": [245, 246], "circle_crop": 246, "cv2_transform": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "cv2compos": 248, "cv2convertcolor": 249, "cv2expand": 250, "cv2photometricdistort": 251, "cv2randombright": 252, "cv2randomcontrast": 253, "cv2randomhu": 254, "cv2randomlightingnois": 255, "cv2randommirror": 256, "cv2randomsamplecrop": 257, "cv2randomsatur": 258, "cv2resiz": 259, "cv2swapchannel": 260, "cv2toabsolutecoord": 261, "cv2topercentcoord": 262, "convertfromint": 263, "lambda": 264, "subtractmean": 265, "interpolationenum": 267, "cv2_resiz": 268, "window": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "color_pick": [270, 271], "interactive_hsv_color_pick": 271, "extensionenum": 273, "match_return_cod": 274, "element": [275, 276, 277], "trackbar": [276, 277], "add_trackbar": 277, "hough_circl": [278, 279], "interactive_hough_circl": 279, "imag": [280, 281, 516, 517, 518, 519, 520, 521, 522, 523], "show_imag": 281, "os_util": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "cuda_devic": [283, 284, 285, 286], "deviceorderenum": 284, "set_cuda_device_ord": 285, "set_cuda_visible_devic": 286, "linux_util": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "gnome_util": [288, 289, 290], "dark_mod": [289, 290], "is_dark_mode_act": 290, "gtk_util": [291, 292, 293, 294, 295], "gtk_set": [292, 293], "gtkset": 293, "theme_prefer": [294, 295], "gtkthemeprefer": 295, "systemd_util": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "amdroc": 298, "deprec": [299, 300, 301, 302, 303, 304, 305], "libuser_test": 300, "systemd_utilities_old": [301, 302, 303, 304, 305], "disable_servic": [302, 310], "enable_servic": [303, 311], "install_servic": [304, 312], "remove_servic": [305, 313, 349], "docker_inspect": 306, "psystemd": 307, "service_manag": [308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "runasenum": 309, "restart_servic": 314, "start_servic": 315, "status_servic": 316, "stop_servic": 317, "service_templ": 318, "user_util": [319, 320, 321, 322, 323], "change_home_dir": 320, "change_passwd": 321, "make_us": 322, "remove_us": 323, "platform_select": [324, 325], "get_backend_modul": 325, "resource_util": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "all": [327, 328], "get_num_inst": 328, "cpu": [329, 330, 331, 332, 333, 334, 335], "workersess": 330, "release_worker_cor": 331, "request_worker_cor": 332, "reset_worker_track": 333, "worker_cores_avail": 334, "worker_cores_in_us": 335, "gpu": 336, "ram": [337, 338], "num_instance_no_pag": 338, "screen_resolut": [339, 340, 341, 342, 343, 344, 345, 346], "get_screen_resolut": [340, 376], "screen_res_gtk": 341, "screen_res_mac": 342, "screen_res_pygam": 343, "screen_res_tk": 344, "screen_res_win": 345, "screen_res_xlib": 346, "servic": [347, 348, 349], "add_servic": 348, "pandas_util": [350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "format": [351, 352], "pandas_mean_std_bold_formatt": 352, "from_dict": [353, 354, 355, 356], "nested_dict_to_four_level_column_df": 354, "nested_dict_to_three_level_column_df": 355, "nested_dict_to_two_level_column_df": 356, "latex_mean_std": [357, 358, 359, 360, 361], "pandas_format_bold_max_row_latex": 358, "pandas_mean_std": 359, "pandas_mean_std_to_str": 360, "pandas_to_latex_clean": 361, "misc_util": [362, 363, 364, 365], "chainedassignmentoptionenum": 363, "exportmethodenum": 364, "duplicate_column": 365, "multi_index_util": [366, 367], "add_index_level": 367, "style": [368, 369, 370, 371, 372, 373], "attrenum": 369, "colorenum": 370, "ndframeextremeenum": 371, "color_highlight_extrem": 372, "color_negative_r": 373, "pygame_util": [374, 375, 376], "screen": [375, 376], "python_util": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "broadcast": [378, 379], "broadcastnon": 379, "counter_filt": [380, 381], "counterfilt": 381, "packag": [383, 384, 385, 386], "b": 385, "c": 386, "worker": [387, 388, 389], "spawn": 389, "function_wrapp": [390, 391, 392, 393, 394], "max_frequ": 391, "min_interval_wrapp": 392, "min_interval_wrapper_glob": 393, "wrap_arg": 394, "gener": [395, 396, 397, 398, 399, 400, 401, 402, 403, 512, 513, 514, 515], "batching_gener": [396, 397, 398, 399, 400], "batch_gener": 397, "random_batch": 398, "shuffled_batch": 399, "sized_batch": 400, "recycling_gener": [401, 402, 403], "batched_recycl": 402, "recycl": 403, "http": [404, 405], "httpmethodenum": 405, "socket": [406, 407, 408, 409], "find_unclaimed_port": 407, "get_host_ip": 408, "is_port_in_us": 409, "torch_like_channel_transform": [410, 411, 412, 413, 414], "reverse_torch_vision_normalize_batch_nchw": 411, "rgb_drop_alpha_batch_nhwc": 412, "rgb_drop_alpha_hwc": 413, "torch_vision_normalize_batch_nchw": 414, "random_util": [415, 416, 417], "seed": [416, 417, 646, 647], "seed_stack": 417, "scipy_util": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "read_normalised_wav": 420, "write_normalised_wav": 421, "signal_process": 422, "subsampl": [423, 424, 425, 426, 427, 428], "fft_subsampl": 424, "fir_subsampl": 425, "mag_decimation_subsampl": 426, "max_decimation_subsampl": 427, "min_decimation_subsampl": 428, "stop": [429, 430, 431, 432, 578, 579, 580, 581], "stopping_kei": [430, 431, 432], "captureearlystop": 431, "add_early_stopping_key_combin": 432, "tensorboard_util": [433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444], "experiment": [434, 435, 436, 437, 462, 463, 464, 465, 466, 467, 468], "confusion_matrix": 435, "pretty_cf": [436, 437], "pretty_print_conf_matrix": 437, "export": [438, 439, 440, 441, 442, 443, 444, 505, 506, 507, 508, 509, 510, 511], "db_export": [439, 440], "tensorboardeventexporterdatabas": 440, "event_export": [441, 442], "tensorboardeventexport": 442, "file_export": [443, 444], "tensorboardeventexporterfil": 444, "threading_util": [445, 446, 447, 448], "skipper": [447, 448], "torch_util": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695], "architectur": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "distribut": [453, 454, 455, 456, 457, 458, 459, 460, 461, 493, 494, 495, 496, 497, 498, 499], "categoricalmlp": 455, "multiplecategoricalmlp": 456, "normal": [457, 458, 459, 460, 461], "multidimensionalnormalmlp": 458, "multivariatenormalmlp": 459, "multiplenormalmlp": 460, "shallowstdnormalmlp": 461, "head": [463, 464], "multiheadedmlp": 464, "recurr": [465, 466, 467, 468], "exposedrecurrentcategoricalmlp": 466, "recurrentbas": 467, "recurrentcategoricalmlp": 468, "mlp": [469, 470], "mlp_variant": [471, 472, 473, 474, 475, 476, 477, 478], "concatin": [472, 473, 474], "lateconcatinputmlp": 473, "preconcatinputmlp": 474, "disjunct": [475, 476], "disjunctmlp": 476, "fourier": [477, 478], "basefourierfeaturemlp": 478, "non_sequential_dataset": [480, 481], "nonsequentialdataset": 481, "random_dataset": [482, 483], "randomdataset": 483, "supervis": [484, 485, 486, 487, 488, 489, 490, 491, 492], "categorical_dataset": [485, 486], "categoricaldataset": 486, "supervised_dataset": [487, 488], "superviseddataset": 488, "vision_dataset": [489, 490, 491, 492], "dict_dataset": [490, 491, 492], "dictdatasetfold": 491, "splitdictdatasetfold": 492, "entropi": [494, 495, 496, 497, 498, 499], "differential_entropy_gaussian": 495, "log_shannon_entropi": 496, "normal_entropi": 497, "normal_log_dens": 498, "shannon_entropi": 499, "classif": [501, 502], "find_n_misclassifi": 502, "cross_valid": [503, 504], "cross_validation_gener": 504, "latex_t": [506, 507, 508, 509], "adasdassijd": 507, "asijd": 508, "iasjduh": 509, "summari": [510, 511], "to_latex_t": 511, "batch": [513, 514], "limitedbatchresampl": 514, "to_tensor_gener": 515, "float_chw_to_hwc_uint_tensor": 518, "float_nchw_to_nhwc_uint_batch": 519, "uint_hwc_to_chw_float_tensor": 520, "uint_nhwc_to_nchw_float_batch": 521, "convers": [522, 523], "quick_to_pil_imag": 523, "opencv": [524, 525, 526, 527], "torch_convers": [525, 526, 527], "cv2toimag": 526, "cv2totensor": 527, "oper": [528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "minmax_to_xywh_torch": 530, "reductionmethodenum": 532, "size": [533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "conv2d": [534, 535, 536], "conv2d_hw_shap": 535, "conv2d_padding_s": 536, "max_pool2d": [537, 538], "max_pool2d_hw_shap": 538, "pad2d": [539, 540], "pad2d_hw_shap": 540, "transp_conv2d": [541, 542, 543], "transp_conv2d_output_shap": 542, "transp_conv2d_padding_s": 543, "torch_transform": [544, 545, 546, 547, 548, 549], "batch_transform": [545, 546, 547, 548, 549], "batchnorm": 546, "batchrandomcrop": 547, "batchrandomhorizontalflip": 548, "batchtotensor": 549, "optimis": [550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "debug": [551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567], "gradient": [552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563], "check": [553, 554, 555], "numerical_gradi": [554, 555], "loss_grad_check": 555, "flow": [556, 557], "plot_grad_flow": 557, "grad_trac": [558, 559, 560], "print_grad_trac": 559, "register_bad_grad_hook": 560, "guid": [561, 562, 563], "guidedbackproprelu": 562, "guidedbackproprelumodel": 563, "layer_fetch": [564, 565], "intermediatelayergett": 565, "opt_verif": [566, 567], "overfit_single_batch": 567, "paramet": [568, 569, 570, 602, 603, 604, 605, 606], "freeze_paramet": 569, "frozen_paramet": 570, "schedul": [571, 572, 573, 574, 575, 576, 577], "learning_rate_util": [572, 573], "set_lr": 573, "lr_schedul": [574, 575], "warmupmultisteplr": 575, "warmup_lr_schedul": 577, "overfit": [579, 580, 581], "improvementdetector": 580, "overfitdetector": 581, "updat": [582, 583, 584, 585, 586], "copi": [583, 584, 585], "copy_paramet": 584, "copy_st": 585, "soft_upd": 586, "persist": [587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "checkpoint": [588, 589, 590], "load_checkpoint": 589, "save_checkpoint": 590, "config": [591, 592, 593], "ensure_directory_exist": 592, "save_config": 593, "model": [594, 595, 596, 597, 598, 599], "convert_saved_model_to_cpu": 595, "load_latest_model": 596, "load_model": 597, "save_model": 598, "save_model_and_configur": 599, "name": [600, 601], "get_model_hash": 601, "load_latest_model_paramet": 603, "load_model_paramet": 604, "save_model_paramet": 605, "save_parameters_and_configur": 606, "session": [607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "cache_sess": [608, 609], "torchcachesess": 609, "determinism_sess": [610, 611], "torchdeterministicsess": 611, "device_sess": [612, 613, 614, 615], "torchcpusess": 613, "torchcudasess": 614, "torchdevicesess": 615, "jit_sess": [616, 617, 618], "torchignorejitsess": 617, "torchjitsess": 618, "model_sess": [619, 620, 621, 622, 623], "torchevalsess": 620, "torchfrozenmodelsess": 621, "torchtrainsess": 622, "torchtrainingsess": 623, "type_sess": [624, 625], "defaulttypesess": 625, "system": [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "constant": [627, 628], "torch_pi": 628, "data_typ": [629, 630, 631], "global_torch_dtyp": 630, "set_global_torch_dtyp": 631, "devic": [632, 633, 634, 635, 636, 637, 638, 639], "torchdeviceenum": 633, "auto_select_available_cuda_devic": 634, "get_gpu_usage_mb": 635, "global_torch_devic": 636, "select_cuda_devic": 637, "set_global_torch_devic": 638, "torch_clean_up": 639, "info": [640, 641, 642, 656, 657], "cuda_info": 641, "system_info": 642, "load": [643, 644, 645], "default_worker_init_fn": 644, "global_pin_memori": 645, "torch_se": 647, "tensor": [648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "dimension_ord": [649, 650, 651, 652, 653, 654, 655], "chw_to_hwc_tensor": 650, "hwc_to_chw_tensor": 651, "nchw_to_nhwc_tensor": 652, "nhwc_to_nchw_tensor": 653, "ntchw_to_nthwc_tensor": 654, "nthwc_to_ntchw_tensor": 655, "size_of_tensor": 657, "mixin": [658, 659, 674, 675, 676, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766], "tensorisemixin": 659, "normalis": [660, 661], "standardis": 661, "reshap": [662, 663, 664, 665], "flatten_keep_batch": 663, "flatten_tn_dim": 664, "safe_concat": 665, "tensor_contain": [666, 667], "namedtensortupl": 667, "to_scalar": 668, "to_tensor": 669, "type": [670, 671, 672], "numpy_to_torch_dtyp": 671, "torch_to_numpy_dtyp": 672, "writer": [673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788], "graph_writer_mixin": [675, 676], "graphwritermixin": 676, "tensorboard": [677, 678, 679, 680, 681, 682], "launcher": [678, 679], "launch_tensorboard": 679, "tensorboard_pytorch_writ": [680, 681, 682], "ptw": 681, "tensorboardpytorchwrit": 682, "torch_module_writ": [683, 684, 685, 686, 687, 688], "module_parameter_writer_mixin": [684, 685], "moduleparameterwritermixin": 685, "module_writer_hook": 686, "module_writer_paramet": [687, 688], "weight_bias_histogram": 688, "visdom": [689, 690, 691, 692, 693, 694, 695], "episode_visu": [690, 691], "update_visualis": 691, "plot_episode_stat": 693, "visdom_writ": [694, 695], "visdomwrit": 695, "tqdm_util": [696, 697, 698, 699, 700, 701, 702, 703, 704], "pooled_progress_bar": [697, 698, 699, 700, 701, 702, 703], "parallel_imap": 698, "parallel_map": 699, "parallel_uimap": 700, "parallel_umap": 701, "sequential_imap": 702, "sequential_map": 703, "progress_bar": 704, "visualis": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728], "ggplot_util": 706, "matplotlib_util": [707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718], "matplotlibhorizontalalign": 708, "matplotlibverticalalign": 709, "annotate_point": 710, "decolorise_plot": 711, "denormalise_minusoneon": 712, "latex_clean_label": 713, "make_errorbar_legend": 714, "matplotlib_bounding_box": 715, "remove_decor": 716, "save_embed_fig": 717, "use_monochrome_styl": 718, "pillow_util": [719, 720, 721, 722, 723, 724], "byte_array_to_pil_imag": 720, "np_array_to_pil_img": 721, "pil_image_to_byte_arrai": 722, "pil_img_to_np_arrai": 723, "pil_merge_imag": 724, "seaborn_util": [725, 726, 727, 728], "despine_al": 726, "exponential_moving_averag": 727, "set_y_log_scal": 728, "csv_writer": [730, 731], "csvwriter": 731, "databas": [732, 733, 734, 735, 736], "hdf_writer": [733, 734], "hdfwriter": 734, "sqlite_writ": [735, 736], "sqlitewrit": 736, "log_writ": [737, 738], "logwrit": 738, "audio_writer_mixin": [740, 741], "audiowritermixin": 741, "bar_writer_mixin": [742, 743], "barwritermixin": 743, "embed_writer_mixin": [744, 745], "embedwritermixin": 745, "figure_writer_mixin": [746, 747], "figurewritermixin": 747, "histogram_writer_mixin": [748, 749], "histogramwritermixin": 749, "image_writer_mixin": [750, 751], "imagewritermixin": 751, "instantiation_writer_mixin": [752, 753], "instantiationwritermixin": 753, "line_writer_mixin": [754, 755], "linewritermixin": 755, "mesh_writer_mixin": [756, 757], "meshwritermixin": 757, "precision_recall_writer_mixin": [758, 759], "precisionrecallcurvewritermixin": 759, "scalar_writer_mixin": [760, 761], "scalarwritermixin": 761, "spectrogram_writer_mixin": [762, 763], "spectrogramwritermixin": 763, "video_writer_mixin": [764, 765, 766], "videoinputdimsenum": 765, "videowritermixin": 766, "mock_writ": [767, 768], "mockwrit": 768, "standard_tag": [769, 770, 771, 772, 773, 774, 775, 776, 777], "testingcurv": 770, "testingscalar": 771, "testingt": 772, "trainingcurv": 773, "trainingscalar": 774, "trainingt": 775, "should_plot_y_log_scal": 776, "should_smooth_seri": 777, "console_writ": [779, 780], "consolewrit": 780, "terminal_plot_writ": [781, 782], "terminalwrit": 782, "global_writ": 785, "set_global_writ": 786, "writer_util": [787, 788], "get": 789, "start": 789, "document": 790, "what": 790, "s": 790, "next": 790, "indic": 790, "tabl": 790}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})