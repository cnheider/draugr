Search.setIndex({"docnames": ["generated/draugr", "generated/draugr.dist_is_editable", "generated/draugr.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "generated/draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "generated/draugr.dlib_utilities.exclude", "generated/draugr.dlib_utilities.exclude.flags", "generated/draugr.dlib_utilities.exclude.flags.TupleFlag", "generated/draugr.dlib_utilities.facealigner", "generated/draugr.dlib_utilities.facealigner.align_face", "generated/draugr.drawers", "generated/draugr.drawers.drawer", "generated/draugr.drawers.drawer.Drawer", "generated/draugr.drawers.mpl_drawers", "generated/draugr.drawers.mpl_drawers.discrete_scroll_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "generated/draugr.drawers.mpl_drawers.image_stream_plot", "generated/draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "generated/draugr.drawers.mpl_drawers.mpldrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "generated/draugr.drawers.mpl_drawers.series_scroll_plot", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "generated/draugr.drawers.mpl_drawers.spectral", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "generated/draugr.drawers.opencv_drawers", "generated/draugr.drawers.opencv_drawers.opencv_image_stream", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "generated/draugr.entry_points", "generated/draugr.entry_points.cpu_usage_entry_point", "generated/draugr.entry_points.cpu_usage_entry_point.main", "generated/draugr.entry_points.tensorboard_entry_point", "generated/draugr.entry_points.tensorboard_entry_point.main", "generated/draugr.entry_points.toggle_darkmode", "generated/draugr.entry_points.toggle_darkmode.main", "generated/draugr.entry_points.visdom_entry_point", "generated/draugr.entry_points.visdom_entry_point.main", "generated/draugr.extensions", "generated/draugr.extensions.skimage_utilities", "generated/draugr.extensions.skimage_utilities.rgb_to_grayscale", "generated/draugr.extensions.sorcery_utilities", "generated/draugr.extensions.sorcery_utilities.lower_case_assigned_names", "generated/draugr.extensions.sorcery_utilities.upper_case_assigned_names", "generated/draugr.ffmpeg_utilities", "generated/draugr.ffmpeg_utilities.exclude", "generated/draugr.ffmpeg_utilities.extract", "generated/draugr.ffmpeg_utilities.extract.extract_frames", "generated/draugr.ffmpeg_utilities.merge", "generated/draugr.ffmpeg_utilities.merge.merge_video", "generated/draugr.ffmpeg_utilities.sequencify", "generated/draugr.ffmpeg_utilities.sequencify.sequencify_files", "generated/draugr.ffmpeg_utilities.split", "generated/draugr.ffmpeg_utilities.split.spilt_video", "generated/draugr.get_version", "generated/draugr.jax_utilities", "generated/draugr.matlab_utilities", "generated/draugr.metrics", "generated/draugr.metrics.accumulation", "generated/draugr.metrics.accumulation.lambda_accumulator", "generated/draugr.metrics.accumulation.mean_accumulator", "generated/draugr.metrics.accumulation.total_accumulator", "generated/draugr.metrics.meters", "generated/draugr.metrics.meters.AverageMeter", "generated/draugr.metrics.meters.Meter", "generated/draugr.metrics.metric_aggregator", "generated/draugr.metrics.metric_aggregator.MetricAggregator", "generated/draugr.metrics.metric_aggregator.save_metric", "generated/draugr.metrics.metric_collection", "generated/draugr.metrics.metric_collection.MetricCollection", "generated/draugr.metrics.metric_summary", "generated/draugr.metrics.metric_summary.MetricSummary", "generated/draugr.metrics.plotting", "generated/draugr.multiprocessing_utilities", "generated/draugr.multiprocessing_utilities.pooled_queue_processor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "generated/draugr.numpy_utilities", "generated/draugr.numpy_utilities.channel_transform", "generated/draugr.numpy_utilities.channel_transform.chw_to_hwc", "generated/draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "generated/draugr.numpy_utilities.channel_transform.hwc_to_chw", "generated/draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "generated/draugr.numpy_utilities.datasets", "generated/draugr.numpy_utilities.datasets.categorical", "generated/draugr.numpy_utilities.datasets.categorical.deep_category", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "generated/draugr.numpy_utilities.datasets.categorical.flat_category", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "generated/draugr.numpy_utilities.datasets.defaults", "generated/draugr.numpy_utilities.datasets.splitting", "generated/draugr.numpy_utilities.datasets.splitting.SplitEnum", "generated/draugr.numpy_utilities.datasets.splitting.SplitIndexer", "generated/draugr.numpy_utilities.datasets.splitting.select_split", "generated/draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "generated/draugr.numpy_utilities.manipulation", "generated/draugr.numpy_utilities.manipulation.MyNdArray", "generated/draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "generated/draugr.numpy_utilities.mixing", "generated/draugr.numpy_utilities.mixing.mix_channels", "generated/draugr.numpy_utilities.powers", "generated/draugr.numpy_utilities.powers.next_pow_10_numpy", "generated/draugr.numpy_utilities.powers.next_pow_2_numpy", "generated/draugr.numpy_utilities.powers.next_pow_numpy", "generated/draugr.numpy_utilities.powers.next_power_10_numpy", "generated/draugr.numpy_utilities.powers.next_power_2_numpy", "generated/draugr.numpy_utilities.raster_grid_2d_masking", "generated/draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "generated/draugr.numpy_utilities.raster_grid_3d_masking", "generated/draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "generated/draugr.numpy_utilities.resize", "generated/draugr.numpy_utilities.resize.resize_array", "generated/draugr.numpy_utilities.sampling", "generated/draugr.numpy_utilities.sampling.get_sampler", "generated/draugr.numpy_utilities.signal_utilities", "generated/draugr.numpy_utilities.signal_utilities.padding", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "generated/draugr.numpy_utilities.signal_utilities.signal_projection", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "generated/draugr.numpy_utilities.signal_utilities.truncation", "generated/draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "generated/draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "generated/draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "generated/draugr.opencv_utilities", "generated/draugr.opencv_utilities.bounding_boxes", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "generated/draugr.opencv_utilities.bounding_boxes.evaluation", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "generated/draugr.opencv_utilities.color_space", "generated/draugr.opencv_utilities.color_space.clean", "generated/draugr.opencv_utilities.color_space.clean.CleanUpMethod", "generated/draugr.opencv_utilities.color_space.clean.clean_up", "generated/draugr.opencv_utilities.color_space.color", "generated/draugr.opencv_utilities.color_space.color.is_singular_channel", "generated/draugr.opencv_utilities.color_space.color.num_channels", "generated/draugr.opencv_utilities.color_space.color.to_color", "generated/draugr.opencv_utilities.color_space.edge", "generated/draugr.opencv_utilities.color_space.edge.CannyApertureSize", "generated/draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "generated/draugr.opencv_utilities.color_space.edge.to_edge", "generated/draugr.opencv_utilities.color_space.gamma", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gray", "generated/draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "generated/draugr.opencv_utilities.color_space.gray.to_gray", "generated/draugr.opencv_utilities.color_space.noise", "generated/draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "generated/draugr.opencv_utilities.color_space.noise.noise_filter", "generated/draugr.opencv_utilities.color_space.threshold", "generated/draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "generated/draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "generated/draugr.opencv_utilities.color_space.threshold.threshold_channel", "generated/draugr.opencv_utilities.drawing", "generated/draugr.opencv_utilities.drawing.draw_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "generated/draugr.opencv_utilities.drawing.masks", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "generated/draugr.opencv_utilities.drawing.masks.segment_ellipse", "generated/draugr.opencv_utilities.drawing.opencv_draw", "generated/draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "generated/draugr.opencv_utilities.drawing.opencv_draw.find_contours", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "generated/draugr.opencv_utilities.namespaces", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "generated/draugr.opencv_utilities.namespaces.enums", "generated/draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "generated/draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.FontEnum", "generated/draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.KmeansEnum", "generated/draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "generated/draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "generated/draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "generated/draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags", "generated/draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "generated/draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "generated/draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "generated/draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "generated/draugr.opencv_utilities.raster_sequences", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "generated/draugr.opencv_utilities.raster_sequences.frames", "generated/draugr.opencv_utilities.raster_sequences.frames.frame_generator", "generated/draugr.opencv_utilities.transformation", "generated/draugr.opencv_utilities.transformation.cropping", "generated/draugr.opencv_utilities.transformation.cropping.circle_crop", "generated/draugr.opencv_utilities.transformation.cv2_transforms", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "generated/draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "generated/draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "generated/draugr.opencv_utilities.transformation.resize", "generated/draugr.opencv_utilities.transformation.resize.InterpolationEnum", "generated/draugr.opencv_utilities.transformation.resize.cv2_resize", "generated/draugr.opencv_utilities.windows", "generated/draugr.opencv_utilities.windows.color_picker", "generated/draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "generated/draugr.opencv_utilities.windows.default", "generated/draugr.opencv_utilities.windows.default.ExtensionEnum", "generated/draugr.opencv_utilities.windows.default.match_return_code", "generated/draugr.opencv_utilities.windows.elements", "generated/draugr.opencv_utilities.windows.elements.trackbar", "generated/draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "generated/draugr.opencv_utilities.windows.hough_circles", "generated/draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "generated/draugr.opencv_utilities.windows.image", "generated/draugr.opencv_utilities.windows.image.show_image", "generated/draugr.os_utilities", "generated/draugr.os_utilities.cuda_device", "generated/draugr.os_utilities.cuda_device.DeviceOrderEnum", "generated/draugr.os_utilities.cuda_device.set_cuda_device_order", "generated/draugr.os_utilities.cuda_device.set_cuda_visible_devices", "generated/draugr.os_utilities.linux_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "generated/draugr.os_utilities.linux_utilities.gtk_utilities", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "generated/draugr.os_utilities.linux_utilities.mac_utilities", "generated/draugr.os_utilities.linux_utilities.mac_utilities.dark_mode", "generated/draugr.os_utilities.linux_utilities.systemd_utilities", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "generated/draugr.os_utilities.linux_utilities.user_utilities", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "generated/draugr.os_utilities.linux_utilities.user_utilities.make_user", "generated/draugr.os_utilities.linux_utilities.user_utilities.remove_user", "generated/draugr.os_utilities.mac_utilities", "generated/draugr.os_utilities.platform_selection", "generated/draugr.os_utilities.platform_selection.get_backend_module", "generated/draugr.os_utilities.resource_utilities", "generated/draugr.os_utilities.resource_utilities.all", "generated/draugr.os_utilities.resource_utilities.all.get_num_instances", "generated/draugr.os_utilities.resource_utilities.cpu", "generated/draugr.os_utilities.resource_utilities.cpu.WorkerSession", "generated/draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "generated/draugr.os_utilities.resource_utilities.gpu", "generated/draugr.os_utilities.resource_utilities.ram", "generated/draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "generated/draugr.os_utilities.screen_resolution", "generated/draugr.os_utilities.screen_resolution.get_screen_resolution", "generated/draugr.os_utilities.screen_resolution.screen_res_gtk", "generated/draugr.os_utilities.screen_resolution.screen_res_mac", "generated/draugr.os_utilities.screen_resolution.screen_res_pygame", "generated/draugr.os_utilities.screen_resolution.screen_res_tk", "generated/draugr.os_utilities.screen_resolution.screen_res_win", "generated/draugr.os_utilities.screen_resolution.screen_res_xlib", "generated/draugr.os_utilities.service", "generated/draugr.os_utilities.service.add_service", "generated/draugr.os_utilities.service.remove_service", "generated/draugr.os_utilities.windows_utilities", "generated/draugr.os_utilities.windows_utilities.exclude", "generated/draugr.os_utilities.windows_utilities.exclude.communication", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.FailSafeException", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.HardwareInput", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input_I", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.KeyBdInput", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.MouseInput", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.POINT", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.click", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.doubleClick", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.failSafeCheck", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyDown", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyUp", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.leftClick", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.middleClick", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseDown", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseUp", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.move", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveRel", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveTo", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.position", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.press", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.rightClick", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.size", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.tripleClick", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.typewrite", "generated/draugr.os_utilities.windows_utilities.exclude.communication.direct_input.write", "generated/draugr.os_utilities.windows_utilities.exclude.communication.edge", "generated/draugr.os_utilities.windows_utilities.exclude.communication.edge.main", "generated/draugr.os_utilities.windows_utilities.exclude.communication.firefox", "generated/draugr.os_utilities.windows_utilities.exclude.communication.firefox.main", "generated/draugr.os_utilities.windows_utilities.exclude.communication.main", "generated/draugr.os_utilities.windows_utilities.exclude.communication.main.main", "generated/draugr.os_utilities.windows_utilities.exclude.communication.mario", "generated/draugr.os_utilities.windows_utilities.exclude.communication.mario.main", "generated/draugr.os_utilities.windows_utilities.task_scheduler", "generated/draugr.os_utilities.windows_utilities.task_scheduler.api", "generated/draugr.os_utilities.windows_utilities.task_scheduler.api.delete_task", "generated/draugr.os_utilities.windows_utilities.task_scheduler.api.new_user_logon_execute_task", "generated/draugr.os_utilities.windows_utilities.task_scheduler.api.set_task_activity", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type.TaskActionTypeEnum", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation.TaskCreationEnum", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type.TaskLogonTypeEnum", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger", "generated/draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger.TaskTriggerEnum", "generated/draugr.os_utilities.windows_utilities.win32", "generated/draugr.os_utilities.windows_utilities.win32.api", "generated/draugr.os_utilities.windows_utilities.win32.api.press_key", "generated/draugr.os_utilities.windows_utilities.win32.api.press_key_foreground", "generated/draugr.os_utilities.windows_utilities.win32.gui", "generated/draugr.os_utilities.windows_utilities.win32.gui.find_all_windows", "generated/draugr.os_utilities.windows_utilities.win32.gui.get_inner_windows", "generated/draugr.os_utilities.windows_utilities.win32.gui.list_window_names", "generated/draugr.os_utilities.windows_utilities.windows_settings", "generated/draugr.os_utilities.windows_utilities.windows_settings.WindowsSettings", "generated/draugr.pandas_utilities", "generated/draugr.pandas_utilities.formatting", "generated/draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "generated/draugr.pandas_utilities.from_dict", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "generated/draugr.pandas_utilities.latex_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "generated/draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "generated/draugr.pandas_utilities.misc_utilities", "generated/draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "generated/draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "generated/draugr.pandas_utilities.misc_utilities.duplicate_columns", "generated/draugr.pandas_utilities.multi_index_utilities", "generated/draugr.pandas_utilities.multi_index_utilities.add_index_level", "generated/draugr.pandas_utilities.styling", "generated/draugr.pandas_utilities.styling.AttrEnum", "generated/draugr.pandas_utilities.styling.ColorEnum", "generated/draugr.pandas_utilities.styling.NDFrameExtremeEnum", "generated/draugr.pandas_utilities.styling.color_highlight_extreme", "generated/draugr.pandas_utilities.styling.color_negative_red", "generated/draugr.pygame_utilities", "generated/draugr.pygame_utilities.screen", "generated/draugr.pygame_utilities.screen.get_screen_resolution", "generated/draugr.python_utilities", "generated/draugr.python_utilities.broadcasting", "generated/draugr.python_utilities.broadcasting.BroadcastNone", "generated/draugr.python_utilities.exclude", "generated/draugr.python_utilities.exclude.packages", "generated/draugr.python_utilities.exclude.packages.a", "generated/draugr.python_utilities.exclude.packages.b", "generated/draugr.python_utilities.exclude.packages.c", "generated/draugr.python_utilities.exclude.worker", "generated/draugr.python_utilities.exclude.worker.main", "generated/draugr.python_utilities.exclude.worker.spawn", "generated/draugr.python_utilities.function_wrappers", "generated/draugr.python_utilities.function_wrappers.max_frequency", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "generated/draugr.python_utilities.function_wrappers.wrap_args", "generated/draugr.python_utilities.generators", "generated/draugr.python_utilities.generators.batching_generator", "generated/draugr.python_utilities.generators.batching_generator.batch_generator", "generated/draugr.python_utilities.generators.batching_generator.random_batches", "generated/draugr.python_utilities.generators.batching_generator.shuffled_batches", "generated/draugr.python_utilities.generators.batching_generator.sized_batch", "generated/draugr.python_utilities.generators.recycling_generator", "generated/draugr.python_utilities.generators.recycling_generator.batched_recycle", "generated/draugr.python_utilities.generators.recycling_generator.recycle", "generated/draugr.python_utilities.http", "generated/draugr.python_utilities.http.HttpMethodEnum", "generated/draugr.python_utilities.sockets", "generated/draugr.python_utilities.sockets.find_unclaimed_port", "generated/draugr.python_utilities.sockets.get_host_ip", "generated/draugr.python_utilities.sockets.is_port_in_use", "generated/draugr.python_utilities.torch_like_channel_transformation", "generated/draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "generated/draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "generated/draugr.random_utilities", "generated/draugr.random_utilities.seeding", "generated/draugr.random_utilities.seeding.seed_stack", "generated/draugr.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "generated/draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "generated/draugr.scipy_utilities.signal_processing", "generated/draugr.scipy_utilities.subsampling", "generated/draugr.scipy_utilities.subsampling.fft_subsample", "generated/draugr.scipy_utilities.subsampling.fir_subsample", "generated/draugr.scipy_utilities.subsampling.mag_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.max_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.min_decimation_subsample", "generated/draugr.stopping", "generated/draugr.stopping.stopping_key", "generated/draugr.stopping.stopping_key.CaptureEarlyStop", "generated/draugr.stopping.stopping_key.add_early_stopping_key_combination", "generated/draugr.tensorboard_utilities", "generated/draugr.tensorboard_utilities.experimental", "generated/draugr.tensorboard_utilities.experimental.confusion_matrix", "generated/draugr.tensorboard_utilities.experimental.pretty_cf", "generated/draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix", "generated/draugr.tensorboard_utilities.exporting", "generated/draugr.tensorboard_utilities.exporting.db_export", "generated/draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase", "generated/draugr.tensorboard_utilities.exporting.event_export", "generated/draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter", "generated/draugr.tensorboard_utilities.exporting.file_export", "generated/draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile", "generated/draugr.threading_utilities", "generated/draugr.threading_utilities.exclude", "generated/draugr.threading_utilities.skipper", "generated/draugr.threading_utilities.skipper.Skipper", "generated/draugr.torch_utilities", "generated/draugr.torch_utilities.architectures", "generated/draugr.torch_utilities.architectures.architecture", "generated/draugr.torch_utilities.architectures.architecture.Architecture", "generated/draugr.torch_utilities.architectures.distributional", "generated/draugr.torch_utilities.architectures.distributional.categorical", "generated/draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "generated/draugr.torch_utilities.architectures.experimental", "generated/draugr.torch_utilities.architectures.experimental.heads", "generated/draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent", "generated/draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.mlp", "generated/draugr.torch_utilities.architectures.mlp.MLP", "generated/draugr.torch_utilities.architectures.mlp_variants", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "generated/draugr.torch_utilities.datasets", "generated/draugr.torch_utilities.datasets.non_sequential_dataset", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "generated/draugr.torch_utilities.datasets.random_dataset", "generated/draugr.torch_utilities.datasets.random_dataset.RandomDataset", "generated/draugr.torch_utilities.datasets.supervised", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "generated/draugr.torch_utilities.distributions", "generated/draugr.torch_utilities.distributions.entropy", "generated/draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "generated/draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_log_density", "generated/draugr.torch_utilities.distributions.entropy.shannon_entropy", "generated/draugr.torch_utilities.evaluation", "generated/draugr.torch_utilities.evaluation.classification", "generated/draugr.torch_utilities.evaluation.classification.find_n_misclassified", "generated/draugr.torch_utilities.evaluation.cross_validation", "generated/draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "generated/draugr.torch_utilities.exporting", "generated/draugr.torch_utilities.exporting.latex_tables", "generated/draugr.torch_utilities.exporting.latex_tables.adasdassijd", "generated/draugr.torch_utilities.exporting.latex_tables.asijd", "generated/draugr.torch_utilities.exporting.latex_tables.iasjduh", "generated/draugr.torch_utilities.exporting.summary", "generated/draugr.torch_utilities.exporting.summary.to_latex_table", "generated/draugr.torch_utilities.generators", "generated/draugr.torch_utilities.generators.batching", "generated/draugr.torch_utilities.generators.batching.LimitedBatchResampler", "generated/draugr.torch_utilities.generators.to_tensor_generator", "generated/draugr.torch_utilities.images", "generated/draugr.torch_utilities.images.channel_transform", "generated/draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "generated/draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "generated/draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "generated/draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "generated/draugr.torch_utilities.images.conversion", "generated/draugr.torch_utilities.images.conversion.quick_to_pil_image", "generated/draugr.torch_utilities.opencv", "generated/draugr.torch_utilities.opencv.torch_conversion", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "generated/draugr.torch_utilities.operations", "generated/draugr.torch_utilities.operations.boxes_2d", "generated/draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "generated/draugr.torch_utilities.operations.enums", "generated/draugr.torch_utilities.operations.enums.ReductionMethodEnum", "generated/draugr.torch_utilities.operations.sizes", "generated/draugr.torch_utilities.operations.sizes.conv2d", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "generated/draugr.torch_utilities.operations.sizes.max_pool2d", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.pad2d", "generated/draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "generated/draugr.torch_utilities.operations.torch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "generated/draugr.torch_utilities.optimisation", "generated/draugr.torch_utilities.optimisation.debugging", "generated/draugr.torch_utilities.optimisation.debugging.gradients", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "generated/draugr.torch_utilities.optimisation.parameters", "generated/draugr.torch_utilities.optimisation.parameters.freeze_parameters", "generated/draugr.torch_utilities.optimisation.parameters.frozen_parameters", "generated/draugr.torch_utilities.optimisation.scheduling", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "generated/draugr.torch_utilities.optimisation.stopping", "generated/draugr.torch_utilities.optimisation.stopping.overfitting", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "generated/draugr.torch_utilities.optimisation.updates", "generated/draugr.torch_utilities.optimisation.updates.copying", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_state", "generated/draugr.torch_utilities.optimisation.updates.soft_update", "generated/draugr.torch_utilities.persistence", "generated/draugr.torch_utilities.persistence.checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "generated/draugr.torch_utilities.persistence.config", "generated/draugr.torch_utilities.persistence.config.ensure_directory_exist", "generated/draugr.torch_utilities.persistence.config.save_config", "generated/draugr.torch_utilities.persistence.model", "generated/draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "generated/draugr.torch_utilities.persistence.model.load_latest_model", "generated/draugr.torch_utilities.persistence.model.load_model", "generated/draugr.torch_utilities.persistence.model.save_model", "generated/draugr.torch_utilities.persistence.model.save_model_and_configuration", "generated/draugr.torch_utilities.persistence.naming", "generated/draugr.torch_utilities.persistence.naming.get_model_hash", "generated/draugr.torch_utilities.persistence.parameters", "generated/draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.load_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "generated/draugr.torch_utilities.sessions", "generated/draugr.torch_utilities.sessions.cache_sessions", "generated/draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "generated/draugr.torch_utilities.sessions.determinism_sessions", "generated/draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "generated/draugr.torch_utilities.sessions.device_sessions", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "generated/draugr.torch_utilities.sessions.jit_sessions", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "generated/draugr.torch_utilities.sessions.model_sessions", "generated/draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "generated/draugr.torch_utilities.sessions.type_sessions", "generated/draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "generated/draugr.torch_utilities.system", "generated/draugr.torch_utilities.system.constants", "generated/draugr.torch_utilities.system.constants.torch_pi", "generated/draugr.torch_utilities.system.data_type", "generated/draugr.torch_utilities.system.data_type.global_torch_dtype", "generated/draugr.torch_utilities.system.data_type.set_global_torch_dtype", "generated/draugr.torch_utilities.system.device", "generated/draugr.torch_utilities.system.device.TorchDeviceEnum", "generated/draugr.torch_utilities.system.device.auto_select_available_cuda_device", "generated/draugr.torch_utilities.system.device.get_gpu_usage_mb", "generated/draugr.torch_utilities.system.device.global_torch_device", "generated/draugr.torch_utilities.system.device.select_cuda_device", "generated/draugr.torch_utilities.system.device.set_global_torch_device", "generated/draugr.torch_utilities.system.device.torch_clean_up", "generated/draugr.torch_utilities.system.info", "generated/draugr.torch_utilities.system.info.cuda_info", "generated/draugr.torch_utilities.system.info.system_info", "generated/draugr.torch_utilities.system.loading", "generated/draugr.torch_utilities.system.loading.default_worker_init_fn", "generated/draugr.torch_utilities.system.loading.global_pin_memory", "generated/draugr.torch_utilities.system.seeding", "generated/draugr.torch_utilities.system.seeding.torch_seed", "generated/draugr.torch_utilities.tensors", "generated/draugr.torch_utilities.tensors.dimension_order", "generated/draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "generated/draugr.torch_utilities.tensors.info", "generated/draugr.torch_utilities.tensors.info.size_of_tensor", "generated/draugr.torch_utilities.tensors.mixins", "generated/draugr.torch_utilities.tensors.mixins.TensoriseMixin", "generated/draugr.torch_utilities.tensors.normalise", "generated/draugr.torch_utilities.tensors.normalise.standardise", "generated/draugr.torch_utilities.tensors.reshaping", "generated/draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "generated/draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "generated/draugr.torch_utilities.tensors.reshaping.safe_concat", "generated/draugr.torch_utilities.tensors.tensor_container", "generated/draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "generated/draugr.torch_utilities.tensors.to_scalar", "generated/draugr.torch_utilities.tensors.to_tensor", "generated/draugr.torch_utilities.tensors.types", "generated/draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "generated/draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "generated/draugr.torch_utilities.writers", "generated/draugr.torch_utilities.writers.mixins", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "generated/draugr.torch_utilities.writers.tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.launcher", "generated/draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "generated/draugr.torch_utilities.writers.torch_module_writer", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "generated/draugr.torch_utilities.writers.visdom", "generated/draugr.torch_utilities.writers.visdom.episode_visual", "generated/draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "generated/draugr.torch_utilities.writers.visdom.plotting", "generated/draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "generated/draugr.torch_utilities.writers.visdom.visdom_writer", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "generated/draugr.tqdm_utilities", "generated/draugr.tqdm_utilities.pooled_progress_bar", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "generated/draugr.tqdm_utilities.progress_bar", "generated/draugr.visualisation", "generated/draugr.visualisation.ggplot_utilities", "generated/draugr.visualisation.matplotlib_utilities", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "generated/draugr.visualisation.matplotlib_utilities.annotate_point", "generated/draugr.visualisation.matplotlib_utilities.decolorise_plot", "generated/draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "generated/draugr.visualisation.matplotlib_utilities.latex_clean_label", "generated/draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "generated/draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "generated/draugr.visualisation.matplotlib_utilities.remove_decoration", "generated/draugr.visualisation.matplotlib_utilities.save_embed_fig", "generated/draugr.visualisation.matplotlib_utilities.use_monochrome_style", "generated/draugr.visualisation.pillow_utilities", "generated/draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "generated/draugr.visualisation.pillow_utilities.np_array_to_pil_img", "generated/draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "generated/draugr.visualisation.pillow_utilities.pil_img_to_np_array", "generated/draugr.visualisation.pillow_utilities.pil_merge_images", "generated/draugr.visualisation.seaborn_utilities", "generated/draugr.visualisation.seaborn_utilities.despine_all", "generated/draugr.visualisation.seaborn_utilities.exponential_moving_average", "generated/draugr.visualisation.seaborn_utilities.set_y_log_scale", "generated/draugr.writers", "generated/draugr.writers.csv_writer", "generated/draugr.writers.csv_writer.CSVWriter", "generated/draugr.writers.databases", "generated/draugr.writers.databases.hdf_writer", "generated/draugr.writers.databases.hdf_writer.HdfWriter", "generated/draugr.writers.databases.sqlite_writer", "generated/draugr.writers.databases.sqlite_writer.SqliteWriter", "generated/draugr.writers.log_writer", "generated/draugr.writers.log_writer.LogWriter", "generated/draugr.writers.mixins", "generated/draugr.writers.mixins.audio_writer_mixin", "generated/draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "generated/draugr.writers.mixins.bar_writer_mixin", "generated/draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "generated/draugr.writers.mixins.embed_writer_mixin", "generated/draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "generated/draugr.writers.mixins.figure_writer_mixin", "generated/draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "generated/draugr.writers.mixins.histogram_writer_mixin", "generated/draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "generated/draugr.writers.mixins.image_writer_mixin", "generated/draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "generated/draugr.writers.mixins.instantiation_writer_mixin", "generated/draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "generated/draugr.writers.mixins.line_writer_mixin", "generated/draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "generated/draugr.writers.mixins.mesh_writer_mixin", "generated/draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "generated/draugr.writers.mixins.scalar_writer_mixin", "generated/draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "generated/draugr.writers.mixins.video_writer_mixin", "generated/draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "generated/draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "generated/draugr.writers.mock_writer", "generated/draugr.writers.mock_writer.MockWriter", "generated/draugr.writers.standard_tags", "generated/draugr.writers.standard_tags.TestingCurves", "generated/draugr.writers.standard_tags.TestingScalars", "generated/draugr.writers.standard_tags.TestingTables", "generated/draugr.writers.standard_tags.TrainingCurves", "generated/draugr.writers.standard_tags.TrainingScalars", "generated/draugr.writers.standard_tags.TrainingTables", "generated/draugr.writers.standard_tags.should_plot_y_log_scale", "generated/draugr.writers.standard_tags.should_smooth_series", "generated/draugr.writers.terminal", "generated/draugr.writers.terminal.console_writer", "generated/draugr.writers.terminal.console_writer.ConsoleWriter", "generated/draugr.writers.terminal.terminal_image_renderer", "generated/draugr.writers.terminal.terminal_image_renderer.entry_point", "generated/draugr.writers.terminal.terminal_image_renderer.get_image", "generated/draugr.writers.terminal.terminal_image_renderer.get_pixel", "generated/draugr.writers.terminal.terminal_image_renderer.render_file", "generated/draugr.writers.terminal.terminal_image_renderer.render_image", "generated/draugr.writers.terminal.terminal_image_renderer.terminalise_image", "generated/draugr.writers.terminal.terminal_plot", "generated/draugr.writers.terminal.terminal_plot_writer", "generated/draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter", "generated/draugr.writers.terminal.terminal_plotter", "generated/draugr.writers.terminal.terminal_utilities", "generated/draugr.writers.terminal.terminal_utilities.scale", "generated/draugr.writers.writer", "generated/draugr.writers.writer.Writer", "generated/draugr.writers.writer.global_writer", "generated/draugr.writers.writer.set_global_writer", "generated/draugr.writers.writer_utilities", "generated/draugr.writers.writer_utilities.metrics", "getting_started", "index"], "filenames": ["generated\\draugr.rst", "generated\\draugr.dist_is_editable.rst", "generated\\draugr.dlib_utilities.rst", "generated\\draugr.dlib_utilities.dlib_utilities.rst", "generated\\draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices.rst", "generated\\draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices.rst", "generated\\draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio.rst", "generated\\draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio.rst", "generated\\draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box.rst", "generated\\draugr.dlib_utilities.dlib_utilities.shape_to_ndarray.rst", "generated\\draugr.dlib_utilities.exclude.rst", "generated\\draugr.dlib_utilities.exclude.flags.rst", "generated\\draugr.dlib_utilities.exclude.flags.TupleFlag.rst", "generated\\draugr.dlib_utilities.facealigner.rst", "generated\\draugr.dlib_utilities.facealigner.align_face.rst", "generated\\draugr.drawers.rst", "generated\\draugr.drawers.drawer.rst", "generated\\draugr.drawers.drawer.Drawer.rst", "generated\\draugr.drawers.mpl_drawers.rst", "generated\\draugr.drawers.mpl_drawers.discrete_scroll_plot.rst", "generated\\draugr.drawers.mpl_drawers.distribution_plot.rst", "generated\\draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot.rst", "generated\\draugr.drawers.mpl_drawers.image_stream_plot.rst", "generated\\draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot.rst", "generated\\draugr.drawers.mpl_drawers.mpldrawer.rst", "generated\\draugr.drawers.mpl_drawers.mpldrawer.MockDrawer.rst", "generated\\draugr.drawers.mpl_drawers.mpldrawer.MplDrawer.rst", "generated\\draugr.drawers.mpl_drawers.series_scroll_plot.rst", "generated\\draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot.rst", "generated\\draugr.drawers.mpl_drawers.spectral.rst", "generated\\draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.rst", "generated\\draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot.rst", "generated\\draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.rst", "generated\\draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot.rst", "generated\\draugr.drawers.opencv_drawers.rst", "generated\\draugr.drawers.opencv_drawers.opencv_image_stream.rst", "generated\\draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream.rst", "generated\\draugr.entry_points.rst", "generated\\draugr.entry_points.cpu_usage_entry_point.rst", "generated\\draugr.entry_points.cpu_usage_entry_point.main.rst", "generated\\draugr.entry_points.tensorboard_entry_point.rst", "generated\\draugr.entry_points.tensorboard_entry_point.main.rst", "generated\\draugr.entry_points.toggle_darkmode.rst", "generated\\draugr.entry_points.toggle_darkmode.main.rst", "generated\\draugr.entry_points.visdom_entry_point.rst", "generated\\draugr.entry_points.visdom_entry_point.main.rst", "generated\\draugr.extensions.rst", "generated\\draugr.extensions.skimage_utilities.rst", "generated\\draugr.extensions.skimage_utilities.rgb_to_grayscale.rst", "generated\\draugr.extensions.sorcery_utilities.rst", "generated\\draugr.extensions.sorcery_utilities.lower_case_assigned_names.rst", "generated\\draugr.extensions.sorcery_utilities.upper_case_assigned_names.rst", "generated\\draugr.ffmpeg_utilities.rst", "generated\\draugr.ffmpeg_utilities.exclude.rst", "generated\\draugr.ffmpeg_utilities.extract.rst", "generated\\draugr.ffmpeg_utilities.extract.extract_frames.rst", "generated\\draugr.ffmpeg_utilities.merge.rst", "generated\\draugr.ffmpeg_utilities.merge.merge_video.rst", "generated\\draugr.ffmpeg_utilities.sequencify.rst", "generated\\draugr.ffmpeg_utilities.sequencify.sequencify_files.rst", "generated\\draugr.ffmpeg_utilities.split.rst", "generated\\draugr.ffmpeg_utilities.split.spilt_video.rst", "generated\\draugr.get_version.rst", "generated\\draugr.jax_utilities.rst", "generated\\draugr.matlab_utilities.rst", "generated\\draugr.metrics.rst", "generated\\draugr.metrics.accumulation.rst", "generated\\draugr.metrics.accumulation.lambda_accumulator.rst", "generated\\draugr.metrics.accumulation.mean_accumulator.rst", "generated\\draugr.metrics.accumulation.total_accumulator.rst", "generated\\draugr.metrics.meters.rst", "generated\\draugr.metrics.meters.AverageMeter.rst", "generated\\draugr.metrics.meters.Meter.rst", "generated\\draugr.metrics.metric_aggregator.rst", "generated\\draugr.metrics.metric_aggregator.MetricAggregator.rst", "generated\\draugr.metrics.metric_aggregator.save_metric.rst", "generated\\draugr.metrics.metric_collection.rst", "generated\\draugr.metrics.metric_collection.MetricCollection.rst", "generated\\draugr.metrics.metric_summary.rst", "generated\\draugr.metrics.metric_summary.MetricSummary.rst", "generated\\draugr.metrics.plotting.rst", "generated\\draugr.multiprocessing_utilities.rst", "generated\\draugr.multiprocessing_utilities.pooled_queue_processor.rst", "generated\\draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase.rst", "generated\\draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor.rst", "generated\\draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask.rst", "generated\\draugr.numpy_utilities.rst", "generated\\draugr.numpy_utilities.channel_transform.rst", "generated\\draugr.numpy_utilities.channel_transform.chw_to_hwc.rst", "generated\\draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint.rst", "generated\\draugr.numpy_utilities.channel_transform.hwc_to_chw.rst", "generated\\draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float.rst", "generated\\draugr.numpy_utilities.datasets.rst", "generated\\draugr.numpy_utilities.datasets.categorical.rst", "generated\\draugr.numpy_utilities.datasets.categorical.deep_category.rst", "generated\\draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset.rst", "generated\\draugr.numpy_utilities.datasets.categorical.flat_category.rst", "generated\\draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset.rst", "generated\\draugr.numpy_utilities.datasets.categorical.shallow_category.rst", "generated\\draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset.rst", "generated\\draugr.numpy_utilities.datasets.defaults.rst", "generated\\draugr.numpy_utilities.datasets.splitting.rst", "generated\\draugr.numpy_utilities.datasets.splitting.SplitEnum.rst", "generated\\draugr.numpy_utilities.datasets.splitting.SplitIndexer.rst", "generated\\draugr.numpy_utilities.datasets.splitting.select_split.rst", "generated\\draugr.numpy_utilities.datasets.splitting.train_valid_test_split.rst", "generated\\draugr.numpy_utilities.manipulation.rst", "generated\\draugr.numpy_utilities.manipulation.MyNdArray.rst", "generated\\draugr.numpy_utilities.manipulation.recursive_flatten_numpy.rst", "generated\\draugr.numpy_utilities.mixing.rst", "generated\\draugr.numpy_utilities.mixing.mix_channels.rst", "generated\\draugr.numpy_utilities.powers.rst", "generated\\draugr.numpy_utilities.powers.next_pow_10_numpy.rst", "generated\\draugr.numpy_utilities.powers.next_pow_2_numpy.rst", "generated\\draugr.numpy_utilities.powers.next_pow_numpy.rst", "generated\\draugr.numpy_utilities.powers.next_power_10_numpy.rst", "generated\\draugr.numpy_utilities.powers.next_power_2_numpy.rst", "generated\\draugr.numpy_utilities.raster_grid_2d_masking.rst", "generated\\draugr.numpy_utilities.raster_grid_2d_masking.circular_mask.rst", "generated\\draugr.numpy_utilities.raster_grid_3d_masking.rst", "generated\\draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask.rst", "generated\\draugr.numpy_utilities.resize.rst", "generated\\draugr.numpy_utilities.resize.resize_array.rst", "generated\\draugr.numpy_utilities.sampling.rst", "generated\\draugr.numpy_utilities.sampling.get_sampler.rst", "generated\\draugr.numpy_utilities.signal_utilities.rst", "generated\\draugr.numpy_utilities.signal_utilities.padding.rst", "generated\\draugr.numpy_utilities.signal_utilities.padding.zero_pad_to.rst", "generated\\draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_mixing.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_projection.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_projection.heaviside.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_statistics.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square.rst", "generated\\draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square.rst", "generated\\draugr.numpy_utilities.signal_utilities.truncation.rst", "generated\\draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate.rst", "generated\\draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch.rst", "generated\\draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2.rst", "generated\\draugr.opencv_utilities.rst", "generated\\draugr.opencv_utilities.bounding_boxes.rst", "generated\\draugr.opencv_utilities.bounding_boxes.boxes_2d.rst", "generated\\draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh.rst", "generated\\draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax.rst", "generated\\draugr.opencv_utilities.bounding_boxes.evaluation.rst", "generated\\draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy.rst", "generated\\draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy.rst", "generated\\draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes.rst", "generated\\draugr.opencv_utilities.color_space.rst", "generated\\draugr.opencv_utilities.color_space.clean.rst", "generated\\draugr.opencv_utilities.color_space.clean.CleanUpMethod.rst", "generated\\draugr.opencv_utilities.color_space.clean.clean_up.rst", "generated\\draugr.opencv_utilities.color_space.color.rst", "generated\\draugr.opencv_utilities.color_space.color.is_singular_channel.rst", "generated\\draugr.opencv_utilities.color_space.color.num_channels.rst", "generated\\draugr.opencv_utilities.color_space.color.to_color.rst", "generated\\draugr.opencv_utilities.color_space.edge.rst", "generated\\draugr.opencv_utilities.color_space.edge.CannyApertureSize.rst", "generated\\draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum.rst", "generated\\draugr.opencv_utilities.color_space.edge.to_edge.rst", "generated\\draugr.opencv_utilities.color_space.gamma.rst", "generated\\draugr.opencv_utilities.color_space.gamma.gamma_correct_byte.rst", "generated\\draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte.rst", "generated\\draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte.rst", "generated\\draugr.opencv_utilities.color_space.gamma.linear_correct_byte.rst", "generated\\draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte.rst", "generated\\draugr.opencv_utilities.color_space.gray.rst", "generated\\draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum.rst", "generated\\draugr.opencv_utilities.color_space.gray.to_gray.rst", "generated\\draugr.opencv_utilities.color_space.noise.rst", "generated\\draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum.rst", "generated\\draugr.opencv_utilities.color_space.noise.noise_filter.rst", "generated\\draugr.opencv_utilities.color_space.threshold.rst", "generated\\draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum.rst", "generated\\draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask.rst", "generated\\draugr.opencv_utilities.color_space.threshold.threshold_channel.rst", "generated\\draugr.opencv_utilities.drawing.rst", "generated\\draugr.opencv_utilities.drawing.draw_boxes.rst", "generated\\draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes.rst", "generated\\draugr.opencv_utilities.drawing.draw_boxes.draw_single_box.rst", "generated\\draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect.rst", "generated\\draugr.opencv_utilities.drawing.masks.rst", "generated\\draugr.opencv_utilities.drawing.masks.gauss_circles.rst", "generated\\draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox.rst", "generated\\draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1.rst", "generated\\draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2.rst", "generated\\draugr.opencv_utilities.drawing.masks.segment_ellipse.rst", "generated\\draugr.opencv_utilities.drawing.opencv_draw.rst", "generated\\draugr.opencv_utilities.drawing.opencv_draw.draw_masks.rst", "generated\\draugr.opencv_utilities.drawing.opencv_draw.find_contours.rst", "generated\\draugr.opencv_utilities.drawing.opencv_drawing_utilities.rst", "generated\\draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix.rst", "generated\\draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis.rst", "generated\\draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube.rst", "generated\\draugr.opencv_utilities.namespaces.rst", "generated\\draugr.opencv_utilities.namespaces.color_conversion_enum.rst", "generated\\draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.rst", "generated\\draugr.opencv_utilities.namespaces.enums.BorderTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.ComparisonEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.DataTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.FontEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.HoughModeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.KmeansEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.LineTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.MorphShapeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.MorphTypeEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.MouseEventEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes.rst", "generated\\draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum.rst", "generated\\draugr.opencv_utilities.namespaces.enums.WindowFlagEnum.rst", "generated\\draugr.opencv_utilities.namespaces.flags.rst", "generated\\draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum.rst", "generated\\draugr.opencv_utilities.namespaces.flags.MouseEventFlag.rst", "generated\\draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag.rst", "generated\\draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag.rst", "generated\\draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag.rst", "generated\\draugr.opencv_utilities.raster_sequences.rst", "generated\\draugr.opencv_utilities.raster_sequences.async_video_stream.rst", "generated\\draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream.rst", "generated\\draugr.opencv_utilities.raster_sequences.frame_annotation.rst", "generated\\draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps.rst", "generated\\draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence.rst", "generated\\draugr.opencv_utilities.raster_sequences.frames.rst", "generated\\draugr.opencv_utilities.raster_sequences.frames.frame_generator.rst", "generated\\draugr.opencv_utilities.transformation.rst", "generated\\draugr.opencv_utilities.transformation.cropping.rst", "generated\\draugr.opencv_utilities.transformation.cropping.circle_crop.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.Lambda.rst", "generated\\draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans.rst", "generated\\draugr.opencv_utilities.transformation.resize.rst", "generated\\draugr.opencv_utilities.transformation.resize.InterpolationEnum.rst", "generated\\draugr.opencv_utilities.transformation.resize.cv2_resize.rst", "generated\\draugr.opencv_utilities.windows.rst", "generated\\draugr.opencv_utilities.windows.color_picker.rst", "generated\\draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker.rst", "generated\\draugr.opencv_utilities.windows.default.rst", "generated\\draugr.opencv_utilities.windows.default.ExtensionEnum.rst", "generated\\draugr.opencv_utilities.windows.default.match_return_code.rst", "generated\\draugr.opencv_utilities.windows.elements.rst", "generated\\draugr.opencv_utilities.windows.elements.trackbar.rst", "generated\\draugr.opencv_utilities.windows.elements.trackbar.add_trackbar.rst", "generated\\draugr.opencv_utilities.windows.hough_circles.rst", "generated\\draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles.rst", "generated\\draugr.opencv_utilities.windows.image.rst", "generated\\draugr.opencv_utilities.windows.image.show_image.rst", "generated\\draugr.os_utilities.rst", "generated\\draugr.os_utilities.cuda_device.rst", "generated\\draugr.os_utilities.cuda_device.DeviceOrderEnum.rst", "generated\\draugr.os_utilities.cuda_device.set_cuda_device_order.rst", "generated\\draugr.os_utilities.cuda_device.set_cuda_visible_devices.rst", "generated\\draugr.os_utilities.linux_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.gnome_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.rst", "generated\\draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active.rst", "generated\\draugr.os_utilities.linux_utilities.gtk_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.rst", "generated\\draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings.rst", "generated\\draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.rst", "generated\\draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences.rst", "generated\\draugr.os_utilities.linux_utilities.mac_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.mac_utilities.dark_mode.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service.rst", "generated\\draugr.os_utilities.linux_utilities.systemd_utilities.service_template.rst", "generated\\draugr.os_utilities.linux_utilities.user_utilities.rst", "generated\\draugr.os_utilities.linux_utilities.user_utilities.change_home_dir.rst", "generated\\draugr.os_utilities.linux_utilities.user_utilities.change_passwd.rst", "generated\\draugr.os_utilities.linux_utilities.user_utilities.make_user.rst", "generated\\draugr.os_utilities.linux_utilities.user_utilities.remove_user.rst", "generated\\draugr.os_utilities.mac_utilities.rst", "generated\\draugr.os_utilities.platform_selection.rst", "generated\\draugr.os_utilities.platform_selection.get_backend_module.rst", "generated\\draugr.os_utilities.resource_utilities.rst", "generated\\draugr.os_utilities.resource_utilities.all.rst", "generated\\draugr.os_utilities.resource_utilities.all.get_num_instances.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.WorkerSession.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.release_worker_cores.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.request_worker_cores.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.worker_cores_available.rst", "generated\\draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use.rst", "generated\\draugr.os_utilities.resource_utilities.gpu.rst", "generated\\draugr.os_utilities.resource_utilities.ram.rst", "generated\\draugr.os_utilities.resource_utilities.ram.num_instance_no_paging.rst", "generated\\draugr.os_utilities.screen_resolution.rst", "generated\\draugr.os_utilities.screen_resolution.get_screen_resolution.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_gtk.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_mac.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_pygame.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_tk.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_win.rst", "generated\\draugr.os_utilities.screen_resolution.screen_res_xlib.rst", "generated\\draugr.os_utilities.service.rst", "generated\\draugr.os_utilities.service.add_service.rst", "generated\\draugr.os_utilities.service.remove_service.rst", "generated\\draugr.os_utilities.windows_utilities.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.FailSafeException.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.HardwareInput.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input_I.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.KeyBdInput.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.MouseInput.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.POINT.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.click.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.doubleClick.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.failSafeCheck.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyDown.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyUp.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.leftClick.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.middleClick.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseDown.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseUp.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.move.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveRel.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveTo.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.position.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.press.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.rightClick.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.size.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.tripleClick.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.typewrite.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.direct_input.write.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.edge.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.edge.main.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.firefox.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.firefox.main.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.main.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.main.main.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.mario.rst", "generated\\draugr.os_utilities.windows_utilities.exclude.communication.mario.main.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.api.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.api.delete_task.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.api.new_user_logon_execute_task.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.api.set_task_activity.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type.TaskActionTypeEnum.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation.TaskCreationEnum.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type.TaskLogonTypeEnum.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger.rst", "generated\\draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger.TaskTriggerEnum.rst", "generated\\draugr.os_utilities.windows_utilities.win32.rst", "generated\\draugr.os_utilities.windows_utilities.win32.api.rst", "generated\\draugr.os_utilities.windows_utilities.win32.api.press_key.rst", "generated\\draugr.os_utilities.windows_utilities.win32.api.press_key_foreground.rst", "generated\\draugr.os_utilities.windows_utilities.win32.gui.rst", "generated\\draugr.os_utilities.windows_utilities.win32.gui.find_all_windows.rst", "generated\\draugr.os_utilities.windows_utilities.win32.gui.get_inner_windows.rst", "generated\\draugr.os_utilities.windows_utilities.win32.gui.list_window_names.rst", "generated\\draugr.os_utilities.windows_utilities.windows_settings.rst", "generated\\draugr.os_utilities.windows_utilities.windows_settings.WindowsSettings.rst", "generated\\draugr.pandas_utilities.rst", "generated\\draugr.pandas_utilities.formatting.rst", "generated\\draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter.rst", "generated\\draugr.pandas_utilities.from_dict.rst", "generated\\draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df.rst", "generated\\draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df.rst", "generated\\draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df.rst", "generated\\draugr.pandas_utilities.latex_mean_std.rst", "generated\\draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex.rst", "generated\\draugr.pandas_utilities.latex_mean_std.pandas_mean_std.rst", "generated\\draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str.rst", "generated\\draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean.rst", "generated\\draugr.pandas_utilities.misc_utilities.rst", "generated\\draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum.rst", "generated\\draugr.pandas_utilities.misc_utilities.ExportMethodEnum.rst", "generated\\draugr.pandas_utilities.misc_utilities.duplicate_columns.rst", "generated\\draugr.pandas_utilities.multi_index_utilities.rst", "generated\\draugr.pandas_utilities.multi_index_utilities.add_index_level.rst", "generated\\draugr.pandas_utilities.styling.rst", "generated\\draugr.pandas_utilities.styling.AttrEnum.rst", "generated\\draugr.pandas_utilities.styling.ColorEnum.rst", "generated\\draugr.pandas_utilities.styling.NDFrameExtremeEnum.rst", "generated\\draugr.pandas_utilities.styling.color_highlight_extreme.rst", "generated\\draugr.pandas_utilities.styling.color_negative_red.rst", "generated\\draugr.pygame_utilities.rst", "generated\\draugr.pygame_utilities.screen.rst", "generated\\draugr.pygame_utilities.screen.get_screen_resolution.rst", "generated\\draugr.python_utilities.rst", "generated\\draugr.python_utilities.broadcasting.rst", "generated\\draugr.python_utilities.broadcasting.BroadcastNone.rst", "generated\\draugr.python_utilities.exclude.rst", "generated\\draugr.python_utilities.exclude.packages.rst", "generated\\draugr.python_utilities.exclude.packages.a.rst", "generated\\draugr.python_utilities.exclude.packages.b.rst", "generated\\draugr.python_utilities.exclude.packages.c.rst", "generated\\draugr.python_utilities.exclude.worker.rst", "generated\\draugr.python_utilities.exclude.worker.main.rst", "generated\\draugr.python_utilities.exclude.worker.spawn.rst", "generated\\draugr.python_utilities.function_wrappers.rst", "generated\\draugr.python_utilities.function_wrappers.max_frequency.rst", "generated\\draugr.python_utilities.function_wrappers.min_interval_wrapper.rst", "generated\\draugr.python_utilities.function_wrappers.min_interval_wrapper_global.rst", "generated\\draugr.python_utilities.function_wrappers.wrap_args.rst", "generated\\draugr.python_utilities.generators.rst", "generated\\draugr.python_utilities.generators.batching_generator.rst", "generated\\draugr.python_utilities.generators.batching_generator.batch_generator.rst", "generated\\draugr.python_utilities.generators.batching_generator.random_batches.rst", "generated\\draugr.python_utilities.generators.batching_generator.shuffled_batches.rst", "generated\\draugr.python_utilities.generators.batching_generator.sized_batch.rst", "generated\\draugr.python_utilities.generators.recycling_generator.rst", "generated\\draugr.python_utilities.generators.recycling_generator.batched_recycle.rst", "generated\\draugr.python_utilities.generators.recycling_generator.recycle.rst", "generated\\draugr.python_utilities.http.rst", "generated\\draugr.python_utilities.http.HttpMethodEnum.rst", "generated\\draugr.python_utilities.sockets.rst", "generated\\draugr.python_utilities.sockets.find_unclaimed_port.rst", "generated\\draugr.python_utilities.sockets.get_host_ip.rst", "generated\\draugr.python_utilities.sockets.is_port_in_use.rst", "generated\\draugr.python_utilities.torch_like_channel_transformation.rst", "generated\\draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw.rst", "generated\\draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc.rst", "generated\\draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc.rst", "generated\\draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw.rst", "generated\\draugr.random_utilities.rst", "generated\\draugr.random_utilities.seeding.rst", "generated\\draugr.random_utilities.seeding.seed_stack.rst", "generated\\draugr.scipy_utilities.rst", "generated\\draugr.scipy_utilities.scipy_utilities.rst", "generated\\draugr.scipy_utilities.scipy_utilities.read_normalised_wave.rst", "generated\\draugr.scipy_utilities.scipy_utilities.write_normalised_wave.rst", "generated\\draugr.scipy_utilities.signal_processing.rst", "generated\\draugr.scipy_utilities.subsampling.rst", "generated\\draugr.scipy_utilities.subsampling.fft_subsample.rst", "generated\\draugr.scipy_utilities.subsampling.fir_subsample.rst", "generated\\draugr.scipy_utilities.subsampling.mag_decimation_subsample.rst", "generated\\draugr.scipy_utilities.subsampling.max_decimation_subsample.rst", "generated\\draugr.scipy_utilities.subsampling.min_decimation_subsample.rst", "generated\\draugr.stopping.rst", "generated\\draugr.stopping.stopping_key.rst", "generated\\draugr.stopping.stopping_key.CaptureEarlyStop.rst", "generated\\draugr.stopping.stopping_key.add_early_stopping_key_combination.rst", "generated\\draugr.tensorboard_utilities.rst", "generated\\draugr.tensorboard_utilities.experimental.rst", "generated\\draugr.tensorboard_utilities.experimental.confusion_matrix.rst", "generated\\draugr.tensorboard_utilities.experimental.pretty_cf.rst", "generated\\draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix.rst", "generated\\draugr.tensorboard_utilities.exporting.rst", "generated\\draugr.tensorboard_utilities.exporting.db_export.rst", "generated\\draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase.rst", "generated\\draugr.tensorboard_utilities.exporting.event_export.rst", "generated\\draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter.rst", "generated\\draugr.tensorboard_utilities.exporting.file_export.rst", "generated\\draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile.rst", "generated\\draugr.threading_utilities.rst", "generated\\draugr.threading_utilities.exclude.rst", "generated\\draugr.threading_utilities.skipper.rst", "generated\\draugr.threading_utilities.skipper.Skipper.rst", "generated\\draugr.torch_utilities.rst", "generated\\draugr.torch_utilities.architectures.rst", "generated\\draugr.torch_utilities.architectures.architecture.rst", "generated\\draugr.torch_utilities.architectures.architecture.Architecture.rst", "generated\\draugr.torch_utilities.architectures.distributional.rst", "generated\\draugr.torch_utilities.architectures.distributional.categorical.rst", "generated\\draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP.rst", "generated\\draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP.rst", "generated\\draugr.torch_utilities.architectures.distributional.normal.rst", "generated\\draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP.rst", "generated\\draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP.rst", "generated\\draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP.rst", "generated\\draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP.rst", "generated\\draugr.torch_utilities.architectures.experimental.rst", "generated\\draugr.torch_utilities.architectures.experimental.heads.rst", "generated\\draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP.rst", "generated\\draugr.torch_utilities.architectures.experimental.recurrent.rst", "generated\\draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP.rst", "generated\\draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase.rst", "generated\\draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP.rst", "generated\\draugr.torch_utilities.architectures.mlp.rst", "generated\\draugr.torch_utilities.architectures.mlp.MLP.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.concatination.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.disjunction.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.fourier.rst", "generated\\draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP.rst", "generated\\draugr.torch_utilities.datasets.rst", "generated\\draugr.torch_utilities.datasets.non_sequential_dataset.rst", "generated\\draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset.rst", "generated\\draugr.torch_utilities.datasets.random_dataset.rst", "generated\\draugr.torch_utilities.datasets.random_dataset.RandomDataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.rst", "generated\\draugr.torch_utilities.datasets.supervised.categorical_dataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.supervised_dataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.vision_datasets.rst", "generated\\draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.rst", "generated\\draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder.rst", "generated\\draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder.rst", "generated\\draugr.torch_utilities.distributions.rst", "generated\\draugr.torch_utilities.distributions.entropy.rst", "generated\\draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian.rst", "generated\\draugr.torch_utilities.distributions.entropy.log_shannon_entropy.rst", "generated\\draugr.torch_utilities.distributions.entropy.normal_entropy.rst", "generated\\draugr.torch_utilities.distributions.entropy.normal_log_density.rst", "generated\\draugr.torch_utilities.distributions.entropy.shannon_entropy.rst", "generated\\draugr.torch_utilities.evaluation.rst", "generated\\draugr.torch_utilities.evaluation.classification.rst", "generated\\draugr.torch_utilities.evaluation.classification.find_n_misclassified.rst", "generated\\draugr.torch_utilities.evaluation.cross_validation.rst", "generated\\draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator.rst", "generated\\draugr.torch_utilities.exporting.rst", "generated\\draugr.torch_utilities.exporting.latex_tables.rst", "generated\\draugr.torch_utilities.exporting.latex_tables.adasdassijd.rst", "generated\\draugr.torch_utilities.exporting.latex_tables.asijd.rst", "generated\\draugr.torch_utilities.exporting.latex_tables.iasjduh.rst", "generated\\draugr.torch_utilities.exporting.summary.rst", "generated\\draugr.torch_utilities.exporting.summary.to_latex_table.rst", "generated\\draugr.torch_utilities.generators.rst", "generated\\draugr.torch_utilities.generators.batching.rst", "generated\\draugr.torch_utilities.generators.batching.LimitedBatchResampler.rst", "generated\\draugr.torch_utilities.generators.to_tensor_generator.rst", "generated\\draugr.torch_utilities.images.rst", "generated\\draugr.torch_utilities.images.channel_transform.rst", "generated\\draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor.rst", "generated\\draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch.rst", "generated\\draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor.rst", "generated\\draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch.rst", "generated\\draugr.torch_utilities.images.conversion.rst", "generated\\draugr.torch_utilities.images.conversion.quick_to_pil_image.rst", "generated\\draugr.torch_utilities.opencv.rst", "generated\\draugr.torch_utilities.opencv.torch_conversion.rst", "generated\\draugr.torch_utilities.opencv.torch_conversion.CV2ToImage.rst", "generated\\draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor.rst", "generated\\draugr.torch_utilities.operations.rst", "generated\\draugr.torch_utilities.operations.boxes_2d.rst", "generated\\draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch.rst", "generated\\draugr.torch_utilities.operations.enums.rst", "generated\\draugr.torch_utilities.operations.enums.ReductionMethodEnum.rst", "generated\\draugr.torch_utilities.operations.sizes.rst", "generated\\draugr.torch_utilities.operations.sizes.conv2d.rst", "generated\\draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape.rst", "generated\\draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size.rst", "generated\\draugr.torch_utilities.operations.sizes.max_pool2d.rst", "generated\\draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape.rst", "generated\\draugr.torch_utilities.operations.sizes.pad2d.rst", "generated\\draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape.rst", "generated\\draugr.torch_utilities.operations.sizes.transp_conv2d.rst", "generated\\draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape.rst", "generated\\draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.batch_transforms.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip.rst", "generated\\draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor.rst", "generated\\draugr.torch_utilities.optimisation.rst", "generated\\draugr.torch_utilities.optimisation.debugging.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.checking.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.flow.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.guided.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU.rst", "generated\\draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel.rst", "generated\\draugr.torch_utilities.optimisation.debugging.layer_fetching.rst", "generated\\draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter.rst", "generated\\draugr.torch_utilities.optimisation.debugging.opt_verification.rst", "generated\\draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch.rst", "generated\\draugr.torch_utilities.optimisation.parameters.rst", "generated\\draugr.torch_utilities.optimisation.parameters.freeze_parameters.rst", "generated\\draugr.torch_utilities.optimisation.parameters.frozen_parameters.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.lr_scheduler.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.schedulers.rst", "generated\\draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler.rst", "generated\\draugr.torch_utilities.optimisation.stopping.rst", "generated\\draugr.torch_utilities.optimisation.stopping.overfitting.rst", "generated\\draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector.rst", "generated\\draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector.rst", "generated\\draugr.torch_utilities.optimisation.updates.rst", "generated\\draugr.torch_utilities.optimisation.updates.copying.rst", "generated\\draugr.torch_utilities.optimisation.updates.copying.copy_parameters.rst", "generated\\draugr.torch_utilities.optimisation.updates.copying.copy_state.rst", "generated\\draugr.torch_utilities.optimisation.updates.soft_update.rst", "generated\\draugr.torch_utilities.persistence.rst", "generated\\draugr.torch_utilities.persistence.checkpoint.rst", "generated\\draugr.torch_utilities.persistence.checkpoint.load_checkpoint.rst", "generated\\draugr.torch_utilities.persistence.checkpoint.save_checkpoint.rst", "generated\\draugr.torch_utilities.persistence.config.rst", "generated\\draugr.torch_utilities.persistence.config.ensure_directory_exist.rst", "generated\\draugr.torch_utilities.persistence.config.save_config.rst", "generated\\draugr.torch_utilities.persistence.model.rst", "generated\\draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu.rst", "generated\\draugr.torch_utilities.persistence.model.load_latest_model.rst", "generated\\draugr.torch_utilities.persistence.model.load_model.rst", "generated\\draugr.torch_utilities.persistence.model.save_model.rst", "generated\\draugr.torch_utilities.persistence.model.save_model_and_configuration.rst", "generated\\draugr.torch_utilities.persistence.naming.rst", "generated\\draugr.torch_utilities.persistence.naming.get_model_hash.rst", "generated\\draugr.torch_utilities.persistence.parameters.rst", "generated\\draugr.torch_utilities.persistence.parameters.load_latest_model_parameters.rst", "generated\\draugr.torch_utilities.persistence.parameters.load_model_parameters.rst", "generated\\draugr.torch_utilities.persistence.parameters.save_model_parameters.rst", "generated\\draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration.rst", "generated\\draugr.torch_utilities.sessions.rst", "generated\\draugr.torch_utilities.sessions.cache_sessions.rst", "generated\\draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession.rst", "generated\\draugr.torch_utilities.sessions.determinism_sessions.rst", "generated\\draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession.rst", "generated\\draugr.torch_utilities.sessions.device_sessions.rst", "generated\\draugr.torch_utilities.sessions.device_sessions.TorchCpuSession.rst", "generated\\draugr.torch_utilities.sessions.device_sessions.TorchCudaSession.rst", "generated\\draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession.rst", "generated\\draugr.torch_utilities.sessions.jit_sessions.rst", "generated\\draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession.rst", "generated\\draugr.torch_utilities.sessions.jit_sessions.TorchJitSession.rst", "generated\\draugr.torch_utilities.sessions.model_sessions.rst", "generated\\draugr.torch_utilities.sessions.model_sessions.TorchEvalSession.rst", "generated\\draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession.rst", "generated\\draugr.torch_utilities.sessions.model_sessions.TorchTrainSession.rst", "generated\\draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession.rst", "generated\\draugr.torch_utilities.sessions.type_sessions.rst", "generated\\draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession.rst", "generated\\draugr.torch_utilities.system.rst", "generated\\draugr.torch_utilities.system.constants.rst", "generated\\draugr.torch_utilities.system.constants.torch_pi.rst", "generated\\draugr.torch_utilities.system.data_type.rst", "generated\\draugr.torch_utilities.system.data_type.global_torch_dtype.rst", "generated\\draugr.torch_utilities.system.data_type.set_global_torch_dtype.rst", "generated\\draugr.torch_utilities.system.device.rst", "generated\\draugr.torch_utilities.system.device.TorchDeviceEnum.rst", "generated\\draugr.torch_utilities.system.device.auto_select_available_cuda_device.rst", "generated\\draugr.torch_utilities.system.device.get_gpu_usage_mb.rst", "generated\\draugr.torch_utilities.system.device.global_torch_device.rst", "generated\\draugr.torch_utilities.system.device.select_cuda_device.rst", "generated\\draugr.torch_utilities.system.device.set_global_torch_device.rst", "generated\\draugr.torch_utilities.system.device.torch_clean_up.rst", "generated\\draugr.torch_utilities.system.info.rst", "generated\\draugr.torch_utilities.system.info.cuda_info.rst", "generated\\draugr.torch_utilities.system.info.system_info.rst", "generated\\draugr.torch_utilities.system.loading.rst", "generated\\draugr.torch_utilities.system.loading.default_worker_init_fn.rst", "generated\\draugr.torch_utilities.system.loading.global_pin_memory.rst", "generated\\draugr.torch_utilities.system.seeding.rst", "generated\\draugr.torch_utilities.system.seeding.torch_seed.rst", "generated\\draugr.torch_utilities.tensors.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor.rst", "generated\\draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor.rst", "generated\\draugr.torch_utilities.tensors.info.rst", "generated\\draugr.torch_utilities.tensors.info.size_of_tensor.rst", "generated\\draugr.torch_utilities.tensors.mixins.rst", "generated\\draugr.torch_utilities.tensors.mixins.TensoriseMixin.rst", "generated\\draugr.torch_utilities.tensors.normalise.rst", "generated\\draugr.torch_utilities.tensors.normalise.standardise.rst", "generated\\draugr.torch_utilities.tensors.reshaping.rst", "generated\\draugr.torch_utilities.tensors.reshaping.flatten_keep_batch.rst", "generated\\draugr.torch_utilities.tensors.reshaping.flatten_tn_dim.rst", "generated\\draugr.torch_utilities.tensors.reshaping.safe_concat.rst", "generated\\draugr.torch_utilities.tensors.tensor_container.rst", "generated\\draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple.rst", "generated\\draugr.torch_utilities.tensors.to_scalar.rst", "generated\\draugr.torch_utilities.tensors.to_tensor.rst", "generated\\draugr.torch_utilities.tensors.types.rst", "generated\\draugr.torch_utilities.tensors.types.numpy_to_torch_dtype.rst", "generated\\draugr.torch_utilities.tensors.types.torch_to_numpy_dtype.rst", "generated\\draugr.torch_utilities.writers.rst", "generated\\draugr.torch_utilities.writers.mixins.rst", "generated\\draugr.torch_utilities.writers.mixins.graph_writer_mixin.rst", "generated\\draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin.rst", "generated\\draugr.torch_utilities.writers.tensorboard.rst", "generated\\draugr.torch_utilities.writers.tensorboard.launcher.rst", "generated\\draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard.rst", "generated\\draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.rst", "generated\\draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW.rst", "generated\\draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.module_writer_hook.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.rst", "generated\\draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms.rst", "generated\\draugr.torch_utilities.writers.visdom.rst", "generated\\draugr.torch_utilities.writers.visdom.episode_visual.rst", "generated\\draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser.rst", "generated\\draugr.torch_utilities.writers.visdom.plotting.rst", "generated\\draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats.rst", "generated\\draugr.torch_utilities.writers.visdom.visdom_writer.rst", "generated\\draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter.rst", "generated\\draugr.tqdm_utilities.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.parallel_imap.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.parallel_map.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.parallel_umap.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.sequential_imap.rst", "generated\\draugr.tqdm_utilities.pooled_progress_bar.sequential_map.rst", "generated\\draugr.tqdm_utilities.progress_bar.rst", "generated\\draugr.visualisation.rst", "generated\\draugr.visualisation.ggplot_utilities.rst", "generated\\draugr.visualisation.matplotlib_utilities.rst", "generated\\draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment.rst", "generated\\draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment.rst", "generated\\draugr.visualisation.matplotlib_utilities.annotate_point.rst", "generated\\draugr.visualisation.matplotlib_utilities.decolorise_plot.rst", "generated\\draugr.visualisation.matplotlib_utilities.denormalise_minusoneone.rst", "generated\\draugr.visualisation.matplotlib_utilities.latex_clean_label.rst", "generated\\draugr.visualisation.matplotlib_utilities.make_errorbar_legend.rst", "generated\\draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box.rst", "generated\\draugr.visualisation.matplotlib_utilities.remove_decoration.rst", "generated\\draugr.visualisation.matplotlib_utilities.save_embed_fig.rst", "generated\\draugr.visualisation.matplotlib_utilities.use_monochrome_style.rst", "generated\\draugr.visualisation.pillow_utilities.rst", "generated\\draugr.visualisation.pillow_utilities.byte_array_to_pil_image.rst", "generated\\draugr.visualisation.pillow_utilities.np_array_to_pil_img.rst", "generated\\draugr.visualisation.pillow_utilities.pil_image_to_byte_array.rst", "generated\\draugr.visualisation.pillow_utilities.pil_img_to_np_array.rst", "generated\\draugr.visualisation.pillow_utilities.pil_merge_images.rst", "generated\\draugr.visualisation.seaborn_utilities.rst", "generated\\draugr.visualisation.seaborn_utilities.despine_all.rst", "generated\\draugr.visualisation.seaborn_utilities.exponential_moving_average.rst", "generated\\draugr.visualisation.seaborn_utilities.set_y_log_scale.rst", "generated\\draugr.writers.rst", "generated\\draugr.writers.csv_writer.rst", "generated\\draugr.writers.csv_writer.CSVWriter.rst", "generated\\draugr.writers.databases.rst", "generated\\draugr.writers.databases.hdf_writer.rst", "generated\\draugr.writers.databases.hdf_writer.HdfWriter.rst", "generated\\draugr.writers.databases.sqlite_writer.rst", "generated\\draugr.writers.databases.sqlite_writer.SqliteWriter.rst", "generated\\draugr.writers.log_writer.rst", "generated\\draugr.writers.log_writer.LogWriter.rst", "generated\\draugr.writers.mixins.rst", "generated\\draugr.writers.mixins.audio_writer_mixin.rst", "generated\\draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin.rst", "generated\\draugr.writers.mixins.bar_writer_mixin.rst", "generated\\draugr.writers.mixins.bar_writer_mixin.BarWriterMixin.rst", "generated\\draugr.writers.mixins.embed_writer_mixin.rst", "generated\\draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin.rst", "generated\\draugr.writers.mixins.figure_writer_mixin.rst", "generated\\draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin.rst", "generated\\draugr.writers.mixins.histogram_writer_mixin.rst", "generated\\draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin.rst", "generated\\draugr.writers.mixins.image_writer_mixin.rst", "generated\\draugr.writers.mixins.image_writer_mixin.ImageWriterMixin.rst", "generated\\draugr.writers.mixins.instantiation_writer_mixin.rst", "generated\\draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin.rst", "generated\\draugr.writers.mixins.line_writer_mixin.rst", "generated\\draugr.writers.mixins.line_writer_mixin.LineWriterMixin.rst", "generated\\draugr.writers.mixins.mesh_writer_mixin.rst", "generated\\draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin.rst", "generated\\draugr.writers.mixins.precision_recall_writer_mixin.rst", "generated\\draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin.rst", "generated\\draugr.writers.mixins.scalar_writer_mixin.rst", "generated\\draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin.rst", "generated\\draugr.writers.mixins.spectrogram_writer_mixin.rst", "generated\\draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin.rst", "generated\\draugr.writers.mixins.video_writer_mixin.rst", "generated\\draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum.rst", "generated\\draugr.writers.mixins.video_writer_mixin.VideoWriterMixin.rst", "generated\\draugr.writers.mock_writer.rst", "generated\\draugr.writers.mock_writer.MockWriter.rst", "generated\\draugr.writers.standard_tags.rst", "generated\\draugr.writers.standard_tags.TestingCurves.rst", "generated\\draugr.writers.standard_tags.TestingScalars.rst", "generated\\draugr.writers.standard_tags.TestingTables.rst", "generated\\draugr.writers.standard_tags.TrainingCurves.rst", "generated\\draugr.writers.standard_tags.TrainingScalars.rst", "generated\\draugr.writers.standard_tags.TrainingTables.rst", "generated\\draugr.writers.standard_tags.should_plot_y_log_scale.rst", "generated\\draugr.writers.standard_tags.should_smooth_series.rst", "generated\\draugr.writers.terminal.rst", "generated\\draugr.writers.terminal.console_writer.rst", "generated\\draugr.writers.terminal.console_writer.ConsoleWriter.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.entry_point.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.get_image.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.get_pixel.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.render_file.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.render_image.rst", "generated\\draugr.writers.terminal.terminal_image_renderer.terminalise_image.rst", "generated\\draugr.writers.terminal.terminal_plot.rst", "generated\\draugr.writers.terminal.terminal_plot_writer.rst", "generated\\draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter.rst", "generated\\draugr.writers.terminal.terminal_plotter.rst", "generated\\draugr.writers.terminal.terminal_utilities.rst", "generated\\draugr.writers.terminal.terminal_utilities.scale.rst", "generated\\draugr.writers.writer.rst", "generated\\draugr.writers.writer.Writer.rst", "generated\\draugr.writers.writer.global_writer.rst", "generated\\draugr.writers.writer.set_global_writer.rst", "generated\\draugr.writers.writer_utilities.rst", "generated\\draugr.writers.writer_utilities.metrics.rst", "getting_started.rst", "index.rst"], "titles": ["draugr", "draugr.dist_is_editable", "draugr.dlib_utilities", "draugr.dlib_utilities.dlib_utilities", "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "draugr.dlib_utilities.exclude", "draugr.dlib_utilities.exclude.flags", "draugr.dlib_utilities.exclude.flags.TupleFlag", "draugr.dlib_utilities.facealigner", "draugr.dlib_utilities.facealigner.align_face", "draugr.drawers", "draugr.drawers.drawer", "draugr.drawers.drawer.Drawer", "draugr.drawers.mpl_drawers", "draugr.drawers.mpl_drawers.discrete_scroll_plot", "draugr.drawers.mpl_drawers.distribution_plot", "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "draugr.drawers.mpl_drawers.image_stream_plot", "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "draugr.drawers.mpl_drawers.mpldrawer", "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "draugr.drawers.mpl_drawers.series_scroll_plot", "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "draugr.drawers.mpl_drawers.spectral", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "draugr.drawers.opencv_drawers", "draugr.drawers.opencv_drawers.opencv_image_stream", "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "draugr.entry_points", "draugr.entry_points.cpu_usage_entry_point", "draugr.entry_points.cpu_usage_entry_point.main", "draugr.entry_points.tensorboard_entry_point", "draugr.entry_points.tensorboard_entry_point.main", "draugr.entry_points.toggle_darkmode", "draugr.entry_points.toggle_darkmode.main", "draugr.entry_points.visdom_entry_point", "draugr.entry_points.visdom_entry_point.main", "draugr.extensions", "draugr.extensions.skimage_utilities", "draugr.extensions.skimage_utilities.rgb_to_grayscale", "draugr.extensions.sorcery_utilities", "draugr.extensions.sorcery_utilities.lower_case_assigned_names", "draugr.extensions.sorcery_utilities.upper_case_assigned_names", "draugr.ffmpeg_utilities", "draugr.ffmpeg_utilities.exclude", "draugr.ffmpeg_utilities.extract", "draugr.ffmpeg_utilities.extract.extract_frames", "draugr.ffmpeg_utilities.merge", "draugr.ffmpeg_utilities.merge.merge_video", "draugr.ffmpeg_utilities.sequencify", "draugr.ffmpeg_utilities.sequencify.sequencify_files", "draugr.ffmpeg_utilities.split", "draugr.ffmpeg_utilities.split.spilt_video", "draugr.get_version", "draugr.jax_utilities", "draugr.matlab_utilities", "draugr.metrics", "draugr.metrics.accumulation", "draugr.metrics.accumulation.lambda_accumulator", "draugr.metrics.accumulation.mean_accumulator", "draugr.metrics.accumulation.total_accumulator", "draugr.metrics.meters", "draugr.metrics.meters.AverageMeter", "draugr.metrics.meters.Meter", "draugr.metrics.metric_aggregator", "draugr.metrics.metric_aggregator.MetricAggregator", "draugr.metrics.metric_aggregator.save_metric", "draugr.metrics.metric_collection", "draugr.metrics.metric_collection.MetricCollection", "draugr.metrics.metric_summary", "draugr.metrics.metric_summary.MetricSummary", "draugr.metrics.plotting", "draugr.multiprocessing_utilities", "draugr.multiprocessing_utilities.pooled_queue_processor", "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "draugr.numpy_utilities", "draugr.numpy_utilities.channel_transform", "draugr.numpy_utilities.channel_transform.chw_to_hwc", "draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "draugr.numpy_utilities.channel_transform.hwc_to_chw", "draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "draugr.numpy_utilities.datasets", "draugr.numpy_utilities.datasets.categorical", "draugr.numpy_utilities.datasets.categorical.deep_category", "draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "draugr.numpy_utilities.datasets.categorical.flat_category", "draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "draugr.numpy_utilities.datasets.categorical.shallow_category", "draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "draugr.numpy_utilities.datasets.defaults", "draugr.numpy_utilities.datasets.splitting", "draugr.numpy_utilities.datasets.splitting.SplitEnum", "draugr.numpy_utilities.datasets.splitting.SplitIndexer", "draugr.numpy_utilities.datasets.splitting.select_split", "draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "draugr.numpy_utilities.manipulation", "draugr.numpy_utilities.manipulation.MyNdArray", "draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "draugr.numpy_utilities.mixing", "draugr.numpy_utilities.mixing.mix_channels", "draugr.numpy_utilities.powers", "draugr.numpy_utilities.powers.next_pow_10_numpy", "draugr.numpy_utilities.powers.next_pow_2_numpy", "draugr.numpy_utilities.powers.next_pow_numpy", "draugr.numpy_utilities.powers.next_power_10_numpy", "draugr.numpy_utilities.powers.next_power_2_numpy", "draugr.numpy_utilities.raster_grid_2d_masking", "draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "draugr.numpy_utilities.raster_grid_3d_masking", "draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "draugr.numpy_utilities.resize", "draugr.numpy_utilities.resize.resize_array", "draugr.numpy_utilities.sampling", "draugr.numpy_utilities.sampling.get_sampler", "draugr.numpy_utilities.signal_utilities", "draugr.numpy_utilities.signal_utilities.padding", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "draugr.numpy_utilities.signal_utilities.signal_mixing", "draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "draugr.numpy_utilities.signal_utilities.signal_projection", "draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "draugr.numpy_utilities.signal_utilities.signal_statistics", "draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "draugr.numpy_utilities.signal_utilities.truncation", "draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "draugr.opencv_utilities", "draugr.opencv_utilities.bounding_boxes", "draugr.opencv_utilities.bounding_boxes.boxes_2d", "draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "draugr.opencv_utilities.bounding_boxes.evaluation", "draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "draugr.opencv_utilities.color_space", "draugr.opencv_utilities.color_space.clean", "draugr.opencv_utilities.color_space.clean.CleanUpMethod", "draugr.opencv_utilities.color_space.clean.clean_up", "draugr.opencv_utilities.color_space.color", "draugr.opencv_utilities.color_space.color.is_singular_channel", "draugr.opencv_utilities.color_space.color.num_channels", "draugr.opencv_utilities.color_space.color.to_color", "draugr.opencv_utilities.color_space.edge", "draugr.opencv_utilities.color_space.edge.CannyApertureSize", "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "draugr.opencv_utilities.color_space.edge.to_edge", "draugr.opencv_utilities.color_space.gamma", "draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "draugr.opencv_utilities.color_space.gray", "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "draugr.opencv_utilities.color_space.gray.to_gray", "draugr.opencv_utilities.color_space.noise", "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "draugr.opencv_utilities.color_space.noise.noise_filter", "draugr.opencv_utilities.color_space.threshold", "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "draugr.opencv_utilities.color_space.threshold.threshold_channel", "draugr.opencv_utilities.drawing", "draugr.opencv_utilities.drawing.draw_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "draugr.opencv_utilities.drawing.masks", "draugr.opencv_utilities.drawing.masks.gauss_circles", "draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "draugr.opencv_utilities.drawing.masks.segment_ellipse", "draugr.opencv_utilities.drawing.opencv_draw", "draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "draugr.opencv_utilities.drawing.opencv_draw.find_contours", "draugr.opencv_utilities.drawing.opencv_drawing_utilities", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "draugr.opencv_utilities.namespaces", "draugr.opencv_utilities.namespaces.color_conversion_enum", "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "draugr.opencv_utilities.namespaces.enums", "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "draugr.opencv_utilities.namespaces.enums.FontEnum", "draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "draugr.opencv_utilities.namespaces.enums.KmeansEnum", "draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "draugr.opencv_utilities.namespaces.flags", "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "draugr.opencv_utilities.raster_sequences", "draugr.opencv_utilities.raster_sequences.async_video_stream", "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "draugr.opencv_utilities.raster_sequences.frame_annotation", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "draugr.opencv_utilities.raster_sequences.frames", "draugr.opencv_utilities.raster_sequences.frames.frame_generator", "draugr.opencv_utilities.transformation", "draugr.opencv_utilities.transformation.cropping", "draugr.opencv_utilities.transformation.cropping.circle_crop", "draugr.opencv_utilities.transformation.cv2_transforms", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "draugr.opencv_utilities.transformation.resize", "draugr.opencv_utilities.transformation.resize.InterpolationEnum", "draugr.opencv_utilities.transformation.resize.cv2_resize", "draugr.opencv_utilities.windows", "draugr.opencv_utilities.windows.color_picker", "draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "draugr.opencv_utilities.windows.default", "draugr.opencv_utilities.windows.default.ExtensionEnum", "draugr.opencv_utilities.windows.default.match_return_code", "draugr.opencv_utilities.windows.elements", "draugr.opencv_utilities.windows.elements.trackbar", "draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "draugr.opencv_utilities.windows.hough_circles", "draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "draugr.opencv_utilities.windows.image", "draugr.opencv_utilities.windows.image.show_image", "draugr.os_utilities", "draugr.os_utilities.cuda_device", "draugr.os_utilities.cuda_device.DeviceOrderEnum", "draugr.os_utilities.cuda_device.set_cuda_device_order", "draugr.os_utilities.cuda_device.set_cuda_visible_devices", "draugr.os_utilities.linux_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "draugr.os_utilities.linux_utilities.gtk_utilities", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "draugr.os_utilities.linux_utilities.mac_utilities", "draugr.os_utilities.linux_utilities.mac_utilities.dark_mode", "draugr.os_utilities.linux_utilities.systemd_utilities", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.libuser_test", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.systemd_utilities_old", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "draugr.os_utilities.linux_utilities.user_utilities", "draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "draugr.os_utilities.linux_utilities.user_utilities.make_user", "draugr.os_utilities.linux_utilities.user_utilities.remove_user", "draugr.os_utilities.mac_utilities", "draugr.os_utilities.platform_selection", "draugr.os_utilities.platform_selection.get_backend_module", "draugr.os_utilities.resource_utilities", "draugr.os_utilities.resource_utilities.all", "draugr.os_utilities.resource_utilities.all.get_num_instances", "draugr.os_utilities.resource_utilities.cpu", "draugr.os_utilities.resource_utilities.cpu.WorkerSession", "draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "draugr.os_utilities.resource_utilities.gpu", "draugr.os_utilities.resource_utilities.ram", "draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "draugr.os_utilities.screen_resolution", "draugr.os_utilities.screen_resolution.get_screen_resolution", "draugr.os_utilities.screen_resolution.screen_res_gtk", "draugr.os_utilities.screen_resolution.screen_res_mac", "draugr.os_utilities.screen_resolution.screen_res_pygame", "draugr.os_utilities.screen_resolution.screen_res_tk", "draugr.os_utilities.screen_resolution.screen_res_win", "draugr.os_utilities.screen_resolution.screen_res_xlib", "draugr.os_utilities.service", "draugr.os_utilities.service.add_service", "draugr.os_utilities.service.remove_service", "draugr.os_utilities.windows_utilities", "draugr.os_utilities.windows_utilities.exclude", "draugr.os_utilities.windows_utilities.exclude.communication", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.FailSafeException", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.HardwareInput", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input_I", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.KeyBdInput", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.MouseInput", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.POINT", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.click", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.doubleClick", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.failSafeCheck", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyDown", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.keyUp", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.leftClick", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.middleClick", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseDown", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.mouseUp", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.move", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveRel", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.moveTo", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.position", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.press", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.rightClick", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.size", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.tripleClick", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.typewrite", "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.write", "draugr.os_utilities.windows_utilities.exclude.communication.edge", "draugr.os_utilities.windows_utilities.exclude.communication.edge.main", "draugr.os_utilities.windows_utilities.exclude.communication.firefox", "draugr.os_utilities.windows_utilities.exclude.communication.firefox.main", "draugr.os_utilities.windows_utilities.exclude.communication.main", "draugr.os_utilities.windows_utilities.exclude.communication.main.main", "draugr.os_utilities.windows_utilities.exclude.communication.mario", "draugr.os_utilities.windows_utilities.exclude.communication.mario.main", "draugr.os_utilities.windows_utilities.task_scheduler", "draugr.os_utilities.windows_utilities.task_scheduler.api", "draugr.os_utilities.windows_utilities.task_scheduler.api.delete_task", "draugr.os_utilities.windows_utilities.task_scheduler.api.new_user_logon_execute_task", "draugr.os_utilities.windows_utilities.task_scheduler.api.set_task_activity", "draugr.os_utilities.windows_utilities.task_scheduler.enums", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type.TaskActionTypeEnum", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation.TaskCreationEnum", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type.TaskLogonTypeEnum", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger", "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger.TaskTriggerEnum", "draugr.os_utilities.windows_utilities.win32", "draugr.os_utilities.windows_utilities.win32.api", "draugr.os_utilities.windows_utilities.win32.api.press_key", "draugr.os_utilities.windows_utilities.win32.api.press_key_foreground", "draugr.os_utilities.windows_utilities.win32.gui", "draugr.os_utilities.windows_utilities.win32.gui.find_all_windows", "draugr.os_utilities.windows_utilities.win32.gui.get_inner_windows", "draugr.os_utilities.windows_utilities.win32.gui.list_window_names", "draugr.os_utilities.windows_utilities.windows_settings", "draugr.os_utilities.windows_utilities.windows_settings.WindowsSettings", "draugr.pandas_utilities", "draugr.pandas_utilities.formatting", "draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "draugr.pandas_utilities.from_dict", "draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "draugr.pandas_utilities.latex_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "draugr.pandas_utilities.misc_utilities", "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "draugr.pandas_utilities.misc_utilities.duplicate_columns", "draugr.pandas_utilities.multi_index_utilities", "draugr.pandas_utilities.multi_index_utilities.add_index_level", "draugr.pandas_utilities.styling", "draugr.pandas_utilities.styling.AttrEnum", "draugr.pandas_utilities.styling.ColorEnum", "draugr.pandas_utilities.styling.NDFrameExtremeEnum", "draugr.pandas_utilities.styling.color_highlight_extreme", "draugr.pandas_utilities.styling.color_negative_red", "draugr.pygame_utilities", "draugr.pygame_utilities.screen", "draugr.pygame_utilities.screen.get_screen_resolution", "draugr.python_utilities", "draugr.python_utilities.broadcasting", "draugr.python_utilities.broadcasting.BroadcastNone", "draugr.python_utilities.exclude", "draugr.python_utilities.exclude.packages", "draugr.python_utilities.exclude.packages.a", "draugr.python_utilities.exclude.packages.b", "draugr.python_utilities.exclude.packages.c", "draugr.python_utilities.exclude.worker", "draugr.python_utilities.exclude.worker.main", "draugr.python_utilities.exclude.worker.spawn", "draugr.python_utilities.function_wrappers", "draugr.python_utilities.function_wrappers.max_frequency", "draugr.python_utilities.function_wrappers.min_interval_wrapper", "draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "draugr.python_utilities.function_wrappers.wrap_args", "draugr.python_utilities.generators", "draugr.python_utilities.generators.batching_generator", "draugr.python_utilities.generators.batching_generator.batch_generator", "draugr.python_utilities.generators.batching_generator.random_batches", "draugr.python_utilities.generators.batching_generator.shuffled_batches", "draugr.python_utilities.generators.batching_generator.sized_batch", "draugr.python_utilities.generators.recycling_generator", "draugr.python_utilities.generators.recycling_generator.batched_recycle", "draugr.python_utilities.generators.recycling_generator.recycle", "draugr.python_utilities.http", "draugr.python_utilities.http.HttpMethodEnum", "draugr.python_utilities.sockets", "draugr.python_utilities.sockets.find_unclaimed_port", "draugr.python_utilities.sockets.get_host_ip", "draugr.python_utilities.sockets.is_port_in_use", "draugr.python_utilities.torch_like_channel_transformation", "draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "draugr.random_utilities", "draugr.random_utilities.seeding", "draugr.random_utilities.seeding.seed_stack", "draugr.scipy_utilities", "draugr.scipy_utilities.scipy_utilities", "draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "draugr.scipy_utilities.signal_processing", "draugr.scipy_utilities.subsampling", "draugr.scipy_utilities.subsampling.fft_subsample", "draugr.scipy_utilities.subsampling.fir_subsample", "draugr.scipy_utilities.subsampling.mag_decimation_subsample", "draugr.scipy_utilities.subsampling.max_decimation_subsample", "draugr.scipy_utilities.subsampling.min_decimation_subsample", "draugr.stopping", "draugr.stopping.stopping_key", "draugr.stopping.stopping_key.CaptureEarlyStop", "draugr.stopping.stopping_key.add_early_stopping_key_combination", "draugr.tensorboard_utilities", "draugr.tensorboard_utilities.experimental", "draugr.tensorboard_utilities.experimental.confusion_matrix", "draugr.tensorboard_utilities.experimental.pretty_cf", "draugr.tensorboard_utilities.experimental.pretty_cf.pretty_print_conf_matrix", "draugr.tensorboard_utilities.exporting", "draugr.tensorboard_utilities.exporting.db_export", "draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase", "draugr.tensorboard_utilities.exporting.event_export", "draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter", "draugr.tensorboard_utilities.exporting.file_export", "draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile", "draugr.threading_utilities", "draugr.threading_utilities.exclude", "draugr.threading_utilities.skipper", "draugr.threading_utilities.skipper.Skipper", "draugr.torch_utilities", "draugr.torch_utilities.architectures", "draugr.torch_utilities.architectures.architecture", "draugr.torch_utilities.architectures.architecture.Architecture", "draugr.torch_utilities.architectures.distributional", "draugr.torch_utilities.architectures.distributional.categorical", "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "draugr.torch_utilities.architectures.distributional.normal", "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "draugr.torch_utilities.architectures.experimental", "draugr.torch_utilities.architectures.experimental.heads", "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "draugr.torch_utilities.architectures.experimental.recurrent", "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "draugr.torch_utilities.architectures.mlp", "draugr.torch_utilities.architectures.mlp.MLP", "draugr.torch_utilities.architectures.mlp_variants", "draugr.torch_utilities.architectures.mlp_variants.concatination", "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.disjunction", "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "draugr.torch_utilities.architectures.mlp_variants.fourier", "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "draugr.torch_utilities.datasets", "draugr.torch_utilities.datasets.non_sequential_dataset", "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "draugr.torch_utilities.datasets.random_dataset", "draugr.torch_utilities.datasets.random_dataset.RandomDataset", "draugr.torch_utilities.datasets.supervised", "draugr.torch_utilities.datasets.supervised.categorical_dataset", "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "draugr.torch_utilities.datasets.supervised.vision_datasets", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "draugr.torch_utilities.distributions", "draugr.torch_utilities.distributions.entropy", "draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "draugr.torch_utilities.distributions.entropy.normal_entropy", "draugr.torch_utilities.distributions.entropy.normal_log_density", "draugr.torch_utilities.distributions.entropy.shannon_entropy", "draugr.torch_utilities.evaluation", "draugr.torch_utilities.evaluation.classification", "draugr.torch_utilities.evaluation.classification.find_n_misclassified", "draugr.torch_utilities.evaluation.cross_validation", "draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "draugr.torch_utilities.exporting", "draugr.torch_utilities.exporting.latex_tables", "draugr.torch_utilities.exporting.latex_tables.adasdassijd", "draugr.torch_utilities.exporting.latex_tables.asijd", "draugr.torch_utilities.exporting.latex_tables.iasjduh", "draugr.torch_utilities.exporting.summary", "draugr.torch_utilities.exporting.summary.to_latex_table", "draugr.torch_utilities.generators", "draugr.torch_utilities.generators.batching", "draugr.torch_utilities.generators.batching.LimitedBatchResampler", "draugr.torch_utilities.generators.to_tensor_generator", "draugr.torch_utilities.images", "draugr.torch_utilities.images.channel_transform", "draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "draugr.torch_utilities.images.conversion", "draugr.torch_utilities.images.conversion.quick_to_pil_image", "draugr.torch_utilities.opencv", "draugr.torch_utilities.opencv.torch_conversion", "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "draugr.torch_utilities.operations", "draugr.torch_utilities.operations.boxes_2d", "draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "draugr.torch_utilities.operations.enums", "draugr.torch_utilities.operations.enums.ReductionMethodEnum", "draugr.torch_utilities.operations.sizes", "draugr.torch_utilities.operations.sizes.conv2d", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "draugr.torch_utilities.operations.sizes.max_pool2d", "draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "draugr.torch_utilities.operations.sizes.pad2d", "draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "draugr.torch_utilities.operations.torch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "draugr.torch_utilities.optimisation", "draugr.torch_utilities.optimisation.debugging", "draugr.torch_utilities.optimisation.debugging.gradients", "draugr.torch_utilities.optimisation.debugging.gradients.checking", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "draugr.torch_utilities.optimisation.debugging.gradients.flow", "draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "draugr.torch_utilities.optimisation.debugging.gradients.guided", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "draugr.torch_utilities.optimisation.debugging.layer_fetching", "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "draugr.torch_utilities.optimisation.debugging.opt_verification", "draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "draugr.torch_utilities.optimisation.parameters", "draugr.torch_utilities.optimisation.parameters.freeze_parameters", "draugr.torch_utilities.optimisation.parameters.frozen_parameters", "draugr.torch_utilities.optimisation.scheduling", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "draugr.torch_utilities.optimisation.scheduling.schedulers", "draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "draugr.torch_utilities.optimisation.stopping", "draugr.torch_utilities.optimisation.stopping.overfitting", "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "draugr.torch_utilities.optimisation.updates", "draugr.torch_utilities.optimisation.updates.copying", "draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "draugr.torch_utilities.optimisation.updates.copying.copy_state", "draugr.torch_utilities.optimisation.updates.soft_update", "draugr.torch_utilities.persistence", "draugr.torch_utilities.persistence.checkpoint", "draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "draugr.torch_utilities.persistence.config", "draugr.torch_utilities.persistence.config.ensure_directory_exist", "draugr.torch_utilities.persistence.config.save_config", "draugr.torch_utilities.persistence.model", "draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "draugr.torch_utilities.persistence.model.load_latest_model", "draugr.torch_utilities.persistence.model.load_model", "draugr.torch_utilities.persistence.model.save_model", "draugr.torch_utilities.persistence.model.save_model_and_configuration", "draugr.torch_utilities.persistence.naming", "draugr.torch_utilities.persistence.naming.get_model_hash", "draugr.torch_utilities.persistence.parameters", "draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "draugr.torch_utilities.persistence.parameters.load_model_parameters", "draugr.torch_utilities.persistence.parameters.save_model_parameters", "draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "draugr.torch_utilities.sessions", "draugr.torch_utilities.sessions.cache_sessions", "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "draugr.torch_utilities.sessions.determinism_sessions", "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "draugr.torch_utilities.sessions.device_sessions", "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "draugr.torch_utilities.sessions.jit_sessions", "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "draugr.torch_utilities.sessions.model_sessions", "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "draugr.torch_utilities.sessions.type_sessions", "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "draugr.torch_utilities.system", "draugr.torch_utilities.system.constants", "draugr.torch_utilities.system.constants.torch_pi", "draugr.torch_utilities.system.data_type", "draugr.torch_utilities.system.data_type.global_torch_dtype", "draugr.torch_utilities.system.data_type.set_global_torch_dtype", "draugr.torch_utilities.system.device", "draugr.torch_utilities.system.device.TorchDeviceEnum", "draugr.torch_utilities.system.device.auto_select_available_cuda_device", "draugr.torch_utilities.system.device.get_gpu_usage_mb", "draugr.torch_utilities.system.device.global_torch_device", "draugr.torch_utilities.system.device.select_cuda_device", "draugr.torch_utilities.system.device.set_global_torch_device", "draugr.torch_utilities.system.device.torch_clean_up", "draugr.torch_utilities.system.info", "draugr.torch_utilities.system.info.cuda_info", "draugr.torch_utilities.system.info.system_info", "draugr.torch_utilities.system.loading", "draugr.torch_utilities.system.loading.default_worker_init_fn", "draugr.torch_utilities.system.loading.global_pin_memory", "draugr.torch_utilities.system.seeding", "draugr.torch_utilities.system.seeding.torch_seed", "draugr.torch_utilities.tensors", "draugr.torch_utilities.tensors.dimension_order", "draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "draugr.torch_utilities.tensors.info", "draugr.torch_utilities.tensors.info.size_of_tensor", "draugr.torch_utilities.tensors.mixins", "draugr.torch_utilities.tensors.mixins.TensoriseMixin", "draugr.torch_utilities.tensors.normalise", "draugr.torch_utilities.tensors.normalise.standardise", "draugr.torch_utilities.tensors.reshaping", "draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "draugr.torch_utilities.tensors.reshaping.safe_concat", "draugr.torch_utilities.tensors.tensor_container", "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "draugr.torch_utilities.tensors.to_scalar", "draugr.torch_utilities.tensors.to_tensor", "draugr.torch_utilities.tensors.types", "draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "draugr.torch_utilities.writers", "draugr.torch_utilities.writers.mixins", "draugr.torch_utilities.writers.mixins.graph_writer_mixin", "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "draugr.torch_utilities.writers.tensorboard", "draugr.torch_utilities.writers.tensorboard.launcher", "draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "draugr.torch_utilities.writers.torch_module_writer", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "draugr.torch_utilities.writers.visdom", "draugr.torch_utilities.writers.visdom.episode_visual", "draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "draugr.torch_utilities.writers.visdom.plotting", "draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "draugr.torch_utilities.writers.visdom.visdom_writer", "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "draugr.tqdm_utilities", "draugr.tqdm_utilities.pooled_progress_bar", "draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "draugr.tqdm_utilities.progress_bar", "draugr.visualisation", "draugr.visualisation.ggplot_utilities", "draugr.visualisation.matplotlib_utilities", "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "draugr.visualisation.matplotlib_utilities.annotate_point", "draugr.visualisation.matplotlib_utilities.decolorise_plot", "draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "draugr.visualisation.matplotlib_utilities.latex_clean_label", "draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "draugr.visualisation.matplotlib_utilities.remove_decoration", "draugr.visualisation.matplotlib_utilities.save_embed_fig", "draugr.visualisation.matplotlib_utilities.use_monochrome_style", "draugr.visualisation.pillow_utilities", "draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "draugr.visualisation.pillow_utilities.np_array_to_pil_img", "draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "draugr.visualisation.pillow_utilities.pil_img_to_np_array", "draugr.visualisation.pillow_utilities.pil_merge_images", "draugr.visualisation.seaborn_utilities", "draugr.visualisation.seaborn_utilities.despine_all", "draugr.visualisation.seaborn_utilities.exponential_moving_average", "draugr.visualisation.seaborn_utilities.set_y_log_scale", "draugr.writers", "draugr.writers.csv_writer", "draugr.writers.csv_writer.CSVWriter", "draugr.writers.databases", "draugr.writers.databases.hdf_writer", "draugr.writers.databases.hdf_writer.HdfWriter", "draugr.writers.databases.sqlite_writer", "draugr.writers.databases.sqlite_writer.SqliteWriter", "draugr.writers.log_writer", "draugr.writers.log_writer.LogWriter", "draugr.writers.mixins", "draugr.writers.mixins.audio_writer_mixin", "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "draugr.writers.mixins.bar_writer_mixin", "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "draugr.writers.mixins.embed_writer_mixin", "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "draugr.writers.mixins.figure_writer_mixin", "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "draugr.writers.mixins.histogram_writer_mixin", "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "draugr.writers.mixins.image_writer_mixin", "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "draugr.writers.mixins.instantiation_writer_mixin", "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "draugr.writers.mixins.line_writer_mixin", "draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "draugr.writers.mixins.mesh_writer_mixin", "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "draugr.writers.mixins.precision_recall_writer_mixin", "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "draugr.writers.mixins.scalar_writer_mixin", "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "draugr.writers.mixins.spectrogram_writer_mixin", "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "draugr.writers.mixins.video_writer_mixin", "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "draugr.writers.mock_writer", "draugr.writers.mock_writer.MockWriter", "draugr.writers.standard_tags", "draugr.writers.standard_tags.TestingCurves", "draugr.writers.standard_tags.TestingScalars", "draugr.writers.standard_tags.TestingTables", "draugr.writers.standard_tags.TrainingCurves", "draugr.writers.standard_tags.TrainingScalars", "draugr.writers.standard_tags.TrainingTables", "draugr.writers.standard_tags.should_plot_y_log_scale", "draugr.writers.standard_tags.should_smooth_series", "draugr.writers.terminal", "draugr.writers.terminal.console_writer", "draugr.writers.terminal.console_writer.ConsoleWriter", "draugr.writers.terminal.terminal_image_renderer", "draugr.writers.terminal.terminal_image_renderer.entry_point", "draugr.writers.terminal.terminal_image_renderer.get_image", "draugr.writers.terminal.terminal_image_renderer.get_pixel", "draugr.writers.terminal.terminal_image_renderer.render_file", "draugr.writers.terminal.terminal_image_renderer.render_image", "draugr.writers.terminal.terminal_image_renderer.terminalise_image", "draugr.writers.terminal.terminal_plot", "draugr.writers.terminal.terminal_plot_writer", "draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter", "draugr.writers.terminal.terminal_plotter", "draugr.writers.terminal.terminal_utilities", "draugr.writers.terminal.terminal_utilities.scale", "draugr.writers.writer", "draugr.writers.writer.Writer", "draugr.writers.writer.global_writer", "draugr.writers.writer.set_global_writer", "draugr.writers.writer_utilities", "draugr.writers.writer_utilities.metrics", "Getting Started", "Draugr Documentation"], "terms": {"creat": [0, 2, 3, 10, 11, 16, 19, 20, 22, 24, 27, 29, 30, 32, 34, 35, 38, 42, 46, 47, 52, 63, 66, 70, 77, 80, 86, 87, 92, 93, 96, 101, 106, 107, 109, 111, 117, 119, 121, 123, 126, 129, 131, 136, 139, 143, 144, 145, 148, 152, 164, 180, 181, 191, 194, 198, 201, 222, 228, 229, 231, 234, 236, 258, 274, 315, 317, 318, 320, 328, 341, 401, 403, 404, 406, 410, 415, 419, 421, 427, 428, 430, 431, 441, 447, 452, 457, 461, 466, 467, 469, 470, 473, 474, 485, 486, 487, 489, 490, 494, 522, 526, 530, 531, 533, 535, 536, 538, 540, 541, 544, 545, 551, 552, 554, 557, 561, 563, 566, 567, 568, 573, 579, 580, 582, 584, 585, 588, 590, 592, 595, 596, 601, 602, 603, 604, 605, 607, 609, 612, 615, 617, 619, 622, 623, 627, 639, 642, 651, 653, 659, 661, 663, 667, 670, 675, 677, 678, 680, 683, 694, 697, 699, 700, 707, 711, 713, 721, 726, 731, 734, 735, 737, 738, 745, 747, 755, 757, 758, 770, 776, 780, 781, 783, 784, 786, 788, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 813, 815, 818, 829, 830, 840, 842, 845, 849], "27": [0, 19, 30, 32, 421, 474, 619, 731, 780, 781, 788, 818, 830, 840, 845, 849], "04": [0, 19, 29, 30, 32, 46, 47, 80, 148, 181, 228, 315, 461, 487, 639, 731, 757, 780, 781, 788, 818, 830, 840, 845, 849], "2019": [0, 19, 20, 24, 27, 30, 32, 87, 194, 258, 447, 452, 530, 531, 533, 544, 545, 566, 567, 568, 623, 678, 680, 683, 697, 726, 731, 735, 780, 781, 788, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 813, 815, 818, 830, 840, 845, 849], "author": [0, 19, 30, 32, 520, 731, 780, 781, 788, 818, 830, 840, 845, 849], "cnheider": [0, 19, 30, 32, 731, 780, 781, 788, 818, 830, 840, 845, 849], "function": [0, 3, 13, 33, 38, 40, 42, 44, 47, 49, 54, 56, 58, 60, 66, 73, 87, 94, 96, 98, 101, 106, 107, 109, 111, 117, 119, 121, 123, 126, 129, 130, 131, 136, 139, 145, 148, 153, 156, 160, 164, 170, 173, 176, 181, 186, 191, 194, 231, 234, 235, 237, 258, 262, 264, 268, 269, 270, 272, 275, 315, 318, 320, 328, 330, 338, 344, 371, 373, 375, 377, 380, 394, 397, 404, 406, 410, 415, 419, 421, 425, 428, 431, 434, 438, 441, 443, 444, 447, 452, 457, 461, 467, 470, 474, 481, 487, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 545, 552, 553, 554, 555, 557, 561, 568, 573, 580, 585, 588, 590, 592, 605, 607, 609, 613, 617, 619, 623, 627, 631, 632, 634, 639, 642, 645, 651, 653, 678, 680, 683, 691, 694, 697, 700, 707, 708, 711, 713, 721, 729, 738, 741, 743, 748, 749, 750, 751, 752, 753, 754, 758, 770, 772, 774, 776, 790, 820, 832, 843, 845, 849], "modul": [0, 2, 10, 15, 18, 29, 34, 37, 46, 52, 65, 81, 86, 92, 93, 107, 125, 143, 144, 152, 180, 182, 183, 185, 198, 228, 236, 261, 267, 274, 316, 317, 341, 342, 343, 379, 384, 393, 403, 427, 430, 433, 446, 466, 469, 480, 484, 485, 489, 496, 500, 501, 503, 504, 506, 507, 509, 510, 511, 512, 513, 515, 517, 518, 519, 521, 522, 524, 525, 527, 528, 529, 530, 535, 540, 544, 551, 553, 556, 562, 563, 567, 575, 579, 584, 595, 601, 602, 603, 604, 606, 608, 616, 622, 629, 633, 635, 636, 638, 647, 648, 649, 650, 652, 654, 655, 656, 657, 658, 664, 665, 666, 671, 672, 673, 677, 699, 708, 724, 725, 727, 728, 733, 734, 736, 739, 740, 747, 756, 780, 783, 790, 829, 852], "dist": 1, "ani": [1, 21, 23, 25, 26, 28, 31, 33, 48, 62, 83, 84, 85, 104, 107, 175, 206, 230, 260, 285, 287, 299, 420, 442, 448, 451, 453, 454, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 611, 613, 616, 733, 746, 749, 750, 751, 752, 753, 754, 761, 782, 785, 787, 789, 796, 819, 831, 835, 841, 846], "bool": [1, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 41, 55, 57, 75, 89, 91, 99, 103, 104, 105, 107, 157, 182, 183, 192, 263, 271, 273, 321, 323, 382, 383, 402, 442, 448, 451, 460, 477, 478, 479, 482, 483, 488, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 569, 570, 571, 572, 597, 599, 608, 613, 620, 631, 632, 647, 648, 649, 650, 654, 655, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 681, 687, 696, 733, 739, 746, 762, 768, 782, 785, 787, 789, 819, 827, 828, 831, 841, 846], "sourc": [1, 4, 5, 6, 7, 8, 9, 12, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 39, 41, 43, 45, 48, 50, 51, 55, 57, 59, 61, 62, 67, 68, 69, 71, 72, 74, 75, 77, 79, 83, 84, 85, 88, 89, 90, 91, 95, 97, 99, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 118, 120, 122, 124, 127, 128, 130, 132, 133, 134, 135, 137, 138, 140, 141, 142, 146, 147, 149, 150, 151, 154, 155, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 174, 175, 177, 178, 179, 182, 183, 184, 187, 188, 189, 192, 193, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 232, 233, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 263, 265, 266, 269, 271, 273, 276, 277, 278, 316, 319, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 376, 378, 381, 382, 383, 386, 388, 390, 392, 395, 396, 398, 399, 400, 402, 405, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 422, 423, 424, 425, 426, 429, 432, 435, 436, 437, 439, 440, 442, 443, 444, 445, 448, 449, 450, 451, 453, 454, 456, 458, 459, 460, 462, 463, 464, 465, 468, 471, 472, 475, 476, 477, 478, 479, 482, 483, 488, 491, 493, 495, 499, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 534, 537, 539, 542, 543, 546, 547, 548, 549, 550, 553, 555, 558, 559, 560, 562, 565, 569, 570, 571, 572, 574, 577, 578, 581, 583, 586, 587, 589, 591, 593, 594, 597, 598, 599, 600, 606, 608, 610, 611, 613, 614, 616, 617, 618, 620, 621, 624, 626, 628, 631, 632, 635, 636, 640, 641, 643, 644, 646, 647, 649, 650, 652, 654, 656, 657, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 679, 681, 682, 684, 685, 686, 687, 688, 689, 690, 692, 693, 695, 696, 698, 701, 702, 703, 704, 705, 706, 708, 710, 712, 714, 715, 716, 718, 722, 723, 727, 730, 733, 736, 739, 742, 744, 746, 749, 750, 751, 752, 753, 754, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 777, 778, 779, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 816, 817, 819, 821, 822, 823, 824, 825, 826, 827, 828, 831, 833, 834, 835, 836, 837, 838, 841, 844, 846, 847, 848, 850], "return": [1, 4, 5, 6, 7, 9, 14, 36, 39, 41, 43, 48, 50, 51, 67, 68, 69, 74, 75, 77, 79, 84, 88, 89, 90, 91, 95, 97, 99, 103, 104, 105, 107, 110, 118, 120, 130, 132, 140, 141, 146, 147, 149, 150, 151, 155, 157, 158, 159, 163, 165, 166, 167, 168, 169, 172, 175, 178, 179, 182, 184, 187, 188, 189, 192, 193, 195, 196, 197, 206, 230, 232, 233, 238, 249, 260, 266, 269, 273, 316, 319, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 355, 356, 364, 365, 367, 395, 398, 399, 400, 402, 405, 407, 408, 409, 411, 412, 413, 414, 420, 429, 432, 439, 442, 443, 444, 445, 448, 451, 454, 458, 459, 460, 462, 463, 464, 465, 483, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 537, 539, 542, 543, 546, 547, 548, 549, 550, 558, 559, 560, 562, 569, 570, 571, 572, 574, 581, 586, 587, 589, 591, 606, 611, 613, 614, 616, 618, 620, 621, 626, 628, 640, 643, 644, 646, 647, 648, 649, 650, 654, 655, 656, 657, 679, 681, 685, 686, 687, 688, 689, 692, 693, 696, 701, 702, 703, 704, 705, 706, 708, 712, 714, 715, 716, 718, 730, 733, 742, 744, 746, 749, 751, 753, 761, 771, 772, 773, 774, 778, 782, 785, 787, 789, 819, 827, 828, 831, 833, 838, 841, 846, 847, 848, 850], "true": [1, 21, 23, 25, 26, 28, 31, 33, 36, 41, 55, 57, 62, 74, 77, 84, 89, 91, 103, 107, 192, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 402, 448, 451, 477, 478, 479, 482, 483, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 569, 570, 571, 572, 608, 613, 621, 631, 632, 647, 648, 649, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 696, 733, 739, 746, 768, 782, 785, 787, 789, 819, 831, 841, 846], "given": [1, 77, 107, 395, 396, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 613], "distribut": [1, 18, 500, 733, 794], "an": [1, 5, 77, 95, 99, 107, 154, 161, 162, 171, 174, 177, 182, 203, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 259, 265, 276, 431, 453, 454, 456, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 599, 613, 617, 626, 684, 727, 733, 736, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 814, 817, 841], "edit": 1, "instal": [1, 37, 851], "03": [2, 3, 29, 80, 86, 101, 117, 119, 144, 145, 152, 164, 181, 191, 231, 234, 457, 485, 486, 489, 490, 494, 535, 536, 538, 563, 580, 627, 659, 700, 784, 786], "05": [2, 3, 228, 317, 318, 328, 403, 404, 406, 410, 419, 421, 431, 441, 606, 663, 670, 757], "2021": [2, 3, 16, 22, 34, 35, 46, 47, 111, 117, 119, 123, 126, 228, 229, 231, 315, 317, 318, 328, 403, 404, 406, 410, 415, 419, 421, 431, 441, 469, 470, 473, 474, 485, 486, 487, 489, 490, 494, 557, 561, 612, 639, 700, 721, 757, 758, 776, 784, 786], "class": [3, 4, 5, 11, 12, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 95, 99, 101, 102, 103, 106, 107, 153, 154, 160, 161, 162, 170, 171, 173, 174, 176, 177, 182, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 275, 276, 285, 287, 299, 320, 321, 344, 346, 347, 348, 349, 350, 351, 385, 386, 387, 388, 389, 390, 391, 392, 401, 402, 415, 416, 417, 421, 422, 423, 424, 431, 432, 455, 456, 472, 481, 482, 488, 490, 491, 492, 493, 494, 495, 498, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 564, 565, 576, 577, 578, 582, 583, 596, 597, 598, 599, 600, 612, 613, 614, 615, 616, 625, 626, 630, 631, 632, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 683, 684, 709, 710, 717, 718, 726, 727, 731, 733, 735, 736, 745, 746, 758, 759, 760, 781, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 831, 840, 841, 845, 846], "valu": [4, 5, 12, 71, 72, 74, 77, 79, 102, 107, 132, 137, 138, 154, 161, 162, 171, 174, 177, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 259, 265, 276, 386, 388, 390, 392, 402, 405, 416, 417, 420, 422, 423, 424, 426, 456, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 583, 608, 613, 616, 617, 620, 684, 733, 746, 759, 760, 780, 782, 785, 787, 789, 794, 800, 802, 806, 812, 814, 816, 819, 821, 822, 823, 824, 825, 826, 831, 841, 846], "base": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 71, 72, 74, 77, 79, 83, 84, 85, 102, 103, 107, 154, 161, 162, 171, 174, 177, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 276, 285, 287, 299, 321, 346, 347, 348, 349, 350, 351, 386, 388, 390, 392, 402, 416, 417, 422, 423, 424, 432, 456, 482, 491, 493, 495, 499, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 528, 529, 532, 534, 537, 539, 542, 543, 565, 577, 578, 583, 597, 598, 599, 600, 613, 614, 616, 626, 631, 632, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 684, 710, 718, 727, 733, 736, 746, 759, 760, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 816, 817, 819, 821, 822, 823, 824, 825, 826, 831, 841, 846], "enum": [4, 5, 102, 154, 161, 162, 171, 174, 177, 200, 259, 265, 276, 416, 417, 422, 423, 424, 456, 684, 733, 759, 760, 802, 816, 821, 822, 823, 824, 825, 826, 827, 828, 841], "s": [4, 21, 23, 25, 26, 28, 31, 33, 77, 107, 395, 396, 425, 432, 468, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 537, 613, 616, 698, 708, 718, 764, 769], "5": [4, 107, 182, 183, 192, 245, 250, 599, 608, 769], "point": [4, 37, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 802, 844], "facial": 4, "landmark": 4, "detector": 4, "__init__": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 71, 72, 74, 77, 79, 83, 84, 85, 102, 103, 107, 154, 161, 162, 171, 174, 177, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 276, 285, 287, 299, 321, 346, 347, 348, 349, 350, 351, 386, 388, 390, 392, 402, 416, 417, 422, 423, 424, 432, 456, 482, 491, 493, 495, 499, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 534, 537, 539, 542, 543, 565, 577, 578, 583, 597, 598, 599, 600, 613, 614, 616, 626, 631, 632, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 684, 710, 718, 727, 733, 736, 746, 759, 760, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 816, 817, 819, 821, 822, 823, 824, 825, 826, 831, 841, 846], "method": [4, 5, 17, 21, 23, 25, 26, 28, 31, 33, 36, 71, 72, 74, 77, 79, 83, 84, 85, 103, 107, 155, 163, 175, 179, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 321, 346, 347, 348, 349, 350, 351, 402, 417, 424, 432, 482, 491, 493, 495, 499, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 534, 537, 539, 542, 543, 565, 577, 578, 597, 598, 599, 600, 613, 614, 616, 626, 631, 632, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676, 710, 718, 727, 733, 736, 746, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 817, 819, 831, 841, 846], "attribut": [4, 5, 21, 23, 25, 26, 28, 31, 33, 74, 77, 79, 84, 102, 103, 107, 154, 161, 162, 171, 174, 177, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 259, 265, 276, 346, 347, 348, 349, 350, 351, 386, 388, 390, 392, 402, 416, 417, 422, 423, 456, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 537, 539, 542, 543, 583, 613, 684, 710, 733, 759, 760, 816, 821, 822, 823, 824, 825, 826], "static": [4, 5, 21, 23, 25, 26, 28, 31, 33, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527, 613, 616, 782, 789], "slice": [4, 5, 107, 532], "seq": [4, 5, 232, 233], "sequenc": [4, 5, 6, 7, 36, 99, 103, 104, 107, 108, 130, 140, 141, 142, 149, 182, 192, 228, 238, 449, 450, 453, 462, 463, 464, 465, 488, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527, 532, 534, 537, 597, 733, 761, 796, 806, 814, 844], "ind": [4, 5, 103], "union": [4, 5, 14, 55, 57, 68, 69, 95, 97, 99, 112, 113, 114, 115, 116, 118, 120, 124, 146, 147, 150, 182, 192, 196, 197, 230, 232, 233, 252, 273, 278, 348, 411, 414, 425, 462, 463, 464, 465, 471, 472, 477, 478, 479, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 586, 587, 589, 591, 593, 594, 654, 655, 679, 687, 696, 733, 746, 763, 766, 768, 774, 778, 782, 785, 787, 789, 792, 802, 808, 812, 817, 819, 831, 841, 846], "tupl": [4, 5, 8, 21, 23, 25, 26, 28, 77, 107, 118, 120, 122, 146, 147, 151, 183, 192, 193, 232, 233, 249, 252, 257, 260, 471, 475, 476, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 537, 539, 542, 543, 555, 586, 587, 589, 591, 593, 594, 613, 654, 655, 774, 782, 835, 837], "paramet": [4, 5, 6, 7, 9, 14, 21, 23, 25, 26, 28, 31, 33, 36, 41, 48, 55, 57, 59, 61, 67, 68, 69, 71, 72, 74, 75, 77, 79, 84, 85, 88, 89, 90, 91, 95, 97, 103, 104, 105, 107, 110, 118, 120, 130, 140, 141, 146, 147, 149, 155, 157, 158, 159, 163, 165, 166, 167, 168, 169, 172, 175, 178, 179, 184, 187, 188, 189, 196, 197, 230, 232, 233, 235, 238, 260, 263, 266, 271, 273, 277, 278, 319, 322, 329, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 383, 395, 398, 399, 405, 407, 408, 409, 411, 412, 414, 420, 439, 445, 448, 449, 450, 451, 454, 460, 462, 463, 464, 465, 483, 491, 493, 495, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 546, 547, 548, 549, 550, 555, 562, 569, 570, 571, 572, 574, 581, 586, 587, 589, 591, 606, 608, 611, 613, 614, 616, 624, 626, 628, 631, 632, 640, 641, 643, 644, 646, 647, 648, 649, 650, 679, 681, 685, 687, 688, 689, 701, 702, 703, 704, 705, 706, 708, 712, 714, 715, 716, 718, 727, 730, 733, 736, 739, 742, 744, 746, 761, 769, 771, 777, 778, 779, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 806, 808, 812, 814, 817, 819, 827, 828, 831, 841, 846, 850], "enumer": [5, 154, 161, 162, 171, 174, 177, 203, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 259, 265, 276, 456, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 684, 733, 802, 841], "coordin": [6, 7, 763], "float": [6, 7, 8, 14, 21, 23, 25, 26, 28, 31, 33, 55, 57, 67, 68, 69, 95, 97, 99, 103, 105, 107, 112, 113, 114, 115, 116, 118, 120, 130, 146, 147, 165, 167, 168, 169, 182, 183, 192, 196, 197, 232, 233, 242, 244, 245, 246, 249, 250, 252, 323, 411, 414, 425, 462, 463, 464, 465, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 543, 599, 606, 608, 712, 733, 746, 763, 766, 768, 778, 782, 785, 787, 789, 812, 817, 819, 831, 841, 844, 846], "rect": [8, 14, 184], "take": [8, 107, 503, 518, 542, 543], "bound": [8, 144, 150, 151, 182, 249, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "predict": [8, 107, 529, 555, 617, 733, 810], "convert": [8, 48, 107, 159, 172, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 772], "format": [8, 107, 159, 172, 182, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616], "x": [8, 21, 23, 25, 26, 28, 31, 33, 83, 107, 112, 113, 114, 115, 116, 122, 132, 133, 137, 138, 260, 352, 353, 357, 358, 359, 360, 363, 364, 366, 368, 405, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 549, 613, 617, 712, 761, 766, 769, 772, 844], "y": [8, 21, 23, 25, 26, 28, 31, 33, 107, 133, 352, 353, 357, 358, 359, 360, 363, 364, 366, 368, 613, 761, 766], "w": [8, 107, 118, 120, 151, 491, 493, 495, 591, 613, 733, 766, 774], "h": [8, 118, 120, 151, 187, 188, 189, 591, 733, 774], "shape": [9, 107, 150, 182, 192, 260, 613, 733, 774], "dtype": [9, 107, 472, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 613, 676, 681, 682, 722, 723], "str": [9, 21, 23, 28, 31, 33, 36, 41, 55, 62, 95, 97, 99, 105, 107, 182, 183, 230, 232, 266, 269, 273, 278, 316, 381, 382, 383, 412, 413, 414, 418, 420, 425, 459, 471, 472, 488, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 537, 539, 562, 574, 647, 648, 649, 652, 654, 655, 656, 679, 687, 692, 693, 696, 730, 733, 736, 739, 746, 764, 766, 768, 773, 774, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 806, 808, 810, 812, 814, 817, 819, 831, 841, 846], "int": [9, 14, 21, 23, 25, 26, 28, 31, 33, 55, 57, 68, 69, 71, 72, 84, 103, 107, 112, 113, 114, 115, 116, 118, 120, 122, 124, 127, 130, 140, 146, 147, 158, 172, 182, 183, 192, 195, 196, 197, 230, 232, 233, 238, 251, 252, 263, 269, 271, 273, 278, 319, 322, 323, 325, 326, 329, 405, 411, 413, 414, 420, 425, 442, 443, 444, 448, 449, 450, 451, 453, 458, 460, 462, 463, 464, 465, 468, 471, 472, 475, 476, 477, 478, 479, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 534, 537, 539, 553, 555, 565, 586, 587, 589, 591, 593, 594, 598, 613, 631, 632, 685, 688, 696, 698, 708, 716, 730, 733, 736, 739, 746, 763, 766, 768, 774, 778, 782, 785, 787, 789, 794, 796, 798, 800, 806, 810, 812, 814, 817, 819, 831, 841, 844, 846], "30": [10, 11, 14, 107, 233, 341, 401, 733, 817], "01": [10, 11, 16, 22, 34, 35, 42, 61, 109, 111, 123, 126, 143, 180, 198, 201, 222, 229, 236, 258, 274, 315, 415, 430, 474, 522, 535, 536, 538, 627, 842], "2022": [10, 11, 109, 201, 222, 842], "todo": [12, 33, 443, 444, 486, 491, 493, 495, 617, 618, 733], "implement": [12, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 733, 790], "pair": [12, 77], "wise": [12, 107], "imag": [14, 23, 48, 95, 99, 107, 157, 158, 159, 165, 166, 167, 168, 169, 172, 182, 183, 192, 202, 238, 249, 252, 491, 493, 495, 500, 542, 543, 597, 598, 599, 600, 733, 771, 772, 773, 774, 775, 792, 802, 808, 817, 841], "grai": [14, 159, 179], "predictor": 14, "desired_left_ey": 14, "0": [14, 21, 23, 25, 26, 28, 31, 33, 67, 69, 74, 95, 97, 99, 103, 105, 107, 130, 132, 133, 150, 151, 172, 178, 182, 183, 192, 208, 230, 232, 233, 245, 246, 250, 252, 269, 273, 352, 353, 357, 358, 365, 366, 368, 369, 370, 411, 414, 420, 439, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 543, 565, 586, 589, 593, 594, 599, 608, 613, 617, 626, 716, 733, 739, 769, 778, 789, 844], "35": 14, "desired_face_s": 14, "none": [14, 21, 23, 25, 26, 28, 31, 33, 39, 43, 55, 57, 61, 67, 68, 74, 77, 84, 95, 97, 99, 107, 118, 120, 122, 124, 133, 182, 183, 192, 197, 230, 263, 269, 271, 273, 277, 278, 285, 287, 299, 324, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 381, 382, 383, 402, 414, 420, 468, 472, 488, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 542, 543, 553, 558, 559, 560, 589, 598, 606, 608, 613, 616, 620, 621, 626, 631, 632, 643, 644, 646, 649, 650, 654, 655, 656, 657, 664, 665, 666, 681, 682, 687, 689, 690, 695, 727, 733, 736, 739, 746, 761, 762, 765, 767, 768, 769, 774, 777, 779, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 817, 819, 831, 833, 841, 846, 848], "pad": [14, 586, 589, 593, 598], "debug": 14, "fals": [14, 17, 21, 28, 33, 36, 74, 99, 104, 105, 107, 182, 183, 263, 271, 273, 321, 323, 361, 362, 363, 382, 442, 477, 478, 479, 482, 483, 488, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599, 613, 632, 649, 650, 669, 681, 687, 733, 746, 762, 768, 774, 782, 785, 787, 789, 819, 831, 841, 846], "For": [15, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532], "displai": [15, 626, 775], "blit": 15, "plot": [15, 18, 26, 31, 65, 488, 608, 617], "screen": 15, "util": [15, 18, 81, 86, 92, 93, 125, 143, 341, 446, 466, 469, 480, 484, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 553, 677, 747, 756, 772, 774], "draw": [15, 17, 18, 21, 23, 25, 26, 28, 31, 33, 36], "real": [15, 18, 26, 107, 273], "time": [15, 18, 26, 28, 33, 107, 273, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 589, 616, 617, 647, 648, 681, 687, 733], "data": [15, 18, 21, 23, 25, 26, 28, 31, 33, 36, 79, 95, 103, 107, 542, 543, 553, 555, 597, 598, 617, 733, 792, 802, 808, 817, 841], "stream": [15, 18, 230, 780], "figur": [15, 18, 21, 23, 25, 26, 28, 31, 33, 491, 493, 495, 733, 798], "also": [15, 18, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "some": [15, 18, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617, 696], "gener": [15, 18, 67, 68, 69, 107, 425, 542, 543, 617, 698, 749, 751, 753], "classif": [15, 18], "metric": [15, 18, 733, 780, 804], "25": [16, 34, 35, 55, 57, 101, 130, 144, 152, 164, 229, 403, 404, 406, 410, 419, 580], "verbos": [17, 36, 99, 104, 105, 263, 271, 321, 323, 442, 482, 483, 632, 649, 681, 687, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "object": [17, 50, 72, 74, 77, 79, 83, 84, 103, 107, 182, 183, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 402, 488, 493, 499, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 577, 578, 597, 598, 599, 600, 613, 614, 616, 626, 708, 710, 718], "descript": [17, 21, 23, 25, 26, 28, 31, 33, 36, 62, 71, 72, 74, 77, 79, 103, 107, 108, 122, 124, 127, 128, 134, 135, 142, 183, 230, 241, 242, 243, 244, 245, 246, 247, 250, 251, 257, 354, 372, 374, 376, 378, 382, 386, 388, 390, 392, 402, 418, 422, 423, 424, 432, 435, 436, 437, 440, 468, 475, 476, 478, 479, 499, 503, 509, 510, 511, 512, 515, 518, 519, 520, 527, 534, 537, 539, 542, 543, 553, 583, 593, 594, 610, 614, 616, 626, 631, 632, 635, 636, 652, 672, 682, 695, 722, 723, 733, 746, 759, 760, 763, 766, 767, 782, 785, 787, 789, 804, 810, 812, 819, 821, 822, 823, 824, 825, 826, 831, 834, 835, 836, 837, 841, 846], "abstract": [17, 85, 537, 539, 727, 736, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 814, 817], "arg": [17, 77, 84, 85, 95, 107, 150, 151, 182, 192, 193, 240, 252, 285, 287, 299, 346, 347, 348, 349, 350, 351, 402, 432, 449, 450, 482, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 597, 598, 599, 613, 616, 718], "kwarg": [17, 21, 23, 25, 26, 31, 33, 77, 84, 85, 107, 155, 163, 175, 179, 193, 285, 287, 299, 346, 347, 348, 349, 350, 351, 402, 432, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 718, 727, 733, 736, 739, 749, 750, 751, 752, 753, 754, 782, 789, 792, 794, 796, 798, 800, 802, 806, 808, 814, 817, 841], "matplotlib": [18, 26, 488], "us": [18, 83, 84, 107, 159, 172, 405, 431, 443, 444, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 542, 543, 555, 608, 613, 616, 617, 658], "multi": [18, 420, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 524, 525, 527, 529], "seri": [18, 425], "scroll": 18, "discret": [18, 537], "waterfal": 18, "fft": [18, 31, 33], "evalu": [18, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 660, 671, 673, 676], "overview": 18, "22": [20, 22, 27, 107], "11": [20, 27, 92, 93, 107, 466, 467, 573, 663, 670, 680, 683, 810], "window_length": [21, 28], "option": [21, 23, 25, 26, 28, 31, 33, 55, 57, 61, 68, 97, 107, 118, 120, 124, 133, 182, 183, 192, 197, 230, 235, 269, 273, 420, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 589, 597, 598, 599, 616, 620, 631, 632, 647, 648, 650, 656, 657, 664, 665, 666, 681, 687, 733, 746, 765, 768, 774, 777, 779, 782, 785, 787, 789, 796, 806, 812, 814, 819, 831, 841, 846, 847], "titl": [21, 23, 28, 31, 33, 36, 273, 488], "data_label": [21, 28], "magnitud": [21, 28, 733, 806, 814], "revers": [21, 28, 33, 107], "overwrit": [21, 28], "render": [21, 23, 25, 26, 28, 31, 33, 36], "bin": [21, 733], "rang": 21, "densiti": 21, "weight": [21, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617, 733, 778], "cumul": [21, 107], "bottom": [21, 591], "histtyp": 21, "bar": [21, 733, 748, 749, 750, 751, 752, 753, 754, 765, 794], "align": [21, 33, 107, 617], "mid": 21, "orient": 21, "vertic": [21, 33, 733], "rwidth": 21, "log": [21, 74, 75, 617, 733, 780, 789], "color": [21, 48, 152, 192, 200, 232, 233, 425, 426, 488, 733, 762, 766, 769], "label": [21, 95, 99, 151, 182, 192, 208, 249, 555, 617, 718, 764], "stack": 21, "default_delta": [21, 23, 25, 26, 28], "008333333333333333": [21, 23, 25, 26, 28], "placement": [21, 23, 25, 26, 28, 31, 33, 232, 233], "mpldrawer": [21, 23, 28, 31, 33], "close": [21, 23, 25, 26, 28, 31, 33, 84, 107, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "delta": [21, 23, 25, 26, 28, 31, 33, 244, 246], "move_figur": [21, 23, 25, 26, 28, 31, 33], "move": [21, 23, 25, 26, 28, 31, 33, 107, 269, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 844], "upper": [21, 23, 25, 26, 28, 31, 33, 107, 245, 250], "left": [21, 23, 25, 26, 28, 31, 33, 107, 353, 368, 591], "corner": [21, 23, 25, 26, 28, 31, 33, 196], "pixel": [21, 23, 25, 26, 28, 31, 33, 208, 837], "n": [21, 23, 25, 26, 28, 31, 33, 71, 72, 107, 114, 182, 192, 448, 451, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 553, 733], "fig_manag": [21, 23, 25, 26, 28, 31, 33], "pyplot": [21, 23, 25, 26, 28, 31, 33], "get_current_fig_manag": [21, 23, 25, 26, 28, 31, 33], "geom": [21, 23, 25, 26, 28, 31, 33], "window": [21, 23, 25, 26, 28, 31, 33, 341, 395, 396, 742], "geometri": [21, 23, 25, 26, 28, 31, 33], "dx": [21, 23, 25, 26, 28, 31, 33], "dy": [21, 23, 25, 26, 28, 31, 33], "getrect": [21, 23, 25, 26, 28, 31, 33], "setgeometri": [21, 23, 25, 26, 28, 31, 33], "setposit": [21, 23, 25, 26, 28, 31, 33], "500": [21, 23, 25, 26, 28, 31, 33, 626], "cmap": [23, 33, 488], "norm": 23, "aspect": 23, "interpol": [23, 260], "alpha": [23, 182, 192, 608], "vmin": 23, "vmax": 23, "origin": [23, 249], "extent": 23, "interpolation_stag": 23, "filternorm": 23, "filterrad": 23, "4": [23, 107, 150, 182, 193, 613, 778], "resampl": [23, 122], "url": 23, "event": [23, 491, 493, 495, 532], "21": [24, 96, 107, 234, 447, 541, 642, 677, 699, 711], "09": [24, 38, 52, 63, 87, 427, 428, 530, 531, 533, 544, 545, 567, 568, 678, 697, 726, 735, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 813, 815], "mock": [25, 780], "accept": [25, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "noth": 25, "time_label": 28, "2020": [29, 38, 42, 52, 63, 66, 70, 80, 86, 92, 93, 96, 101, 106, 121, 129, 131, 136, 139, 143, 144, 145, 148, 152, 164, 180, 181, 191, 198, 234, 236, 274, 320, 341, 401, 427, 428, 430, 457, 461, 466, 467, 522, 526, 535, 536, 538, 540, 541, 551, 552, 554, 563, 573, 579, 580, 584, 585, 588, 590, 592, 595, 596, 601, 602, 603, 604, 605, 607, 609, 615, 617, 619, 622, 627, 642, 651, 653, 659, 661, 663, 667, 670, 675, 677, 694, 699, 707, 711, 713, 734, 737, 738, 747, 755, 770], "n_fft": [31, 33, 733], "64": [31, 33, 515], "sampling_r": [31, 33, 472, 475, 476], "2000": [31, 33], "figure_s": [31, 33], "9": [31, 33, 107, 745, 783, 829], "last": [31, 77, 107, 626], "comput": [31, 71, 79, 150, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 626, 685], "fig_siz": [31, 33], "buffer_size_sec": 33, "1": [33, 48, 71, 72, 103, 107, 132, 133, 150, 192, 196, 206, 208, 232, 233, 245, 250, 252, 352, 365, 413, 439, 471, 472, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 586, 587, 589, 591, 593, 594, 608, 613, 616, 617, 626, 733, 769, 774, 785, 787, 802, 819, 831, 846], "viridi": 33, "center": [33, 118, 120, 238], "mayb": [33, 325], "mimick": 33, "librosa": 33, "stft": 33, "short": [33, 107], "fourier": 33, "transform": [33, 209, 542, 543, 597, 598, 599, 600], "step": [33, 107, 491, 493, 495, 529, 532, 733, 736, 739, 792, 794, 796, 798, 800, 802, 806, 808, 810, 814, 817, 841], "size": [33, 107, 122, 196, 197, 209, 251, 449, 450, 451, 453, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 598, 708, 765, 766], "lenght": 33, "han": 33, "smooth": 33, "entri": [37, 95, 99, 107, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 626], "eas": 37, "start": [37, 45, 107, 230, 617, 852], "tensorboard": [37, 484, 486, 489, 724, 778], "visdom": [37, 45, 780], "process": [37, 84, 458, 480, 748], "16": [38, 66, 107, 139, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "type": [39, 41, 43, 48, 50, 51, 67, 68, 69, 74, 75, 77, 79, 88, 89, 90, 91, 103, 104, 107, 110, 146, 147, 149, 155, 157, 158, 159, 163, 165, 166, 167, 168, 169, 172, 175, 178, 179, 182, 183, 184, 187, 188, 189, 195, 196, 197, 202, 219, 235, 238, 266, 269, 273, 331, 332, 333, 334, 335, 336, 337, 355, 356, 364, 365, 367, 395, 398, 399, 400, 425, 429, 432, 439, 442, 445, 462, 463, 464, 465, 472, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 546, 547, 548, 549, 550, 553, 558, 559, 560, 569, 570, 571, 572, 581, 586, 587, 589, 591, 597, 598, 606, 611, 616, 626, 628, 631, 632, 679, 681, 685, 686, 687, 688, 692, 693, 701, 702, 703, 704, 705, 706, 708, 718, 730, 733, 744, 746, 782, 785, 787, 789, 819, 831, 833, 841, 846, 847, 848, 850], "keep_al": 41, "use_asyncio": 41, "param": [41, 79, 83, 95, 97, 99, 269, 323, 405, 413, 442, 443, 444, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 591, 620, 621, 696, 727, 773, 794, 796, 798, 800, 806, 814, 817, 841], "10": [42, 87, 107, 112, 115, 194, 232, 240, 447, 452, 477, 478, 479, 517, 519, 524, 530, 531, 533, 544, 545, 553, 555, 566, 567, 568, 617, 623, 661, 667, 678, 697, 726, 734, 735, 738, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 813, 815], "Will": 45, "server": [45, 780], "ob": 48, "3": [48, 103, 107, 193, 206, 232, 233, 405, 411, 413, 414, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 733, 769, 802], "channel": [48, 182, 192, 252, 500, 529, 597, 733], "observ": [48, 696], "grayscal": 48, "uint8": [48, 107, 733], "numpi": [48, 86, 107, 182, 192, 472, 613, 679, 718, 772, 774], "ndarrai": [48, 88, 89, 90, 91, 103, 107, 108, 110, 118, 120, 122, 127, 128, 132, 133, 134, 135, 137, 138, 149, 150, 151, 165, 166, 167, 168, 169, 178, 179, 182, 192, 196, 197, 232, 233, 238, 273, 471, 472, 475, 476, 477, 478, 479, 532, 733, 763, 772, 774, 792, 802, 808, 817, 837, 841, 850], "arrai": [48, 107, 151, 178, 182, 192, 453, 532, 772, 774, 850], "conform": 48, "observation_spac": 48, "version": [48, 107, 193, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543], "repres": [48, 613], "17": [52, 63, 106, 107, 121, 129, 131, 136, 317, 318, 328, 427, 428, 489, 490, 494, 563, 596, 770], "file_path": 55, "path": [55, 57, 59, 61, 95, 97, 99, 105, 107, 273, 471, 472, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 640, 641, 643, 644, 646, 647, 648, 649, 650, 654, 655, 656, 657, 730, 733, 768, 782, 789, 834, 836], "frame_out_dir": 55, "audio_out_dir": 55, "rate": [55, 500, 626], "frame_format": 55, "jpg": [55, 95, 99], "extract_sound": 55, "ffmpeg_path": [55, 57, 61], "ffmpeg": [55, 57, 61], "frames_dir": [57, 59], "merge_audio": 57, "audio_dir": 57, "merge_dir": 57, "merge_r": 57, "video_path": 61, "start_tim": 61, "40": [61, 107], "00": 61, "stop_tim": 61, "50": [61, 617], "split_dir": 61, "append_tim": 62, "aggreg": [65, 491, 493, 495], "accumul": 65, "collect": [65, 690], "summari": [65, 491, 493, 495], "02": [66, 109, 123, 201, 222, 469, 470, 473, 526, 551, 552, 601, 612, 651, 677, 699, 711, 713, 721, 758], "start_valu": [67, 68, 69], "lambd": [67, 74, 256], "99": [67, 74], "28": [70, 452, 566, 622, 661, 700, 707], "06": [70, 557, 561, 606, 619, 639, 667, 675, 707, 712, 776], "store": [71, 72, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616, 681, 687], "averag": [71, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "current": [71, 72, 107, 241, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 626], "reset": [71, 72, 631, 632], "updat": [71, 72, 77, 107, 230, 500], "val": [71, 72, 79, 107], "measur": [74, 77, 617, 708], "statisticserror": [74, 77], "fmean": [74, 77], "geometric_mean": [74, 77], "harmonic_mean": [74, 77], "mean": [74, 77, 79, 107, 133, 137, 138, 242, 257, 413, 491, 493, 495, 549, 597, 617], "median": [74, 77], "median_group": [74, 77], "median_high": [74, 77], "median_low": [74, 77], "mode": [74, 77, 107, 182, 249, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 574, 613, 816], "multimod": [74, 77], "pstdev": [74, 77], "pvarianc": [74, 77], "quantil": [74, 77], "stdev": [74, 77], "varianc": [74, 77, 79, 107, 133], "keep_measure_histori": [74, 77], "use_disk_cach": [74, 77], "add": [74, 84, 269, 339, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "append": [74, 77, 79], "calc_moving_averag": 74, "window_s": [74, 79], "100": [74, 79, 84, 442, 443, 444], "calc_running_valu": 74, "new_val": 74, "properti": [74, 77, 79, 84, 107, 402, 503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527, 537, 539, 733], "max": [74, 107, 249, 844], "rtype": [74, 77, 79, 84, 206, 458, 503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527, 537, 539, 733], "min": [74, 107, 249, 425, 844], "save": [74, 77, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617, 649, 768], "stat_nam": 74, "project_nam": [74, 75, 316], "non": [74, 107, 208, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617, 660], "config_nam": [74, 75], "directori": [74, 75, 95, 97, 99, 542, 543], "list": [75, 95, 107, 182, 195, 240, 418, 420, 425, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 616, 733, 750, 752, 754, 778, 794, 800, 806, 810, 814, 837, 838, 844], "metricaggreg": 75, "metric_nam": 75, "windowspath": [75, 491, 493, 495, 733, 782, 789], "signal": [77, 125, 127, 128, 132, 133, 134, 135, 137, 138, 142, 472, 475, 476, 477, 478, 479, 742], "length": [77, 107, 127, 534, 844], "dict": [77, 95, 97, 99, 103, 104, 105, 182, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 537, 539, 616, 626, 718, 733], "add_metr": 77, "name": [77, 107, 182, 269, 382, 398, 420, 443, 444, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543], "clear": [77, 107, 660], "remov": [77, 107, 151, 340, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "all": [77, 107, 206, 208, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 591, 613, 616, 617], "item": [77, 95, 99, 107, 532], "from": [77, 95, 107, 159, 172, 182, 183, 230, 340, 416, 420, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 565, 613, 617, 626], "d": [77, 107, 120, 613], "copi": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 696], "shallow": 77, "fromkei": 77, "new": [77, 79, 107, 420, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "dictionari": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616], "kei": [77, 107, 355, 356, 365, 395, 396, 442, 480, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616], "iter": [77, 84, 95, 97, 99, 105, 107, 141, 235, 263, 266, 271, 273, 278, 448, 451, 454, 477, 478, 479, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 565, 617, 620, 621, 733, 749, 750, 751, 752, 753, 754, 778, 785, 787, 819, 831, 846], "set": [77, 95, 99, 103, 107, 150, 206, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 613, 617, 664, 665, 666, 710, 762], "get": [77, 84, 107, 208, 459, 532, 616, 617, 708, 852], "default": [77, 107, 159, 172, 269, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 599, 613, 617, 765, 773], "els": 77, "pop": 77, "k": [77, 107, 187, 188, 189, 769], "v": [77, 107], "specifi": [77, 107, 252, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 565], "correspond": [77, 107, 151, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "If": [77, 107, 206, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617, 708], "found": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "otherwis": [77, 83, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "keyerror": 77, "rais": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "popitem": 77, "2": [77, 103, 107, 113, 116, 132, 165, 167, 168, 169, 182, 183, 206, 232, 233, 252, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 589, 613], "ar": [77, 107, 202, 206, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 616, 617, 708], "lifo": 77, "first": [77, 107, 613, 617, 681, 687], "out": [77, 107, 555, 589, 597, 599, 613], "order": [77, 95, 99, 107, 252, 277, 432, 454, 532, 700, 749, 750], "empti": [77, 107, 690], "remove_metr": 77, "setdefault": 77, "insert": [77, 107, 420], "e": [77, 107, 150, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 597, 598, 599, 613, 616, 617], "f": [77, 107, 443, 444], "present": 77, "ha": [77, 84, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 613, 617, 660], "doe": [77, 107, 426, 431, 532, 597, 599, 606, 765], "lack": 77, "In": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 616], "either": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "case": [77, 107, 616, 647, 648], "thi": [77, 84, 107, 206, 273, 431, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 555, 597, 599, 613, 617, 647, 648, 708], "follow": [77, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "provid": [77, 107, 273, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 727, 733, 736, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 814, 817], "view": [77, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "moving_averag": 79, "running_averag": 79, "run": [79, 480, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "piec": 79, "multiprocess": [81, 83, 84], "cloudpickl": 83, "serial": [83, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "content": [83, 107, 613], "tri": [83, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pickl": [83, 107, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "variabl": [83, 107, 613, 626], "you": [83, 107, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "wish": 83, "wrap": [83, 193, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 565, 616], "func": [84, 442, 613], "max_queue_s": 84, "n_proc": 84, "max_tasks_per_child": 84, "fill_at_construct": 84, "block": [84, 107, 524], "workaround": 84, "python": [84, 107, 491, 493, 495], "extrem": [84, 206], "slow": 84, "interprocess": 84, "commun": 84, "pipe": 84, "The": [84, 95, 99, 107, 133, 150, 420, 459, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 613, 616, 617, 733], "ideal": 84, "solut": 84, "would": [84, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 613], "queue": [84, 85], "appar": 84, "band": 84, "limit": [84, 107], "complet": 84, "task": [84, 85], "batch": [84, 141, 453, 597, 598, 599, 600, 617, 733], "thread": [84, 230], "result": [84, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pool": [84, 85], "fill": [84, 107, 182], "maybe_fil": 84, "full": [84, 107, 206, 613], "put": [84, 107, 206], "re": [84, 453, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 565, 617], "queue_siz": 84, "raise_error": 84, "excptn": 84, "termin": [84, 780], "abc": [85, 503, 727, 736, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 817], "interfac": [85, 107, 230, 727, 733, 736, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 814, 817], "call": [85, 107, 269, 443, 444, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 555, 613, 616, 626, 681, 687, 690, 708], "26": [86, 415, 557, 561, 776], "inp": [88, 89, 90, 91, 462, 463, 464, 465], "unnormalis": [89, 103, 569, 570], "normalis": [91, 133, 182, 471, 472, 500, 571, 572], "12": [92, 93, 107, 129, 131, 136, 139, 258, 320, 431, 441, 466, 467, 551, 552, 651, 694, 747, 755], "validation_percentag": [95, 97, 99, 105], "15": [95, 97, 99, 105, 107, 461, 522, 543, 601, 675, 680, 683, 758], "testing_percentag": [95, 97, 99, 105], "extens": [95, 97, 99, 107, 273, 542, 543], "png": [95, 99, 773], "jpeg": [95, 99], "gif": [95, 99], "is_valid_fil": [95, 97, 99, 542, 543], "callabl": [95, 97, 99, 235, 256, 269, 425, 442, 443, 444, 483, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 553, 606, 611, 631, 632, 749, 750, 751, 752, 753, 754], "build": [95, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "train": [95, 99, 103, 249, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 543, 608, 617, 660, 671, 673, 676], "file": [95, 107, 491, 493, 495, 529, 542, 543, 724, 780], "system": [95, 339, 340], "analyz": 95, "sub": [95, 107], "folder": 95, "split": [95, 99, 539, 543], "them": [95, 107, 206, 503, 518, 613], "stabl": [95, 107, 488], "test": [95, 99, 103, 107, 555], "valid": [95, 99, 103, 151, 542, 543], "structur": [95, 107, 346, 347, 349, 350, 351], "describ": [95, 107], "each": [95, 99, 107, 182, 208, 249, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 597, 598, 613], "image_directori": 95, "string": [95, 107, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543], "contain": [95, 99, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 528, 529, 617, 626], "subfold": [95, 99], "integ": [95, 107], "percentag": [95, 103, 321, 323], "reserv": 95, "ordereddict": [95, 99, 105, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616, 850], "within": [95, 99, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "defin": [95, 99, 107, 503, 518, 613, 708], "indic": [95, 99, 103, 107, 613], "07": [96, 106, 111, 121, 320, 540, 541, 554, 579, 584, 585, 588, 590, 592, 595, 596, 602, 603, 604, 605, 607, 609, 615, 617, 622, 642, 653, 734, 737, 738, 770], "splitenum": [99, 103, 104, 537, 539, 543], "select": [102, 107, 488, 500, 616, 685], "dataset_length": 103, "7": [103, 107], "part": [103, 107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555], "select_shuffled_split_indic": 103, "seed": [103, 107, 124], "select_testing_indic": 103, "select_train_indic": 103, "select_validation_indic": 103, "shuffled_indic": 103, "num": [103, 322], "floor": 103, "data_cat_split": 104, "categori": [105, 182, 537], "magic": 105, "hash": 105, "small": 107, "t": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 613, 617, 714, 733, 761, 763], "transpos": [107, 617], "same": [107, 208, 431, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 613, 617], "self": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 626, 733], "exampl": [107, 240, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 613, 617], "np": [107, 151], "axi": [107, 413], "keepdim": 107, "where": [107, 420, 532, 542, 543, 617], "element": [107, 426], "refer": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 606, 681, 687], "document": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "equival": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "argmax": 107, "maximum": [107, 425], "along": 107, "argmin": 107, "minimum": [107, 617], "detail": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "argpartit": 107, "kth": 107, "kind": 107, "introselect": 107, "partit": 107, "8": 107, "argsort": 107, "sort": [107, 542, 543, 613], "astyp": 107, "cast": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "unsaf": 107, "subok": 107, "dpython": 107, "typecod": 107, "which": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 617, 626], "c": [107, 182, 183, 206, 382, 491, 493, 495, 613, 708, 733, 774, 782, 789, 802], "A": [107, 150, 420, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 617, 700], "control": 107, "memori": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 685, 696, 708], "layout": 107, "fortran": 107, "contigu": 107, "appear": 107, "possibl": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 608], "equiv": 107, "safe": 107, "same_kind": 107, "what": [107, 617], "mai": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "occur": 107, "backward": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 608, 613, 617], "compat": [107, 193, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "should": [107, 182, 192, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 613, 617, 626, 733], "onli": [107, 206, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "byte": [107, 491, 493, 495, 708, 771, 773], "chang": [107, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 718], "allow": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 790], "can": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 608, 613, 616, 617], "preserv": 107, "like": [107, 420, 454, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 617, 778], "float64": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "float32": [107, 472, 597, 598, 676], "convers": [107, 159, 200, 500, 762], "done": [107, 617, 618], "pass": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 613, 617, 708], "through": [107, 608, 613], "forc": 107, "By": 107, "alwai": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "newli": 107, "alloc": [107, 325], "requir": [107, 613], "satisfi": 107, "input": [107, 137, 138, 249, 395, 396, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599, 613, 617, 816], "instead": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "arr_t": 107, "unless": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "other": [107, 458, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617, 802], "condit": 107, "see": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "note": [107, 458, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599, 631, 632, 660], "between": [107, 193, 219, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 844], "simpl": [107, 179, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "one": [107, 503, 518, 532, 613, 616, 617, 775], "multipl": [107, 150], "field": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "numer": [107, 606], "long": 107, "enough": 107, "complexwarn": 107, "when": [107, 269, 405, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 696], "complex": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "To": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 617], "avoid": [107, 555], "own": [107, 208, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "its": [107, 151, 208, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 617], "whose": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 708], "share": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 613], "byteswap": 107, "inplac": [107, 465, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599, 613, 654, 655], "swap": [107, 252], "toggl": 107, "low": [107, 700], "endian": 107, "big": 107, "represent": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "place": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599, 613, 617], "imaginari": 107, "number": [107, 112, 113, 114, 115, 116, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 565, 617], "individu": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "256": [107, 527], "8755": 107, "int16": 107, "map": [107, 182, 491, 493, 495, 748, 749, 750, 751, 752, 753, 754, 804, 806, 814], "hex": 107, "0x1": 107, "0x100": 107, "0x2233": 107, "13090": 107, "0x3322": 107, "b": [107, 150, 187, 188, 189, 529, 532, 613, 733], "ceg": 107, "fac": 107, "s3": 107, "newbyteord": 107, "produc": 107, "differ": [107, 453, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 608, 765], "choos": 107, "choic": 107, "index": [107, 420, 491, 493, 495, 542, 543, 852], "construct": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "clip": [107, 792, 817], "One": [107, 617], "must": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 681, 687], "compress": [107, 491, 493, 495], "conj": 107, "conjug": 107, "conjugate_transpos": 107, "match": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "veri": [107, 431], "similar": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "have": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 555, 565, 613, 617], "argument": [107, 249, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 616], "behavior": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "copyto": 107, "prefer": [107, 696], "6": [107, 197], "flag": [107, 208, 273], "c_contigu": 107, "ctype": 107, "simplifi": 107, "interact": [107, 796], "make": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 599], "easier": 107, "librari": 107, "among": 107, "stride": [107, 586, 587, 589, 593, 594], "below": [107, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "themselv": 107, "possess": 107, "etc": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617, 718], "ctypeslib": 107, "public": 107, "were": [107, 613], "guid": [107, 852], "we": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 613, 617], "omit": 107, "undocu": 107, "well": [107, 208, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617, 765], "privat": 107, "_ctype": 107, "pointer": 107, "area": [107, 150], "correct": [107, 613, 617], "even": 107, "writeabl": 107, "respect": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 762], "arbitrari": 107, "code": [107, 200, 617, 773], "troubl": 107, "includ": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "crash": 107, "user": [107, 182, 183, 381, 382, 383, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 733, 782, 789], "bewar": 107, "exactli": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "_array_interface_": 107, "unlik": 107, "data_a": 107, "kept": 107, "c_void_p": 107, "dealloc": 107, "spelt": 107, "ndim": 107, "basetyp": 107, "p": [107, 599], "platform": 107, "c_intp": 107, "could": [107, 458], "c_int": 107, "c_long": 107, "c_longlong": 107, "depend": [107, 617], "underli": 107, "inform": [107, 182, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 617], "import": [107, 416], "show": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "how": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 708], "mani": [107, 613], "jump": 107, "next": [107, 112, 113, 114, 115, 116, 617], "obj": [107, 616, 708], "particular": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "_as_parameter_": 107, "perhap": 107, "want": [107, 617], "c_doubl": 107, "keep": [107, 532], "shape_a": 107, "c_short": 107, "strides_a": 107, "avail": [107, 417, 555, 665, 685], "still": [107, 206, 458, 613, 617], "someth": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "error": [107, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 765], "as_paramet": 107, "equal": [107, 151, 431, 532, 632, 844], "int32": 107, "31962608": 107, "vari": 107, "c_uint32": 107, "__main__": 107, "lp_c_uint": 107, "0x7ff2fc1fc200": 107, "c_uint": 107, "c_uint64": 107, "c_ulong": 107, "4294967296": 107, "core": [107, 321, 416, 425], "_intern": 107, "c_long_array_2": 107, "0x7ff2fc1fce60": 107, "0x7ff2fc1ff320": 107, "cumprod": 107, "product": 107, "cumsum": 107, "sum": [107, 617], "buffer": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "diagon": 107, "offset": 107, "axis1": 107, "axis2": 107, "read": [107, 230, 486, 493, 852], "previou": 107, "futur": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "restrict": 107, "dump": 107, "back": [107, 420], "load": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 626, 647, 648, 649, 774], "pathlib": [107, 472, 542, 543], "now": [107, 443, 444, 491, 493, 495, 524, 613], "scalar": [107, 420, 733, 746, 778, 782, 785, 787, 789, 812, 819, 831, 841, 846], "assign": [107, 208], "about": [107, 532, 617], "singl": [107, 150, 159, 172, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 591, 617], "style": 107, "segment": 107, "f_contigu": 107, "o": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 769], "owndata": 107, "borrow": 107, "anoth": [107, 206, 532, 708], "written": 107, "lock": 107, "inherit": [107, 718], "creation": [107, 500, 647, 648], "subsequ": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "while": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "remain": 107, "opposit": 107, "made": [107, 613], "howev": 107, "alreadi": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "so": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 617], "under": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "circumst": 107, "alter": 107, "via": 107, "previous": 107, "onto": 107, "attempt": 107, "runtimeerror": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "except": [107, 344, 345], "appropri": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "hardwar": 107, "writebackifcopi": 107, "api": [107, 220], "pyarray_resolvewritebackifcopi": 107, "befor": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "u": [107, 851], "updateifcopi": 107, "deprec": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "fnc": 107, "behav": 107, "ca": 107, "carrai": 107, "fa": 107, "farrai": 107, "access": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "lowercas": 107, "support": [107, 491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "direct": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "setflag": 107, "cannot": [107, 617], "arbitrarili": 107, "truli": 107, "ultim": 107, "owner": 107, "expos": [107, 790], "both": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 617], "simultan": 107, "dimension": [107, 700, 796], "higher": 107, "dimens": [107, 529, 617], "arr": [107, 716], "dim": [107, 716], "It": [107, 206, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 613, 617, 626], "hold": [107, 555], "items": 107, "flat": 107, "over": [107, 150, 325, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "flatit": 107, "instanc": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 733, 804], "act": [107, 527, 597, 599], "similarli": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 708], "subclass": [107, 503, 518, 613, 718, 790, 792, 802, 808, 817], "built": [107, 206, 631, 632], "flatten": [107, 532], "collaps": 107, "arang": 107, "reshap": [107, 500], "row": [107, 182, 532], "major": 107, "column": [107, 491, 493, 495], "ravel": 107, "getfield": 107, "certain": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "determin": 107, "need": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 613], "fit": 107, "complex128": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "32": [107, 244, 448, 451, 453, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "bit": [107, 617], "larger": 107, "than": [107, 443, 444, 616, 631, 632], "itself": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "skip": 107, "begin": 107, "diag": 107, "j": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "our": [107, 613, 617], "sqrt": 107, "0j": 107, "1j": 107, "70710678": 107, "standard": [107, 133, 597, 708], "work": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 606, 617, 708, 765], "int_typ": 107, "interpret": 107, "nd": 107, "z": [107, 613], "suitabl": 107, "longdoubl": 107, "clongdoubl": 107, "becaus": [107, 617], "lose": 107, "void": 107, "speed": [107, 617, 660, 671, 673, 676], "up": [107, 617, 660, 671, 673, 676], "do": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "arithmet": 107, "optim": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 624, 626, 628, 640, 654, 655, 656, 657], "math": 107, "random": [107, 454, 466], "123": [107, 542, 543], "randint": 107, "itemset": 107, "There": 107, "least": 107, "Then": 107, "faster": 107, "two": [107, 150, 206, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 606, 617, 775], "locat": 107, "compar": [107, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "syntax": 107, "increas": [107, 613, 617], "discourag": 107, "problem": [107, 537, 608, 617], "complic": [107, 617], "insid": [107, 206, 613], "loop": [107, 454, 482, 499], "sure": 107, "local": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "look": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "initi": [107, 442, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "amax": 107, "amin": 107, "nbyte": 107, "total": 107, "consum": [107, 708], "zero": [107, 208, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "480": 107, "prod": 107, "new_ord": 107, "newbytord": 107, "specif": [107, 708], "littl": [107, 617], "nativ": 107, "sy": [107, 708], "byteord": 107, "i": [107, 206, 597, 598, 599, 617], "ignor": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "new_arr": 107, "reflect": 107, "nonzero": 107, "rearrang": 107, "wai": [107, 542, 543, 617], "posit": [107, 426, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "smaller": 107, "greater": [107, 631, 632], "behind": 107, "undefin": [107, 613], "final": [107, 252, 617], "onc": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "sinc": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "boolean": [107, 613, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "algorithm": [107, 205, 208], "second": [107, 206], "unspecifi": 107, "thei": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617, 708], "come": [107, 617], "break": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "ti": 107, "paritit": 107, "indirect": 107, "ptp": 107, "peak": 107, "repeat": [107, 555], "free": 107, "separ": [107, 539, 780], "resiz": 107, "new_shap": 107, "refcheck": 107, "count": [107, 420, 617], "check": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 608, 613], "valueerror": 107, "exist": [107, 486, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pypi": 107, "reliabl": 107, "systemerror": 107, "keyword": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 658], "behaviour": [107, 696], "bug": [107, 617], "realloc": 107, "space": [107, 152, 796], "necessari": [107, 613], "consecut": [107, 690], "purpos": 107, "shrink": 107, "enlarg": 107, "abov": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "miss": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "doesn": [107, 613], "referenc": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "prevent": [107, 613], "traceback": 107, "most": [107, 613], "recent": 107, "round": 107, "decim": [107, 405, 491, 493, 495], "around": [107, 230], "searchsort": 107, "side": [107, 606, 660, 775], "sorter": 107, "find": 107, "maintain": [107, 193], "setfield": 107, "ey": 107, "0e": 107, "000": 107, "5e": 107, "323": 107, "write": [107, 727, 736, 780, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 814, 817], "uic": 107, "These": 107, "affect": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "actual": 107, "accord": 107, "never": 107, "unpickl": 107, "without": [107, 206, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "whether": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "properli": 107, "four": 107, "compil": 107, "replac": 107, "letter": 107, "stdin": 107, "line": [107, 151, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 608, 733, 806], "usual": [107, 778], "As": 107, "infer": [107, 273, 491, 493, 495], "fail": [107, 459, 555], "unchang": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "attributeerror": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "incompat": 107, "modif": [107, 613], "desir": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 598], "precis": [107, 405, 411, 413, 414], "obtain": [107, 459], "suggest": 107, "int_": 107, "relev": 107, "further": 107, "calcul": [107, 112, 113, 114, 115, 116, 708], "overflow": 107, "fix": 107, "quicksort": 107, "mergesort": 107, "heapsort": 107, "timsort": 107, "cover": 107, "datatyp": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "retain": 107, "wa": 107, "ad": [107, 420, 488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "lexsort": 107, "partial": 107, "s1": [107, 130], "i8": 107, "squeez": 107, "ax": [107, 761, 762, 765, 767, 768, 777, 779], "std": [107, 413, 546, 548, 549, 597], "ddof": 107, "deviat": [107, 597], "travers": 107, "more": [107, 443, 444, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 616, 617, 696], "explan": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "rst": 107, "imagin": 107, "after": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 608, 613, 660, 671, 673, 676], "known": 107, "tell": 107, "20": [107, 130, 487, 509, 510, 511, 512, 623, 653, 659], "lib": [107, 182, 183], "stride_trick": 107, "as_strid": 107, "13": 107, "14": [107, 117, 119, 143, 180, 198, 236, 274, 430, 573, 612, 745, 783, 784, 786, 829], "18": [107, 126, 246, 457], "19": [107, 191, 745, 783, 829], "23": [107, 145, 148, 468, 540, 579, 584, 585, 588, 590, 592, 595, 713], "48": 107, "224": 107, "1344": 107, "813": 107, "swapax": 107, "interchang": 107, "form": [107, 249, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "tobyt": 107, "raw": [107, 617], "exhibit": 107, "u2": 107, "x00": 107, "x01": 107, "x02": 107, "x03": 107, "tofil": 107, "fid": 107, "sep": [107, 491, 493, 495], "text": [107, 182, 589, 789], "binari": 107, "independ": 107, "recov": 107, "fromfil": 107, "open": [107, 155, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "filenam": 107, "output": [107, 137, 405, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 598, 613, 616, 617, 780, 838], "closest": [107, 208], "conveni": 107, "quick": 107, "storag": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "lost": 107, "good": 107, "intend": [107, 613], "archiv": 107, "transport": 107, "machin": [107, 555], "overcom": 107, "expens": 107, "directli": [107, 613], "bypass": 107, "g": [107, 150, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 613, 616, 617], "gzipfil": 107, "fileno": 107, "bytesio": 107, "tolist": 107, "level": [107, 130, 206, 413, 420], "deep": [107, 617], "nest": [107, 108, 206, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616], "nearest": 107, "builtin": 107, "depth": 107, "recreat": 107, "although": [107, 503, 518], "sometim": 107, "1d": 107, "almost": [107, 405], "uint32": 107, "a_list": 107, "a_tolist": 107, "addition": 107, "2d": [107, 796], "appli": [107, 256, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 599, 600, 613], "recurs": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 739], "0d": 107, "typeerror": 107, "tostr": 107, "alia": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 674, 732], "despit": 107, "trace": [107, 662, 668, 669], "effect": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 660], "vector": [107, 137, 138, 617], "simpli": [107, 150], "addit": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "atleast2d": 107, "achiev": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "newaxi": 107, "matrix": [107, 488], "permut": [107, 453, 454, 617], "th": [107, 617], "becom": 107, "altern": 107, "give": [107, 617], "var": [107, 611], "former": [107, 503, 518], "invok": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "float_": 107, "descriptor": 107, "again": 107, "omiss": 107, "some_dtyp": 107, "caus": 107, "reinterpret": 107, "ndarray_subclass": 107, "just": [107, 555, 613, 617, 778], "per": [107, 529, 532], "regular": 107, "superfici": 107, "shown": [107, 206], "print": [107, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 631, 632], "therefor": 107, "versu": 107, "int8": 107, "513": 107, "xv": 107, "i1": 107, "recarrai": 107, "normal": [107, 130, 133, 488, 597], "width": [107, 182, 188, 189, 192, 260], "i2": 107, "raster": [110, 228, 700, 802], "radiu": [118, 120, 238], "box": [122, 144, 146, 147, 150, 151, 182, 249, 581, 718], "reducing_gap": 122, "randomst": 124, "s2": 130, "db_ratio": 130, "log_multipli": 130, "mix": [130, 617], "clean": [130, 764], "speech": 130, "nois": [130, 133], "variou": [130, 202], "snr": 130, "db": 130, "fs": 130, "power": 133, "white": [133, 762], "gaussian": 133, "mu": 133, "sigma": 133, "squar": [137, 138], "root": [138, 542, 543], "min_length": 140, "opencv": [143, 206, 230], "box_a": [149, 150], "box_b": [149, 150], "jaccard": [150, 249], "overlap": [150, 249], "intersect": [150, 219], "num_box": 150, "bbox": [151, 182, 249], "x1": 151, "y1": 151, "x2": 151, "y2": 151, "img": [155, 163, 175, 184, 196, 197, 249, 772], "cleanupmethod": 155, "colorconversionenum": 159, "gray2bgr": 159, "bgr": [159, 172], "cv2": [159, 172, 193, 230, 235], "compon": [159, 172, 206, 208], "toedgemethodenum": 163, "canni": 163, "to_gray_method": 172, "tograymethodenum": 172, "noisefiltermethodenum": 175, "bilateral_filt": 175, "input_imag": 178, "lower_bound": 178, "upper_bound": 178, "179": 178, "255": [178, 183, 192, 269, 733], "thresholdmethodenum": 179, "pil": [182, 183, 772], "score": [182, 555], "outline_width": [182, 183], "outline_alpha": [182, 183], "score_color_fil": 182, "score_font": 182, "imagefont": [182, 183], "christian": [182, 183, 491, 493, 495, 520, 733, 782, 789], "anaconda3": [182, 183], "env": [182, 183], "py38": [182, 183], "site": [182, 183], "packag": [182, 183], "py": [182, 183, 488, 606], "score_format": 182, "2f": 182, "rgba": 182, "height": [182, 188, 189, 192, 260], "xmin": 182, "ymin": 182, "xmax": 182, "ymax": 182, "NOT": [182, 431, 617, 618], "class_name_map": 182, "id": 182, "visual": [182, 608, 617, 778], "background": 182, "font": [182, 232, 233], "drawn": 182, "x_min": 183, "y_min": 183, "x_max": 183, "y_max": 183, "score_color": 183, "display_str": 183, "font_typ": 183, "outline_color": 183, "color_fill_scor": 183, "theta": [187, 188, 189], "mask": [192, 209], "border": [192, 202, 598], "border_width": 192, "border_color": 192, "line_typ": 192, "linetypeenum": 192, "anti_alias": 192, "findcontour": 193, "contour": [193, 205, 206], "hierarchi": [193, 206], "rotation_vector": [196, 197], "translation_vector": [196, 197], "camera_matrix": [196, 197], "dist_coef": [196, 197], "boundari": [202, 206], "denot": 202, "approxim": [205, 606], "retr_extern": 206, "retriev": [206, 613], "outer": 206, "retr_list": 206, "establish": 206, "hierarch": 206, "relationship": 206, "retr_ccomp": 206, "organ": 206, "At": [206, 617], "top": [206, 591], "extern": 206, "hole": 206, "connect": [206, 208], "retr_tre": 206, "reconstruct": 206, "demo": 206, "distancetransform": 208, "ccomp": 208, "src": [208, 230], "distanc": [209, 844], "rectangl": [219, 766], "videocaptur": [220, 230, 235], "backend": [220, 316], "identifi": 220, "thread_nam": 230, "group": [230, 626], "async": [230, 439], "wrapper": 230, "alik": 230, "isopen": 230, "frame": [230, 418], "video": [230, 733, 817], "stop": [230, 499], "31": [231, 485, 486], "fp": 232, "140": 232, "format_str": 232, "thick": [232, 233], "font_scal": [232, 233], "video_stream": 235, "coder": 235, "ident": [235, 405, 506, 507, 510, 521], "compos": 240, "sever": [240, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "augment": [240, 617], "togeth": 240, "centercrop": 240, "totensor": [240, 600], "lower": [245, 250, 796], "crop": [249, 598], "being": [249, 443, 444, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 599, 733], "dure": [249, 608, 613], "tensor": [249, 252, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 546, 547, 548, 549, 550, 569, 570, 571, 572, 574, 581, 597, 598, 599, 606, 613, 616, 617, 679, 727, 733, 792, 802, 808, 817, 841], "pt": 249, "adjust": [249, 765], "300": 251, "tripl": 252, "eg": [252, 616, 796], "target_s": 260, "interpolationenum": 260, "linear": [260, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "proper": [260, 443, 444], "cv": 260, "crazi": 260, "ps": [263, 271], "wait_tim": [263, 271, 439], "33": [263, 271], "ret_val": 266, "char": 266, "q": [266, 273], "x1b": [266, 273], "window_nam": 269, "trackbar_nam": 269, "min_val": 269, "max_val": 269, "callback": [269, 483, 631, 632], "sink": [269, 780], "windowflagenum": 273, "wait": 273, "draw_titl": 273, "save_path": 273, "exit_char": 273, "extensionenum": 273, "exr": 273, "min_default_s": 273, "200": 273, "max_default_s": 273, "600": 273, "caution": 273, "imshow": 273, "anim": 273, "hurt": 273, "perform": [273, 503, 518, 555, 750, 752, 754], "deviceorderenum": 277, "pci_bus_id": 277, "devic": [278, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 553, 597, 598, 664, 665, 666, 679, 696], "backend_nam": 316, "win32": 316, "expected_s": 319, "1024": [319, 329, 685], "of_remain": [321, 323], "alsodecor": [321, 660, 662, 664, 665, 666, 668, 669, 671, 672, 673, 676], "request": [321, 493, 685], "global_pin_memori": 323, "neg": [325, 420, 426, 617], "expected_size_mb": 329, "08": [341, 401, 469, 470, 473, 694, 747, 755], "interv": [352, 353, 357, 358, 365, 366, 368, 369, 370, 443, 444, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "button": [352, 353, 359, 360, 368], "primari": [352, 359, 360], "durat": [352, 353, 357, 358, 359, 360, 361, 362, 363, 366, 368], "tween": [352, 353, 357, 358, 359, 360, 361, 362, 363, 366, 368], "logscreenshot": [352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370], "_paus": [352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370], "xoffset": [361, 362], "yoffset": [361, 362], "rel": [361, 362, 363, 617], "messag": [369, 370], "task_nam": [381, 383], "task_fold": [381, 382, 383], "desc": 382, "No": [382, 613], "action_path": 382, "cmd": 382, "ex": 382, "action_argu": 382, "exit": 382, "stop_if_on_batteri": 382, "enabl": [383, 613, 621, 669], "hwnd": [395, 396], "start_sec": [395, 396], "hold_sec": [395, 396], "send": [395, 396], "keyboard": [395, 396], "whndl": 399, "all_set": 402, "get_dark_mod": 402, "set_dark_mod": 402, "bold": 405, "num_decim": 405, "df": [407, 408, 409, 412, 413], "max_provider_df": 411, "datafram": [411, 412, 413, 414, 417, 418, 491, 493, 495], "entry_provider_df": [411, 414], "header_rot": [411, 414], "max_colwidth": [411, 414], "1000": [411, 414, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "group_bi": 412, "mean_col": 413, "std_col": 413, "latex": [413, 768], "pm": 413, "plu": 413, "minu": 413, "formatt": 414, "contextlib": 416, "suppress": 416, "panda": [416, 417, 425], "common": [416, 555, 617, 700], "settingwithcopywarn": 416, "export": 417, "old_index": 420, "loc": 420, "multiindex": 420, "expand": [420, 613, 774], "front": 420, "rear": 420, "end": [420, 491, 493, 495, 617], "ndframe": 425, "colorenum": 425, "yellow": 425, "attr_templ": 425, "attrenum": 425, "bg": 425, "extreme_func": 425, "ndframeextremeenum": 425, "highlight": 425, "datefram": 426, "green": 426, "red": 426, "nan": 426, "chain": 431, "thing": 431, "mro": 432, "resolut": 432, "min_interv": [442, 443, 444], "recal": 442, "later": [442, 649, 681, 687], "ensur": [443, 444, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617], "often": [443, 444, 617], "max_freq": [443, 444], "n_tupl": 445, "namedtupl": [445, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "drop_not_ful": [448, 451], "batch_siz": [449, 450, 453], "cycl": [453, 454], "itertool": 454, "everytim": 454, "exhaust": 454, "chanc": 458, "port": [458, 460, 730], "taken": 458, "host": [459, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "ip": 459, "unknown": 459, "strictnumb": [462, 463, 464, 465], "warn": [465, 524], "scipi": 469, "wav_file_nam": [471, 472], "max_resolut": [475, 476], "decimation_factor": [477, 478, 479], "return_indic": [477, 478, 479], "truncate_last_indivis": [477, 478, 479], "truncate_last_undivis": 477, "divis": 477, "has_x_serv": [482, 483], "abstractcontextmanag": [482, 631, 632], "context": [482, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 658], "earli": [482, 525], "plugin": 486, "go": [486, 613, 617], "finish": [486, 617, 618, 660, 671, 673, 676, 733], "y_true": 488, "y_pred": 488, "confus": [488, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "linearsegmentedcolormap": 488, "mostli": 488, "stolen": 488, "http": [488, 491, 493, 495, 616], "scikit": 488, "learn": [488, 500, 537, 555, 617, 626], "org": [488, 491, 493, 495], "auto_exampl": 488, "model_select": 488, "plot_confusion_matrix": 488, "html": 488, "sphx": 488, "glr": 488, "auto": [488, 685, 733, 737], "model": [488, 500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 528, 529, 532, 553, 555, 606, 608, 614, 616, 617, 640, 641, 652, 654, 655, 656, 657, 664, 665, 666, 671, 672, 673, 727, 733, 736, 739, 782], "classification_report": 488, "stat": [488, 744, 841], "path_to_events_file_": [491, 493, 495], "size_guid": [491, 493, 495], "save_to_disk": [491, 493, 495], "tensorboardeventexport": [491, 495], "export_audio": [491, 493, 495], "tag": [491, 493, 495, 733, 736, 746, 782, 785, 787, 789, 792, 794, 796, 798, 800, 802, 806, 808, 810, 812, 814, 817, 819, 827, 828, 831, 841, 846], "out_dir": [491, 493, 495], "projectswin": [491, 493, 495, 733, 789], "github": [491, 493, 495, 733, 789], "pyth": [491, 493, 495, 733, 789], "doc": [491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 733, 789], "export_distribut": [491, 493, 495], "export_graph": [491, 493, 495], "export_histogram": [491, 493, 495], "www": [491, 493, 495], "tensorflow": [491, 493, 495], "api_doc": [491, 493, 495], "tf": [491, 493, 495, 617], "histogram": [491, 493, 495, 733, 800], "export_imag": [491, 493, 495], "export_line_plot": [491, 493, 495], "export_scalar": [491, 493, 495], "pkl": [491, 493, 495], "export_tensor": [491, 493, 495], "pr_curve_export_csv": [491, 493, 495], "index_label": [491, 493, 495], "epoch": [491, 493, 495, 626, 641], "path_or_buf": [491, 493, 495], "filepath": [491, 493, 495], "writebuff": [491, 493, 495], "na_rep": [491, 493, 495], "float_format": [491, 493, 495], "hashabl": [491, 493, 495], "header": [491, 493, 495], "bool_t": [491, 493, 495], "encod": [491, 493, 495, 529, 773], "compressionopt": [491, 493, 495], "quot": [491, 493, 495], "quotechar": [491, 493, 495], "line_termin": [491, 493, 495], "chunksiz": [491, 493, 495], "date_format": [491, 493, 495], "doublequot": [491, 493, 495], "escapechar": [491, 493, 495], "strict": [491, 493, 495, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "storage_opt": [491, 493, 495], "storageopt": [491, 493, 495], "drop": [491, 493, 495], "scalar_export_csv": [491, 493, 495], "tag_test": [491, 493, 495], "type_str": [491, 493, 495], "tagtypeenum": [491, 493, 495], "tensor_export_csv": [491, 493, 495], "fun": 499, "torch": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 553, 591, 597, 598, 606, 613, 658, 662, 664, 665, 666, 668, 669, 676, 690, 708, 736], "dataset": [500, 555, 617], "freez": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "baselin": 500, "initialis": 500, "optimis": [500, 641, 654, 655, 656, 657], "schedul": 500, "persist": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "tool": 500, "clone": [500, 613], "soft": 500, "cuda": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 553, 665, 690], "automat": [500, 613, 658], "target": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 542, 543, 606, 635, 636], "global": [500, 664, 665, 666, 681, 687], "handl": [500, 503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 658, 802], "input_shap": [503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "output_shap": [503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "intern": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527], "state": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 532, 626, 690], "nn": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 553, 616, 708], "scriptmodul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527], "add_modul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "child": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "fn": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "everi": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 626], "submodul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616], "children": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "typic": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "init": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "no_grad": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "def": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "init_weight": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "m": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 562], "fill_": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "net": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 608, 617], "sequenti": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 748, 753, 754], "in_featur": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "out_featur": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "bia": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "bfloat16": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "modifi": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "yield": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "member": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "buf": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "20l": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "1l": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "5l": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "immedi": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "cpu": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 597, 598, 664, 666, 679], "gpu": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "associ": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "live": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "doubl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 591, 613], "dump_patch": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "better": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "bc": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "load_state_dict": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 626], "state_dict": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 626], "_metadata": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "thu": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "convent": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "_load_from_state_dict": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "shall": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "bump": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "eval": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "dropout": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "batchnorm": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "disabl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 662, 668, 669], "grad": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "comparison": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "mechan": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "extra_repr": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "extra": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "custom": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "your": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 616, 617], "forward": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 614], "overridden": [503, 518, 613], "recip": [503, 518], "afterward": [503, 518], "care": [503, 518], "regist": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "hook": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 737], "latter": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "silent": [503, 518], "get_buff": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "throw": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "docstr": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "get_submodul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "correctli": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "fulli": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "qualifi": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "invalid": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "resolv": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "get_extra_st": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "set_extra_st": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pickleabl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "guarante": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "get_paramet": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "let": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "sai": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "diagram": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "net_b": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "net_c": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "conv": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "runtim": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "degre": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "queri": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "against": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "named_modul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "transit": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "half": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "descend": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "strictli": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 631], "enforc": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "missing_kei": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "unexpected_kei": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "unexpect": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "network": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 528, 529, 617], "duplic": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "l": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "idx": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 537, 613], "named_buff": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "prefix": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 739], "prepend": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "running_var": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "named_children": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "conv4": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "conv5": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "memo": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "remove_dupl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "named_paramet": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_backward_hook": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "removablehandl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "favor": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_full_backward_hook": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_buff": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "consid": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 631], "running_mean": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "alongsid": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "oper": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613, 617, 708], "num_featur": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_forward_hook": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "signatur": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "won": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_forward_pre_hook": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pre": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "gradient": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 617], "grad_input": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "grad_output": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "technic": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "reason": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "receiv": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "caller": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_modul": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "register_paramet": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "requires_grad_": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "requires_grad": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 613], "autograd": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 606, 613], "record": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "help": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 718], "finetun": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "gan": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "sample_input": [503, 506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "share_memori": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "share_memory_": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "destin": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "keep_var": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "whole": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "non_block": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "memory_format": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "channels_last": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "Its": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "integr": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "asynchron": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "pin": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529, 696], "4d": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "1913": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "3420": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "5113": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "2325": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "gpu1": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "1914": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "5112": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "2324": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "float16": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "cdoubl": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "3741": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "2382": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "5593": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "4443": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "ones": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "6122": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "1150": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "to_empti": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "dst_type": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "xpu": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "zero_grad": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "set_to_non": [503, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 524, 525, 527, 529], "hidden_lay": [506, 507, 510, 521], "hidden_layer_activ": [506, 507, 510, 521, 527], "relu": [506, 507, 510, 521, 527], "output_activ": [506, 507, 510, 521], "use_bia": [506, 507, 510, 521], "use_dropout": [506, 507, 510, 521], "dropout_prob": [506, 507, 510, 521], "auto_build_hidden_layers_if_non": [506, 507, 510, 521], "input_multipli": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "max_layer_width": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "output_multipli": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "default_init": [506, 507, 510, 521], "fan_in_init": [506, 507, 510, 521], "mlp": [506, 507, 509, 510, 511, 512, 515, 519, 523, 524, 525, 526, 527, 529, 532], "construct_progressive_hidden_lay": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "_input_shap": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "_output_shap": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "infer_input_shap": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "infer_output_shap": [506, 507, 509, 510, 511, 512, 515, 517, 519, 521, 524, 525, 527], "entropi": 507, "sampl": [507, 542, 543, 555, 565], "mean_head_activ": [509, 510, 511, 512], "min_std": [509, 510, 511, 512], "max_std": [509, 510, 511, 512], "multivariatenorm": 510, "fixed_log_std": 512, "heads_hidden_s": 515, "r_hidden_lay": [517, 519], "recurrentcategoricalmlp": 517, "hidden_x": 517, "recurrent_input_s": 518, "hidden_s": 518, "layer": [520, 529, 608, 617], "perceptron": 520, "heider": 520, "nielsen": 520, "oooo": 521, "xx": 521, "fc1": 521, "hidden_layer_s": 521, "bias": 521, "fc2": 521, "fc3": 521, "0000": 521, "fusion": [523, 524, 525], "variant": [523, 526], "fusion_hidden_multipli": 524, "late": 524, "quit": 524, "botch": 524, "job": 524, "been": [524, 565, 613], "fission": 526, "24": [526, 842], "disjunction_s": 527, "subnet_s": 527, "128": [527, 733], "upon": 528, "featur": [528, 529], "templat": 528, "num_input": 529, "num_output": 529, "a_valu": 529, "b_valu": 529, "layer_channel": 529, "preprocess": [529, 617], "constructor": 529, "uv": 529, "disk": 529, "parallel": [532, 748, 749, 750, 751, 752], "environ": 532, "explor": 532, "basic": [532, 617], "loos": 532, "action": [532, 794], "reward": 532, "lstm": 532, "nd_size": 534, "superviseddataset": 537, "categor": [537, 794], "orderedset": 537, "idx_to_str": 537, "predictor_shap": [537, 539], "response_shap": [537, 539], "split_nam": [537, 539], "str_to_idx": 537, "compris": 539, "vision": 540, "loader": [542, 543], "dataload": [542, 543, 553], "target_transform": [542, 543], "has_file_allowed_extens": [542, 543], "visiondataset": [542, 543], "arrang": [542, 543], "class_x": [542, 543], "xxx": [542, 543], "ext": [542, 543], "xxy": [542, 543], "xxz": [542, 543], "class_i": [542, 543], "nsdf3": [542, 543], "asd932_": [542, 543], "randomcrop": [542, 543, 598], "corrupt": [542, 543], "_categori": [542, 543], "alphabet": [542, 543], "_data": 542, "class_index": [542, 543], "numpy_util": 543, "valid_percentag": 543, "test_percentag": 543, "_data_categori": 543, "pytorch": [544, 601, 616, 638, 677, 699, 733], "log_prob": 547, "log_std": 549, "prob": 550, "evaluation_load": 553, "mapper": 553, "kws_sink": 553, "29": [554, 603, 604, 605, 607, 609], "n_split": 555, "subset": 555, "methodolog": 555, "mistak": 555, "seen": 555, "perfect": 555, "anyth": 555, "yet": 555, "unseen": 555, "situat": 555, "overfit": [555, 617], "practic": 555, "supervis": 555, "experi": 555, "batch_sampl": 565, "num_iter": 565, "start_it": 565, "batchsampl": 565, "until": 565, "rgb": [574, 772, 774], "lot": 574, "OF": [574, 660], "assumpt": 574, "date": 582, "h_w": [586, 589, 591, 593], "kernel_s": [586, 587, 589, 593, 594], "dilat": [586, 587, 589, 593, 594], "h_w_in": [587, 594], "h_w_out": [587, 594], "pool_siz": 589, "h_": 589, "leftlfloorfrac": 589, "1rightrfloor": 589, "w_": 589, "pad_siz": 591, "quad": 591, "right": 591, "definit": 591, "out_pad": [593, 594], "mutat": [597, 599], "randomhorizontalflip": 599, "probabl": [599, 617, 733, 794], "flip": 599, "loss_fn": 606, "iinput": 606, "epsilon": 606, "1e": [606, 712], "error_toler": 606, "pleas": 606, "gradcheck": 606, "line_width": 608, "vanish": 608, "explod": 608, "usag": 608, "var_grad_fn": 610, "input_img": [613, 614], "jvp": 613, "ctx": 613, "formula": 613, "differenti": 613, "got": 613, "r": 613, "mark_dirti": 613, "mark": 613, "matter": 613, "staticmethod": 613, "x_npy": 613, "once_differenti": 613, "lead": 613, "wrong": [613, 617], "engin": 613, "know": 613, "mark_non_differenti": 613, "effici": 613, "save_for_backward": 613, "g1": 613, "g2": 613, "saved_tensor": 613, "zeros_lik": 613, "index_add_": 613, "oppos": 613, "incorrect": 613, "leak": 613, "applic": 613, "graph": [613, 727, 733], "saved_tensors_hook": 613, "weren": 613, "op": 613, "extend": 613, "grad_out": 613, "gx": 613, "gy": 613, "gz": 613, "save_for_forward": 613, "x_t": 613, "y_t": 613, "_": 613, "vjp": 613, "fwad": 613, "dual_level": 613, "a_dual": 613, "make_du": 613, "set_materialize_grad": 613, "materi": 613, "prior": 613, "simplefunc": 613, "induc": 613, "needs_input_grad": 613, "use_cuda": 614, "return_lay": 616, "intermedi": 616, "activ": 616, "current_module_nam": 616, "desired_output_nam": 616, "submodule1": 616, "submodule2": 616, "submodule3": 616, "mid_output": 616, "model_output": 616, "those": [616, 708], "reduce_getattr": 616, "attr": 616, "wonder": 616, "beauti": 616, "simplif": 616, "stackoverflow": 616, "com": 616, "question": 616, "31174295": 616, "getattr": 616, "setattr": 616, "31174427": 616, "noredirect": 616, "comment86638618_31174427": 616, "verifi": 617, "n_class": 617, "softmax": 617, "deriv": 617, "l2": 617, "regress": 617, "huber": 617, "loss": [617, 641, 742], "imbalanc": 617, "ratio": 617, "logit": 617, "converg": 617, "elimin": 617, "hockei": 617, "stick": 617, "curv": 617, "few": [617, 700], "capac": 617, "filter": [617, 733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "reach": 617, "lowest": 617, "perfectli": 617, "somewher": 617, "continu": [617, 780], "stage": 617, "decreas": 617, "hopefulli": 617, "underfit": 617, "toi": 617, "try": 617, "did": 617, "down": 617, "unambigu": 617, "y_hat": 617, "sess": 617, "That": 617, "goe": 617, "decod": 617, "truth": [617, 733, 810], "me": 617, "reveal": 617, "backprop": 617, "chart": [617, 794, 806, 814], "broadcast": 617, "ve": 617, "across": 617, "peopl": 617, "inadvert": 617, "depress": 617, "fact": 617, "okai": 617, "relat": 617, "trivial": 617, "strategi": 617, "autoregress": 617, "paramat": 619, "lr": [624, 626], "mileston": 626, "gamma": 626, "warmup_factor": [626, 628], "3333333333333333": 626, "warmup_it": [626, 628], "last_epoch": 626, "_lrschedul": 626, "get_last_lr": 626, "get_lr": 626, "print_lr": 626, "is_verbos": 626, "__dict__": 626, "patienc": [631, 632], "writer": [631, 632], "minim": [631, 632], "less": [631, 632], "improv": 631, "model_path": 643, "config_save_path": [644, 649, 650, 657], "config_file_path": [644, 649, 656], "model_nam": [647, 648, 649, 654, 655, 656], "model_directori": [647, 648, 654, 655], "raise_on_failur": [647, 648], "lastest": [647, 648], "appendix": [647, 648, 649], "save_directori": [649, 656], "prompt_on_failur": 649, "loaded_config_file_path": [649, 650, 657], "raise_on_exist": [649, 650], "timestamp": 649, "model_save_path": [650, 657], "optimiser_save_path": 657, "setup": 658, "__enter__": 658, "destruct": 658, "__exit__": 658, "using_cuda": 660, "THE": 660, "cach": [660, 690], "recover": 660, "no_side_effect": [662, 664, 665, 666, 668, 669, 671, 672, 673, 676], "jit": [662, 668, 669], "torchtrainsess": 674, "pi": 679, "overrid": [681, 687], "manual": [681, 687], "expected_memory_usage_mb": 685, "highest": 685, "capabl": 685, "device_prefer": 687, "torchdeviceenum": 687, "explicitli": 687, "cuda_device_idx": 688, "destroi": 690, "ipc": 690, "empty_cach": 690, "ipc_collect": 690, "num_work": 696, "update_num_thread_for_pinned_load": 696, "weird": 696, "worker": 696, "72163": 698, "reproduc": 698, "grid": 700, "routin": 708, "much": 708, "getsizeof": 708, "sizeof": 708, "tensoris": 710, "ep": 712, "_tensor": 715, "el": 716, "manag": 718, "Not": [718, 733, 737], "due": 718, "default_col": 718, "numpy_dtyp": 722, "torch_dtyp": 723, "input_to_model": [727, 733], "log_dir": 730, "6006": 730, "tensorboardpytorchwrit": 732, "summary_writer_kw": 733, "imagewritermixin": [733, 841], "graphwritermixin": 733, "histogramwritermixin": [733, 739], "barwritermixin": 733, "linewritermixin": 733, "spectrogramwritermixin": 733, "figurewritermixin": 733, "instantiationwritermixin": 733, "precisionrecallcurvewritermixin": 733, "embedwritermixin": 733, "moduleparameterwritermixin": 733, "videowritermixin": 733, "meshwritermixin": 733, "multichannelmethodenum": [733, 802, 841], "value_error": 733, "x_label": [733, 794, 806, 814], "y_label": [733, 794, 806, 814], "global_step": 733, "walltim": 733, "blip": [733, 746, 782, 785, 787, 789, 812, 819, 831, 841, 846], "step_i": [733, 746, 782, 785, 787, 789, 812, 819, 831, 841, 846], "emb": [733, 796], "respons": [733, 796], "metadata": [733, 796], "label_img": [733, 796], "metadata_head": 733, "bork": 733, "exclud": [733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "inclus": [733, 746, 782, 785, 787, 789, 819, 831, 841, 846], "use_strict_trac": 733, "max_bin": 733, "data_format": 733, "nchw": [733, 802, 841], "multi_channel_method": 733, "seper": 733, "seperate_channel_postfix": 733, "seperate_image_postfix": 733, "dataformat": [733, 802, 841], "chw": 733, "plot_kw": [733, 806, 814], "mesh": [733, 808], "here": 733, "number_of_vertic": 733, "lie": 733, "face": [733, 762], "precision_recall_curv": [733, 810], "num_threshold": [733, 810], "127": 733, "spectrogram": [733, 814], "sample_r": [733, 814], "512": [733, 814], "step_siz": 733, "frequenc": 733, "hz": 733, "sec": 733, "frame_r": [733, 817], "input_dim": [733, 817], "videoinputdimsenum": [733, 817], "ntchw": [733, 817], "fastest": 733, "expect": 733, "vid_tensor": 733, "summarywrit": 733, "mixin": 736, "publish": 737, "visualis": [742, 796], "episod": 742, "moving_loss": 742, "moving_reward": 742, "episode_length": 742, "moving_length": 742, "rgb_arrai": 742, "configur": 742, "tqdm": [747, 748], "progress": [748, 749, 750, 751, 752, 753, 754], "unord": [751, 752], "ax_": 762, "invert": 762, "black": 762, "edg": 762, "troublesom": 764, "symbol": 764, "legend": 765, "linestyl": [765, 769], "bbox_inch": 768, "tight": 768, "transpar": 768, "attempt_fix_empty_white_spac": 768, "post_process_crop": 768, "suffix": 768, "pdf": 768, "fig": 768, "embed": 768, "prop_cycl": 769, "cycler": 769, "marker": 769, "byte_arrai": 771, "data_path": 774, "desired_s": 774, "image1": 775, "image2": 775, "merg": 775, "decai": 778, "rep": 778, "invers": 778, "track": 780, "comma": 780, "get_csv_writ": 782, "textio": 782, "get_logg": 789, "write_to_std_out": 789, "logger": 789, "msg": 789, "unifi": 790, "audio": 792, "y_error": 794, "project": 796, "3d": 796, "bonu": 802, "multichannel": 802, "instanti": [804, 810], "num_fft": 814, "col": 835, "scale": [836, 837], "60": 836, "join": 838, "metriccollect": 841, "scalarwritermixin": 846, "pip": 851, "draugr": 851, "search": 852, "page": 852}, "objects": {"": [[0, 0, 0, "-", "draugr"]], "draugr": [[1, 1, 1, "", "dist_is_editable"], [2, 0, 0, "-", "dlib_utilities"], [15, 0, 0, "-", "drawers"], [46, 0, 0, "-", "extensions"], [52, 0, 0, "-", "ffmpeg_utilities"], [62, 1, 1, "", "get_version"], [63, 0, 0, "-", "jax_utilities"], [64, 0, 0, "-", "matlab_utilities"], [65, 0, 0, "-", "metrics"], [81, 0, 0, "-", "multiprocessing_utilities"], [86, 0, 0, "-", "numpy_utilities"], [143, 0, 0, "-", "opencv_utilities"], [274, 0, 0, "-", "os_utilities"], [403, 0, 0, "-", "pandas_utilities"], [427, 0, 0, "-", "pygame_utilities"], [430, 0, 0, "-", "python_utilities"], [466, 0, 0, "-", "random_utilities"], [469, 0, 0, "-", "scipy_utilities"], [484, 0, 0, "-", "tensorboard_utilities"], [496, 0, 0, "-", "threading_utilities"], [500, 0, 0, "-", "torch_utilities"], [747, 0, 0, "-", "tqdm_utilities"], [756, 0, 0, "-", "visualisation"], [780, 0, 0, "-", "writers"]], "draugr.dlib_utilities": [[3, 0, 0, "-", "dlib_utilities"], [10, 0, 0, "-", "exclude"], [13, 0, 0, "-", "facealigner"]], "draugr.dlib_utilities.dlib_utilities": [[4, 2, 1, "", "Dlib5faciallandmarksindices"], [5, 2, 1, "", "Dlib68faciallandmarksindices"], [6, 1, 1, "", "eye_aspect_ratio"], [7, 1, 1, "", "mouth_aspect_ratio"], [8, 1, 1, "", "rect_to_bounding_box"], [9, 1, 1, "", "shape_to_ndarray"]], "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "slice"]], "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "slice"]], "draugr.dlib_utilities.exclude": [[11, 0, 0, "-", "flags"]], "draugr.dlib_utilities.exclude.flags": [[12, 2, 1, "", "TupleFlag"]], "draugr.dlib_utilities.exclude.flags.TupleFlag": [[12, 3, 1, "", "__init__"]], "draugr.dlib_utilities.facealigner": [[14, 1, 1, "", "align_face"]], "draugr.drawers": [[16, 0, 0, "-", "drawer"], [18, 0, 0, "-", "mpl_drawers"], [34, 0, 0, "-", "opencv_drawers"]], "draugr.drawers.drawer": [[17, 2, 1, "", "Drawer"]], "draugr.drawers.drawer.Drawer": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "draw"]], "draugr.drawers.mpl_drawers": [[19, 0, 0, "-", "discrete_scroll_plot"], [20, 0, 0, "-", "distribution_plot"], [22, 0, 0, "-", "image_stream_plot"], [24, 0, 0, "-", "mpldrawer"], [27, 0, 0, "-", "series_scroll_plot"], [29, 0, 0, "-", "spectral"]], "draugr.drawers.mpl_drawers.distribution_plot": [[21, 2, 1, "", "DistributionPlot"]], "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "close"], [21, 3, 1, "", "draw"], [21, 3, 1, "", "move_figure"], [21, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.image_stream_plot": [[23, 2, 1, "", "ImageStreamPlot"]], "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "close"], [23, 3, 1, "", "draw"], [23, 3, 1, "", "move_figure"], [23, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer": [[25, 2, 1, "", "MockDrawer"], [26, 2, 1, "", "MplDrawer"]], "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "close"], [25, 3, 1, "", "draw"], [25, 3, 1, "", "move_figure"], [25, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "close"], [26, 3, 1, "", "draw"], [26, 3, 1, "", "move_figure"], [26, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.series_scroll_plot": [[28, 2, 1, "", "SeriesScrollPlot"]], "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "close"], [28, 3, 1, "", "draw"], [28, 3, 1, "", "move_figure"], [28, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral": [[30, 0, 0, "-", "fast_fourier_transform"], [32, 0, 0, "-", "fast_fourier_transform_spectrogram"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform": [[31, 2, 1, "", "FastFourierTransformPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "close"], [31, 3, 1, "", "draw"], [31, 3, 1, "", "move_figure"], [31, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram": [[33, 2, 1, "", "FastFourierTransformSpectrogramPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "close"], [33, 3, 1, "", "draw"], [33, 3, 1, "", "move_figure"], [33, 4, 1, "", "n"]], "draugr.drawers.opencv_drawers": [[35, 0, 0, "-", "opencv_image_stream"]], "draugr.drawers.opencv_drawers.opencv_image_stream": [[36, 2, 1, "", "OpencvImageStream"]], "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "draw"]], "draugr.entry_points": [[38, 0, 0, "-", "cpu_usage_entry_point"], [40, 0, 0, "-", "tensorboard_entry_point"], [42, 0, 0, "-", "toggle_darkmode"], [44, 0, 0, "-", "visdom_entry_point"]], "draugr.entry_points.cpu_usage_entry_point": [[39, 1, 1, "", "main"]], "draugr.entry_points.tensorboard_entry_point": [[41, 1, 1, "", "main"]], "draugr.entry_points.toggle_darkmode": [[43, 1, 1, "", "main"]], "draugr.entry_points.visdom_entry_point": [[45, 1, 1, "", "main"]], "draugr.extensions": [[47, 0, 0, "-", "skimage_utilities"], [49, 0, 0, "-", "sorcery_utilities"]], "draugr.extensions.skimage_utilities": [[48, 1, 1, "", "rgb_to_grayscale"]], "draugr.extensions.sorcery_utilities": [[50, 1, 1, "", "lower_case_assigned_names"], [51, 1, 1, "", "upper_case_assigned_names"]], "draugr.ffmpeg_utilities": [[53, 0, 0, "-", "exclude"], [54, 0, 0, "-", "extract"], [56, 0, 0, "-", "merge"], [58, 0, 0, "-", "sequencify"], [60, 0, 0, "-", "split"]], "draugr.ffmpeg_utilities.extract": [[55, 1, 1, "", "extract_frames"]], "draugr.ffmpeg_utilities.merge": [[57, 1, 1, "", "merge_video"]], "draugr.ffmpeg_utilities.sequencify": [[59, 1, 1, "", "sequencify_files"]], "draugr.ffmpeg_utilities.split": [[61, 1, 1, "", "spilt_video"]], "draugr.metrics": [[66, 0, 0, "-", "accumulation"], [70, 0, 0, "-", "meters"], [73, 0, 0, "-", "metric_aggregator"], [76, 0, 0, "-", "metric_collection"], [78, 0, 0, "-", "metric_summary"], [80, 0, 0, "-", "plotting"]], "draugr.metrics.accumulation": [[67, 1, 1, "", "lambda_accumulator"], [68, 1, 1, "", "mean_accumulator"], [69, 1, 1, "", "total_accumulator"]], "draugr.metrics.meters": [[71, 2, 1, "", "AverageMeter"], [72, 2, 1, "", "Meter"]], "draugr.metrics.meters.AverageMeter": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "reset"], [71, 3, 1, "", "update"]], "draugr.metrics.meters.Meter": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "reset"], [72, 3, 1, "", "update"]], "draugr.metrics.metric_aggregator": [[74, 2, 1, "", "MetricAggregator"], [75, 1, 1, "", "save_metric"]], "draugr.metrics.metric_aggregator.MetricAggregator": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "add"], [74, 3, 1, "", "append"], [74, 3, 1, "", "calc_moving_average"], [74, 3, 1, "", "calc_running_value"], [74, 5, 1, "", "max"], [74, 5, 1, "", "measures"], [74, 5, 1, "", "min"], [74, 3, 1, "", "save"], [74, 5, 1, "", "values"]], "draugr.metrics.metric_collection": [[77, 2, 1, "", "MetricCollection"]], "draugr.metrics.metric_collection.MetricCollection": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "add_metric"], [77, 3, 1, "", "append"], [77, 3, 1, "", "clear"], [77, 3, 1, "", "copy"], [77, 3, 1, "", "fromkeys"], [77, 3, 1, "", "get"], [77, 3, 1, "", "items"], [77, 3, 1, "", "keys"], [77, 5, 1, "", "metrics"], [77, 3, 1, "", "pop"], [77, 3, 1, "", "popitem"], [77, 3, 1, "", "remove_metric"], [77, 3, 1, "", "save"], [77, 3, 1, "", "setdefault"], [77, 3, 1, "", "update"], [77, 3, 1, "", "values"]], "draugr.metrics.metric_summary": [[79, 2, 1, "", "MetricSummary"]], "draugr.metrics.metric_summary.MetricSummary": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "append"], [79, 3, 1, "", "moving_average"], [79, 3, 1, "", "running_average"], [79, 5, 1, "", "values"]], "draugr.multiprocessing_utilities": [[82, 0, 0, "-", "pooled_queue_processor"]], "draugr.multiprocessing_utilities.pooled_queue_processor": [[83, 2, 1, "", "CloudPickleBase"], [84, 2, 1, "", "PooledQueueProcessor"], [85, 2, 1, "", "PooledQueueTask"]], "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase": [[83, 3, 1, "", "__init__"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "close"], [84, 3, 1, "", "fill"], [84, 3, 1, "", "get"], [84, 3, 1, "", "maybe_fill"], [84, 3, 1, "", "put"], [84, 5, 1, "", "queue_size"], [84, 3, 1, "", "raise_error"], [84, 3, 1, "", "terminate"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "call"]], "draugr.numpy_utilities": [[87, 0, 0, "-", "channel_transform"], [92, 0, 0, "-", "datasets"], [106, 0, 0, "-", "manipulation"], [109, 0, 0, "-", "mixing"], [111, 0, 0, "-", "powers"], [117, 0, 0, "-", "raster_grid_2d_masking"], [119, 0, 0, "-", "raster_grid_3d_masking"], [121, 0, 0, "-", "resize"], [123, 0, 0, "-", "sampling"], [125, 0, 0, "-", "signal_utilities"]], "draugr.numpy_utilities.channel_transform": [[88, 1, 1, "", "chw_to_hwc"], [89, 1, 1, "", "float_chw_to_hwc_uint"], [90, 1, 1, "", "hwc_to_chw"], [91, 1, 1, "", "uint_hwc_to_chw_float"]], "draugr.numpy_utilities.datasets": [[93, 0, 0, "-", "categorical"], [100, 0, 0, "-", "defaults"], [101, 0, 0, "-", "splitting"]], "draugr.numpy_utilities.datasets.categorical": [[94, 0, 0, "-", "deep_category"], [96, 0, 0, "-", "flat_category"], [98, 0, 0, "-", "shallow_category"]], "draugr.numpy_utilities.datasets.categorical.deep_category": [[95, 1, 1, "", "build_deep_categorical_dataset"]], "draugr.numpy_utilities.datasets.categorical.flat_category": [[97, 1, 1, "", "build_flat_dataset"]], "draugr.numpy_utilities.datasets.categorical.shallow_category": [[99, 1, 1, "", "build_shallow_categorical_dataset"]], "draugr.numpy_utilities.datasets.splitting": [[102, 2, 1, "", "SplitEnum"], [103, 2, 1, "", "SplitIndexer"], [104, 1, 1, "", "select_split"], [105, 1, 1, "", "train_valid_test_split"]], "draugr.numpy_utilities.datasets.splitting.SplitEnum": [[102, 3, 1, "", "__init__"]], "draugr.numpy_utilities.datasets.splitting.SplitIndexer": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "select_shuffled_split_indices"], [103, 3, 1, "", "select_testing_indices"], [103, 3, 1, "", "select_train_indices"], [103, 3, 1, "", "select_validation_indices"], [103, 3, 1, "", "shuffled_indices"], [103, 3, 1, "", "unnormalised"]], "draugr.numpy_utilities.manipulation": [[107, 2, 1, "", "MyNdArray"], [108, 1, 1, "", "recursive_flatten_numpy"]], "draugr.numpy_utilities.manipulation.MyNdArray": [[107, 4, 1, "", "T"], [107, 3, 1, "", "__init__"], [107, 3, 1, "", "all"], [107, 3, 1, "", "any"], [107, 3, 1, "", "argmax"], [107, 3, 1, "", "argmin"], [107, 3, 1, "", "argpartition"], [107, 3, 1, "", "argsort"], [107, 3, 1, "", "astype"], [107, 4, 1, "", "base"], [107, 3, 1, "", "byteswap"], [107, 3, 1, "", "choose"], [107, 3, 1, "", "clip"], [107, 3, 1, "", "compress"], [107, 3, 1, "", "conj"], [107, 3, 1, "", "conjugate"], [107, 5, 1, "", "conjugate_transpose"], [107, 3, 1, "", "copy"], [107, 4, 1, "", "ctypes"], [107, 3, 1, "", "cumprod"], [107, 3, 1, "", "cumsum"], [107, 4, 1, "", "data"], [107, 3, 1, "", "diagonal"], [107, 4, 1, "", "dtype"], [107, 3, 1, "", "dump"], [107, 3, 1, "", "dumps"], [107, 3, 1, "", "fill"], [107, 4, 1, "", "flags"], [107, 4, 1, "", "flat"], [107, 3, 1, "", "flatten"], [107, 3, 1, "", "getfield"], [107, 4, 1, "", "imag"], [107, 3, 1, "", "item"], [107, 3, 1, "", "itemset"], [107, 4, 1, "", "itemsize"], [107, 3, 1, "", "max"], [107, 3, 1, "", "mean"], [107, 3, 1, "", "min"], [107, 4, 1, "", "nbytes"], [107, 4, 1, "", "ndim"], [107, 3, 1, "", "newbyteorder"], [107, 3, 1, "", "nonzero"], [107, 3, 1, "", "partition"], [107, 3, 1, "", "prod"], [107, 3, 1, "", "ptp"], [107, 3, 1, "", "put"], [107, 3, 1, "", "ravel"], [107, 4, 1, "", "real"], [107, 3, 1, "", "repeat"], [107, 3, 1, "", "reshape"], [107, 3, 1, "", "resize"], [107, 3, 1, "", "round"], [107, 3, 1, "", "searchsorted"], [107, 3, 1, "", "setfield"], [107, 3, 1, "", "setflags"], [107, 4, 1, "", "shape"], [107, 4, 1, "", "size"], [107, 3, 1, "", "sort"], [107, 3, 1, "", "squeeze"], [107, 3, 1, "", "std"], [107, 4, 1, "", "strides"], [107, 3, 1, "", "sum"], [107, 3, 1, "", "swapaxes"], [107, 3, 1, "", "take"], [107, 3, 1, "", "tobytes"], [107, 3, 1, "", "tofile"], [107, 3, 1, "", "tolist"], [107, 3, 1, "", "tostring"], [107, 3, 1, "", "trace"], [107, 3, 1, "", "transpose"], [107, 3, 1, "", "var"], [107, 3, 1, "", "view"]], "draugr.numpy_utilities.mixing": [[110, 1, 1, "", "mix_channels"]], "draugr.numpy_utilities.powers": [[112, 1, 1, "", "next_pow_10_numpy"], [113, 1, 1, "", "next_pow_2_numpy"], [114, 1, 1, "", "next_pow_numpy"], [115, 1, 1, "", "next_power_10_numpy"], [116, 1, 1, "", "next_power_2_numpy"]], "draugr.numpy_utilities.raster_grid_2d_masking": [[118, 1, 1, "", "circular_mask"]], "draugr.numpy_utilities.raster_grid_3d_masking": [[120, 1, 1, "", "sphere_mask"]], "draugr.numpy_utilities.resize": [[122, 1, 1, "", "resize_array"]], "draugr.numpy_utilities.sampling": [[124, 1, 1, "", "get_sampler"]], "draugr.numpy_utilities.signal_utilities": [[126, 0, 0, "-", "padding"], [129, 0, 0, "-", "signal_mixing"], [131, 0, 0, "-", "signal_projection"], [136, 0, 0, "-", "signal_statistics"], [139, 0, 0, "-", "truncation"]], "draugr.numpy_utilities.signal_utilities.padding": [[127, 1, 1, "", "zero_pad_to"], [128, 1, 1, "", "zero_pad_to_power_2"]], "draugr.numpy_utilities.signal_utilities.signal_mixing": [[130, 1, 1, "", "mix_ratio"]], "draugr.numpy_utilities.signal_utilities.signal_projection": [[132, 1, 1, "", "heaviside"], [133, 1, 1, "", "normalise_signal"], [134, 1, 1, "", "normalise_signal_max_abs"], [135, 1, 1, "", "normalise_signal_minmax"]], "draugr.numpy_utilities.signal_utilities.signal_statistics": [[137, 1, 1, "", "mean_square"], [138, 1, 1, "", "root_mean_square"]], "draugr.numpy_utilities.signal_utilities.truncation": [[140, 1, 1, "", "last_dim_truncate"], [141, 1, 1, "", "min_length_truncate_batch"], [142, 1, 1, "", "truncate_to_power_2"]], "draugr.opencv_utilities": [[144, 0, 0, "-", "bounding_boxes"], [152, 0, 0, "-", "color_space"], [180, 0, 0, "-", "drawing"], [198, 0, 0, "-", "namespaces"], [228, 0, 0, "-", "raster_sequences"], [236, 0, 0, "-", "transformation"], [261, 0, 0, "-", "windows"]], "draugr.opencv_utilities.bounding_boxes": [[145, 0, 0, "-", "boxes_2d"], [148, 0, 0, "-", "evaluation"]], "draugr.opencv_utilities.bounding_boxes.boxes_2d": [[146, 1, 1, "", "minmax_to_xywh"], [147, 1, 1, "", "xywh_to_minmax"]], "draugr.opencv_utilities.bounding_boxes.evaluation": [[149, 1, 1, "", "intersect_numpy"], [150, 1, 1, "", "jaccard_overlap_numpy"], [151, 1, 1, "", "remove_null_boxes"]], "draugr.opencv_utilities.color_space": [[153, 0, 0, "-", "clean"], [156, 0, 0, "-", "color"], [160, 0, 0, "-", "edge"], [164, 0, 0, "-", "gamma"], [170, 0, 0, "-", "gray"], [173, 0, 0, "-", "noise"], [176, 0, 0, "-", "threshold"]], "draugr.opencv_utilities.color_space.clean": [[154, 2, 1, "", "CleanUpMethod"], [155, 1, 1, "", "clean_up"]], "draugr.opencv_utilities.color_space.clean.CleanUpMethod": [[154, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.color": [[157, 1, 1, "", "is_singular_channel"], [158, 1, 1, "", "num_channels"], [159, 1, 1, "", "to_color"]], "draugr.opencv_utilities.color_space.edge": [[161, 2, 1, "", "CannyApertureSize"], [162, 2, 1, "", "ToEdgeMethodEnum"], [163, 1, 1, "", "to_edge"]], "draugr.opencv_utilities.color_space.edge.CannyApertureSize": [[161, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum": [[162, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.gamma": [[165, 1, 1, "", "gamma_correct_byte"], [166, 1, 1, "", "gamma_correct_fast_to_byte"], [167, 1, 1, "", "gamma_correct_float_to_byte"], [168, 1, 1, "", "linear_correct_byte"], [169, 1, 1, "", "linear_correct_float_to_byte"]], "draugr.opencv_utilities.color_space.gray": [[171, 2, 1, "", "ToGrayMethodEnum"], [172, 1, 1, "", "to_gray"]], "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum": [[171, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.noise": [[174, 2, 1, "", "NoiseFilterMethodEnum"], [175, 1, 1, "", "noise_filter"]], "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum": [[174, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.threshold": [[177, 2, 1, "", "ThresholdMethodEnum"], [178, 1, 1, "", "hsv_min_max_clip_mask"], [179, 1, 1, "", "threshold_channel"]], "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum": [[177, 3, 1, "", "__init__"]], "draugr.opencv_utilities.drawing": [[181, 0, 0, "-", "draw_boxes"], [185, 0, 0, "-", "masks"], [191, 0, 0, "-", "opencv_draw"], [194, 0, 0, "-", "opencv_drawing_utilities"]], "draugr.opencv_utilities.drawing.draw_boxes": [[182, 1, 1, "", "draw_bounding_boxes"], [183, 1, 1, "", "draw_single_box"], [184, 1, 1, "", "draw_single_rect"]], "draugr.opencv_utilities.drawing.masks": [[186, 0, 0, "-", "gauss_circles"], [190, 0, 0, "-", "segment_ellipse"]], "draugr.opencv_utilities.drawing.masks.gauss_circles": [[187, 1, 1, "", "ellipse_bbox"], [188, 1, 1, "", "make_gradient_v1"], [189, 1, 1, "", "make_gradient_v2"]], "draugr.opencv_utilities.drawing.opencv_draw": [[192, 1, 1, "", "draw_masks"], [193, 1, 1, "", "find_contours"]], "draugr.opencv_utilities.drawing.opencv_drawing_utilities": [[195, 1, 1, "", "cube_3d_matrix"], [196, 1, 1, "", "draw_axis"], [197, 1, 1, "", "draw_cube"]], "draugr.opencv_utilities.namespaces": [[199, 0, 0, "-", "color_conversion_enum"], [201, 0, 0, "-", "enums"], [222, 0, 0, "-", "flags"]], "draugr.opencv_utilities.namespaces.color_conversion_enum": [[200, 2, 1, "", "ColorConversionEnum"]], "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum": [[200, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums": [[202, 2, 1, "", "BorderTypeEnum"], [203, 2, 1, "", "CameraPropertyEnum"], [204, 2, 1, "", "ComparisonEnum"], [205, 2, 1, "", "ContourApproximationModeEnum"], [206, 2, 1, "", "ContourRetrievalModeEnum"], [207, 2, 1, "", "DataTypeEnum"], [208, 2, 1, "", "DistanceTransformLabelTypeEnum"], [209, 2, 1, "", "DistanceTransformMaskEnum"], [210, 2, 1, "", "DistanceTypeEnum"], [211, 2, 1, "", "FontEnum"], [212, 2, 1, "", "HoughModeEnum"], [213, 2, 1, "", "KmeansEnum"], [214, 2, 1, "", "LineTypeEnum"], [215, 2, 1, "", "MarkerTypeEnum"], [216, 2, 1, "", "MorphShapeEnum"], [217, 2, 1, "", "MorphTypeEnum"], [218, 2, 1, "", "MouseEventEnum"], [219, 2, 1, "", "RectanglesIntersectTypes"], [220, 2, 1, "", "VideoCaptureAPIEnum"], [221, 2, 1, "", "WindowFlagEnum"]], "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum": [[202, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum": [[203, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ComparisonEnum": [[204, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum": [[205, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum": [[206, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DataTypeEnum": [[207, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum": [[208, 3, 1, "", "__init__"], [208, 4, 1, "", "ccomp"], [208, 4, 1, "", "pixel"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum": [[209, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum": [[210, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.FontEnum": [[211, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.HoughModeEnum": [[212, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.KmeansEnum": [[213, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.LineTypeEnum": [[214, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum": [[215, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum": [[216, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum": [[217, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MouseEventEnum": [[218, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes": [[219, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum": [[220, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum": [[221, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags": [[223, 2, 1, "", "DrawMatchesFlagEnum"], [224, 2, 1, "", "MouseEventFlag"], [225, 2, 1, "", "TermCriteriaFlag"], [226, 2, 1, "", "ThresholdTypeFlag"], [227, 2, 1, "", "WindowPropertyFlag"]], "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum": [[223, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.MouseEventFlag": [[224, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag": [[225, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag": [[226, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag": [[227, 3, 1, "", "__init__"]], "draugr.opencv_utilities.raster_sequences": [[229, 0, 0, "-", "async_video_stream"], [231, 0, 0, "-", "frame_annotation"], [234, 0, 0, "-", "frames"]], "draugr.opencv_utilities.raster_sequences.async_video_stream": [[230, 2, 1, "", "AsyncVideoStream"]], "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "isOpened"], [230, 3, 1, "", "read"], [230, 3, 1, "", "start"], [230, 3, 1, "", "stop"], [230, 3, 1, "", "update"]], "draugr.opencv_utilities.raster_sequences.frame_annotation": [[232, 1, 1, "", "blit_fps"], [233, 1, 1, "", "blit_numbering_raster_sequence"]], "draugr.opencv_utilities.raster_sequences.frames": [[235, 1, 1, "", "frame_generator"]], "draugr.opencv_utilities.transformation": [[237, 0, 0, "-", "cropping"], [239, 0, 0, "-", "cv2_transforms"], [258, 0, 0, "-", "resize"]], "draugr.opencv_utilities.transformation.cropping": [[238, 1, 1, "", "circle_crop"]], "draugr.opencv_utilities.transformation.cv2_transforms": [[240, 2, 1, "", "CV2Compose"], [241, 2, 1, "", "CV2ConvertColor"], [242, 2, 1, "", "CV2Expand"], [243, 2, 1, "", "CV2PhotometricDistort"], [244, 2, 1, "", "CV2RandomBrightness"], [245, 2, 1, "", "CV2RandomContrast"], [246, 2, 1, "", "CV2RandomHue"], [247, 2, 1, "", "CV2RandomLightingNoise"], [248, 2, 1, "", "CV2RandomMirror"], [249, 2, 1, "", "CV2RandomSampleCrop"], [250, 2, 1, "", "CV2RandomSaturation"], [251, 2, 1, "", "CV2Resize"], [252, 2, 1, "", "CV2SwapChannels"], [253, 2, 1, "", "CV2ToAbsoluteCoords"], [254, 2, 1, "", "CV2ToPercentCoords"], [255, 2, 1, "", "ConvertFromInts"], [256, 2, 1, "", "Lambda"], [257, 2, 1, "", "SubtractMeans"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose": [[240, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor": [[241, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand": [[242, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort": [[243, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness": [[244, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast": [[245, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue": [[246, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise": [[247, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror": [[248, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop": [[249, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation": [[250, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize": [[251, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels": [[252, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords": [[253, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords": [[254, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts": [[255, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.Lambda": [[256, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans": [[257, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.resize": [[259, 2, 1, "", "InterpolationEnum"], [260, 1, 1, "", "cv2_resize"]], "draugr.opencv_utilities.transformation.resize.InterpolationEnum": [[259, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows": [[262, 0, 0, "-", "color_picker"], [264, 0, 0, "-", "default"], [267, 0, 0, "-", "elements"], [270, 0, 0, "-", "hough_circles"], [272, 0, 0, "-", "image"]], "draugr.opencv_utilities.windows.color_picker": [[263, 1, 1, "", "interactive_hsv_color_picker"]], "draugr.opencv_utilities.windows.default": [[265, 2, 1, "", "ExtensionEnum"], [266, 1, 1, "", "match_return_code"]], "draugr.opencv_utilities.windows.default.ExtensionEnum": [[265, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows.elements": [[268, 0, 0, "-", "trackbar"]], "draugr.opencv_utilities.windows.elements.trackbar": [[269, 1, 1, "", "add_trackbar"]], "draugr.opencv_utilities.windows.hough_circles": [[271, 1, 1, "", "interactive_hough_circles"]], "draugr.opencv_utilities.windows.image": [[273, 1, 1, "", "show_image"]], "draugr.os_utilities": [[275, 0, 0, "-", "cuda_device"], [279, 0, 0, "-", "linux_utilities"], [315, 0, 0, "-", "platform_selection"], [317, 0, 0, "-", "resource_utilities"], [330, 0, 0, "-", "screen_resolution"], [338, 0, 0, "-", "service"], [341, 0, 0, "-", "windows_utilities"]], "draugr.os_utilities.cuda_device": [[276, 2, 1, "", "DeviceOrderEnum"], [277, 1, 1, "", "set_cuda_device_order"], [278, 1, 1, "", "set_cuda_visible_devices"]], "draugr.os_utilities.cuda_device.DeviceOrderEnum": [[276, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities": [[280, 0, 0, "-", "gnome_utilities"], [283, 0, 0, "-", "gtk_utilities"], [288, 0, 0, "-", "mac_utilities"], [290, 0, 0, "-", "systemd_utilities"], [309, 0, 0, "-", "user_utilities"]], "draugr.os_utilities.linux_utilities.gnome_utilities": [[281, 0, 0, "-", "dark_mode"]], "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode": [[282, 6, 1, "", "is_dark_mode_active"]], "draugr.os_utilities.linux_utilities.gtk_utilities": [[284, 0, 0, "-", "gtk_settings"], [286, 0, 0, "-", "theme_preferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings": [[285, 2, 1, "", "GtkSettings"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings": [[285, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences": [[287, 2, 1, "", "GtkThemePreferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences": [[287, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.mac_utilities": [[289, 0, 0, "-", "dark_mode"]], "draugr.os_utilities.linux_utilities.systemd_utilities": [[291, 0, 0, "-", "exclude"], [298, 0, 0, "-", "service_management"], [308, 0, 0, "-", "service_template"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude": [[292, 0, 0, "-", "amdroc"], [293, 0, 0, "-", "deprecated"], [296, 0, 0, "-", "docker_inspection"], [297, 0, 0, "-", "psystemd"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated": [[294, 0, 0, "-", "libuser_test"], [295, 0, 0, "-", "systemd_utilities_old"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management": [[299, 2, 1, "", "RunAsEnum"], [300, 6, 1, "", "disable_service"], [301, 6, 1, "", "enable_service"], [302, 6, 1, "", "install_service"], [303, 6, 1, "", "remove_service"], [304, 6, 1, "", "restart_service"], [305, 6, 1, "", "start_service"], [306, 6, 1, "", "status_service"], [307, 6, 1, "", "stop_service"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum": [[299, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.user_utilities": [[310, 6, 1, "", "change_home_dir"], [311, 6, 1, "", "change_passwd"], [312, 6, 1, "", "make_user"], [313, 6, 1, "", "remove_user"]], "draugr.os_utilities.platform_selection": [[316, 1, 1, "", "get_backend_module"]], "draugr.os_utilities.resource_utilities": [[318, 0, 0, "-", "all"], [327, 0, 0, "-", "gpu"], [328, 0, 0, "-", "ram"]], "draugr.os_utilities.resource_utilities.all": [[319, 1, 1, "", "get_num_instances"]], "draugr.os_utilities.resource_utilities.cpu": [[321, 2, 1, "", "WorkerSession"], [322, 1, 1, "", "release_worker_cores"], [323, 1, 1, "", "request_worker_cores"], [324, 1, 1, "", "reset_worker_tracker"], [325, 1, 1, "", "worker_cores_available"], [326, 1, 1, "", "worker_cores_in_use"]], "draugr.os_utilities.resource_utilities.cpu.WorkerSession": [[321, 3, 1, "", "__init__"]], "draugr.os_utilities.resource_utilities.ram": [[329, 1, 1, "", "num_instance_no_paging"]], "draugr.os_utilities.screen_resolution": [[331, 1, 1, "", "get_screen_resolution"], [332, 1, 1, "", "screen_res_gtk"], [333, 1, 1, "", "screen_res_mac"], [334, 1, 1, "", "screen_res_pygame"], [335, 1, 1, "", "screen_res_tk"], [336, 1, 1, "", "screen_res_win"], [337, 1, 1, "", "screen_res_xlib"]], "draugr.os_utilities.service": [[339, 1, 1, "", "add_service"], [340, 1, 1, "", "remove_service"]], "draugr.os_utilities.windows_utilities": [[342, 0, 0, "-", "exclude"], [379, 0, 0, "-", "task_scheduler"], [393, 0, 0, "-", "win32"], [401, 0, 0, "-", "windows_settings"]], "draugr.os_utilities.windows_utilities.exclude": [[343, 0, 0, "-", "communication"]], "draugr.os_utilities.windows_utilities.exclude.communication": [[344, 0, 0, "-", "direct_input"], [371, 0, 0, "-", "edge"], [373, 0, 0, "-", "firefox"], [375, 0, 0, "-", "main"], [377, 0, 0, "-", "mario"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input": [[345, 7, 1, "", "FailSafeException"], [346, 2, 1, "", "HardwareInput"], [347, 2, 1, "", "Input"], [348, 2, 1, "", "Input_I"], [349, 2, 1, "", "KeyBdInput"], [350, 2, 1, "", "MouseInput"], [351, 2, 1, "", "POINT"], [352, 1, 1, "", "click"], [353, 1, 1, "", "doubleClick"], [354, 1, 1, "", "failSafeCheck"], [355, 1, 1, "", "keyDown"], [356, 1, 1, "", "keyUp"], [357, 1, 1, "", "leftClick"], [358, 1, 1, "", "middleClick"], [359, 1, 1, "", "mouseDown"], [360, 1, 1, "", "mouseUp"], [361, 1, 1, "", "move"], [362, 1, 1, "", "moveRel"], [363, 1, 1, "", "moveTo"], [364, 1, 1, "", "position"], [365, 1, 1, "", "press"], [366, 1, 1, "", "rightClick"], [367, 1, 1, "", "size"], [368, 1, 1, "", "tripleClick"], [369, 1, 1, "", "typewrite"], [370, 1, 1, "", "write"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.HardwareInput": [[346, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input": [[347, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.Input_I": [[348, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.KeyBdInput": [[349, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.MouseInput": [[350, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.direct_input.POINT": [[351, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.exclude.communication.edge": [[372, 1, 1, "", "main"]], "draugr.os_utilities.windows_utilities.exclude.communication.firefox": [[374, 1, 1, "", "main"]], "draugr.os_utilities.windows_utilities.exclude.communication.main": [[376, 1, 1, "", "main"]], "draugr.os_utilities.windows_utilities.exclude.communication.mario": [[378, 1, 1, "", "main"]], "draugr.os_utilities.windows_utilities.task_scheduler": [[380, 0, 0, "-", "api"], [384, 0, 0, "-", "enums"]], "draugr.os_utilities.windows_utilities.task_scheduler.api": [[381, 1, 1, "", "delete_task"], [382, 1, 1, "", "new_user_logon_execute_task"], [383, 1, 1, "", "set_task_activity"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums": [[385, 0, 0, "-", "task_action_type"], [387, 0, 0, "-", "task_creation"], [389, 0, 0, "-", "task_logon_type"], [391, 0, 0, "-", "task_trigger"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type": [[386, 2, 1, "", "TaskActionTypeEnum"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_action_type.TaskActionTypeEnum": [[386, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation": [[388, 2, 1, "", "TaskCreationEnum"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_creation.TaskCreationEnum": [[388, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type": [[390, 2, 1, "", "TaskLogonTypeEnum"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_logon_type.TaskLogonTypeEnum": [[390, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger": [[392, 2, 1, "", "TaskTriggerEnum"]], "draugr.os_utilities.windows_utilities.task_scheduler.enums.task_trigger.TaskTriggerEnum": [[392, 3, 1, "", "__init__"]], "draugr.os_utilities.windows_utilities.win32": [[394, 0, 0, "-", "api"], [397, 0, 0, "-", "gui"]], "draugr.os_utilities.windows_utilities.win32.api": [[395, 1, 1, "", "press_key"], [396, 1, 1, "", "press_key_foreground"]], "draugr.os_utilities.windows_utilities.win32.gui": [[398, 1, 1, "", "find_all_windows"], [399, 1, 1, "", "get_inner_windows"], [400, 1, 1, "", "list_window_names"]], "draugr.os_utilities.windows_utilities.windows_settings": [[402, 2, 1, "", "WindowsSettings"]], "draugr.os_utilities.windows_utilities.windows_settings.WindowsSettings": [[402, 3, 1, "", "__init__"], [402, 5, 1, "", "all_settings"], [402, 3, 1, "", "get_dark_mode"], [402, 3, 1, "", "set_dark_mode"]], "draugr.pandas_utilities": [[404, 0, 0, "-", "formatting"], [406, 0, 0, "-", "from_dict"], [410, 0, 0, "-", "latex_mean_std"], [415, 0, 0, "-", "misc_utilities"], [419, 0, 0, "-", "multi_index_utilities"], [421, 0, 0, "-", "styling"]], "draugr.pandas_utilities.formatting": [[405, 1, 1, "", "pandas_mean_std_bold_formatter"]], "draugr.pandas_utilities.from_dict": [[407, 1, 1, "", "nested_dict_to_four_level_column_df"], [408, 1, 1, "", "nested_dict_to_three_level_column_df"], [409, 1, 1, "", "nested_dict_to_two_level_column_df"]], "draugr.pandas_utilities.latex_mean_std": [[411, 1, 1, "", "pandas_format_bold_max_row_latex"], [412, 1, 1, "", "pandas_mean_std"], [413, 1, 1, "", "pandas_mean_std_to_str"], [414, 1, 1, "", "pandas_to_latex_clean"]], "draugr.pandas_utilities.misc_utilities": [[416, 2, 1, "", "ChainedAssignmentOptionEnum"], [417, 2, 1, "", "ExportMethodEnum"], [418, 1, 1, "", "duplicate_columns"]], "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum": [[416, 3, 1, "", "__init__"]], "draugr.pandas_utilities.misc_utilities.ExportMethodEnum": [[417, 3, 1, "", "__init__"]], "draugr.pandas_utilities.multi_index_utilities": [[420, 1, 1, "", "add_index_level"]], "draugr.pandas_utilities.styling": [[422, 2, 1, "", "AttrEnum"], [423, 2, 1, "", "ColorEnum"], [424, 2, 1, "", "NDFrameExtremeEnum"], [425, 1, 1, "", "color_highlight_extreme"], [426, 1, 1, "", "color_negative_red"]], "draugr.pandas_utilities.styling.AttrEnum": [[422, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.ColorEnum": [[423, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.NDFrameExtremeEnum": [[424, 3, 1, "", "__init__"]], "draugr.pygame_utilities": [[428, 0, 0, "-", "screen"]], "draugr.pygame_utilities.screen": [[429, 1, 1, "", "get_screen_resolution"]], "draugr.python_utilities": [[431, 0, 0, "-", "broadcasting"], [433, 0, 0, "-", "exclude"], [441, 0, 0, "-", "function_wrappers"], [455, 0, 0, "-", "http"], [457, 0, 0, "-", "sockets"], [461, 0, 0, "-", "torch_like_channel_transformation"]], "draugr.python_utilities.broadcasting": [[432, 2, 1, "", "BroadcastNone"]], "draugr.python_utilities.broadcasting.BroadcastNone": [[432, 3, 1, "", "__init__"], [432, 3, 1, "", "mro"]], "draugr.python_utilities.exclude": [[434, 0, 0, "-", "packages"], [438, 0, 0, "-", "worker"]], "draugr.python_utilities.exclude.packages": [[435, 1, 1, "", "a"], [436, 1, 1, "", "b"], [437, 1, 1, "", "c"]], "draugr.python_utilities.exclude.worker": [[439, 1, 1, "", "main"], [440, 1, 1, "", "spawn"]], "draugr.python_utilities.function_wrappers": [[442, 1, 1, "", "max_frequency"], [443, 1, 1, "", "min_interval_wrapper"], [444, 1, 1, "", "min_interval_wrapper_global"], [445, 1, 1, "", "wrap_args"]], "draugr.python_utilities.generators": [[447, 0, 0, "-", "batching_generator"], [452, 0, 0, "-", "recycling_generator"]], "draugr.python_utilities.generators.batching_generator": [[448, 1, 1, "", "batch_generator"], [449, 1, 1, "", "random_batches"], [450, 1, 1, "", "shuffled_batches"], [451, 1, 1, "", "sized_batch"]], "draugr.python_utilities.generators.recycling_generator": [[453, 1, 1, "", "batched_recycle"], [454, 1, 1, "", "recycle"]], "draugr.python_utilities.http": [[456, 2, 1, "", "HttpMethodEnum"]], "draugr.python_utilities.http.HttpMethodEnum": [[456, 3, 1, "", "__init__"]], "draugr.python_utilities.sockets": [[458, 1, 1, "", "find_unclaimed_port"], [459, 1, 1, "", "get_host_ip"], [460, 1, 1, "", "is_port_in_use"]], "draugr.python_utilities.torch_like_channel_transformation": [[462, 1, 1, "", "reverse_torch_vision_normalize_batch_nchw"], [463, 1, 1, "", "rgb_drop_alpha_batch_nhwc"], [464, 1, 1, "", "rgb_drop_alpha_hwc"], [465, 1, 1, "", "torch_vision_normalize_batch_nchw"]], "draugr.random_utilities": [[467, 0, 0, "-", "seeding"]], "draugr.random_utilities.seeding": [[468, 1, 1, "", "seed_stack"]], "draugr.scipy_utilities": [[470, 0, 0, "-", "scipy_utilities"], [473, 0, 0, "-", "signal_processing"], [474, 0, 0, "-", "subsampling"]], "draugr.scipy_utilities.scipy_utilities": [[471, 1, 1, "", "read_normalised_wave"], [472, 1, 1, "", "write_normalised_wave"]], "draugr.scipy_utilities.subsampling": [[475, 1, 1, "", "fft_subsample"], [476, 1, 1, "", "fir_subsample"], [477, 1, 1, "", "mag_decimation_subsample"], [478, 1, 1, "", "max_decimation_subsample"], [479, 1, 1, "", "min_decimation_subsample"]], "draugr.stopping": [[481, 0, 0, "-", "stopping_key"]], "draugr.stopping.stopping_key": [[482, 2, 1, "", "CaptureEarlyStop"], [483, 1, 1, "", "add_early_stopping_key_combination"]], "draugr.stopping.stopping_key.CaptureEarlyStop": [[482, 3, 1, "", "__init__"]], "draugr.tensorboard_utilities": [[485, 0, 0, "-", "experimental"], [489, 0, 0, "-", "exporting"]], "draugr.tensorboard_utilities.experimental": [[486, 0, 0, "-", "confusion_matrix"], [487, 0, 0, "-", "pretty_cf"]], "draugr.tensorboard_utilities.experimental.pretty_cf": [[488, 1, 1, "", "pretty_print_conf_matrix"]], "draugr.tensorboard_utilities.exporting": [[490, 0, 0, "-", "db_export"], [492, 0, 0, "-", "event_export"], [494, 0, 0, "-", "file_export"]], "draugr.tensorboard_utilities.exporting.db_export": [[491, 2, 1, "", "TensorboardEventExporterDatabase"]], "draugr.tensorboard_utilities.exporting.db_export.TensorboardEventExporterDatabase": [[491, 3, 1, "", "__init__"], [491, 3, 1, "", "export_audio"], [491, 3, 1, "", "export_distribution"], [491, 3, 1, "", "export_graph"], [491, 3, 1, "", "export_histogram"], [491, 3, 1, "", "export_image"], [491, 3, 1, "", "export_line_plot"], [491, 3, 1, "", "export_scalar"], [491, 3, 1, "", "export_tensor"], [491, 3, 1, "", "pr_curve_export_csv"], [491, 3, 1, "", "scalar_export_csv"], [491, 3, 1, "", "tag_test"], [491, 3, 1, "", "tensor_export_csv"]], "draugr.tensorboard_utilities.exporting.event_export": [[493, 2, 1, "", "TensorboardEventExporter"]], "draugr.tensorboard_utilities.exporting.event_export.TensorboardEventExporter": [[493, 3, 1, "", "__init__"], [493, 3, 1, "", "export_audio"], [493, 3, 1, "", "export_distribution"], [493, 3, 1, "", "export_graph"], [493, 3, 1, "", "export_histogram"], [493, 3, 1, "", "export_image"], [493, 3, 1, "", "export_line_plot"], [493, 3, 1, "", "export_scalar"], [493, 3, 1, "", "export_tensor"], [493, 3, 1, "", "pr_curve_export_csv"], [493, 3, 1, "", "scalar_export_csv"], [493, 3, 1, "", "tag_test"], [493, 3, 1, "", "tensor_export_csv"]], "draugr.tensorboard_utilities.exporting.file_export": [[495, 2, 1, "", "TensorboardEventExporterFile"]], "draugr.tensorboard_utilities.exporting.file_export.TensorboardEventExporterFile": [[495, 3, 1, "", "__init__"], [495, 3, 1, "", "export_audio"], [495, 3, 1, "", "export_distribution"], [495, 3, 1, "", "export_graph"], [495, 3, 1, "", "export_histogram"], [495, 3, 1, "", "export_image"], [495, 3, 1, "", "export_line_plot"], [495, 3, 1, "", "export_scalar"], [495, 3, 1, "", "export_tensor"], [495, 3, 1, "", "pr_curve_export_csv"], [495, 3, 1, "", "scalar_export_csv"], [495, 3, 1, "", "tag_test"], [495, 3, 1, "", "tensor_export_csv"]], "draugr.threading_utilities": [[497, 0, 0, "-", "exclude"], [498, 0, 0, "-", "skipper"]], "draugr.threading_utilities.skipper": [[499, 2, 1, "", "Skipper"]], "draugr.threading_utilities.skipper.Skipper": [[499, 3, 1, "", "__init__"], [499, 3, 1, "", "loop"], [499, 3, 1, "", "stop"]], "draugr.torch_utilities": [[501, 0, 0, "-", "architectures"], [530, 0, 0, "-", "datasets"], [544, 0, 0, "-", "distributions"], [551, 0, 0, "-", "evaluation"], [556, 0, 0, "-", "exporting"], [563, 0, 0, "-", "generators"], [567, 0, 0, "-", "images"], [575, 0, 0, "-", "opencv"], [579, 0, 0, "-", "operations"], [601, 0, 0, "-", "optimisation"], [638, 0, 0, "-", "persistence"], [677, 0, 0, "-", "system"], [699, 0, 0, "-", "tensors"]], "draugr.torch_utilities.architectures": [[502, 0, 0, "-", "architecture"], [504, 0, 0, "-", "distributional"], [513, 0, 0, "-", "experimental"], [520, 0, 0, "-", "mlp"], [522, 0, 0, "-", "mlp_variants"]], "draugr.torch_utilities.architectures.architecture": [[503, 2, 1, "", "Architecture"]], "draugr.torch_utilities.architectures.architecture.Architecture": [[503, 3, 1, "", "__init__"], [503, 3, 1, "", "add_module"], [503, 3, 1, "", "apply"], [503, 3, 1, "", "bfloat16"], [503, 3, 1, "", "buffers"], [503, 3, 1, "", "children"], [503, 3, 1, "", "cpu"], [503, 3, 1, "", "cuda"], [503, 3, 1, "", "double"], [503, 4, 1, "", "dump_patches"], [503, 3, 1, "", "eval"], [503, 3, 1, "", "extra_repr"], [503, 3, 1, "", "float"], [503, 3, 1, "", "forward"], [503, 3, 1, "", "get_buffer"], [503, 3, 1, "", "get_extra_state"], [503, 3, 1, "", "get_parameter"], [503, 3, 1, "", "get_submodule"], [503, 3, 1, "", "half"], [503, 5, 1, "", "input_shape"], [503, 3, 1, "", "load_state_dict"], [503, 3, 1, "", "modules"], [503, 3, 1, "", "named_buffers"], [503, 3, 1, "", "named_children"], [503, 3, 1, "", "named_modules"], [503, 3, 1, "", "named_parameters"], [503, 5, 1, "", "output_shape"], [503, 3, 1, "", "parameters"], [503, 3, 1, "", "register_backward_hook"], [503, 3, 1, "", "register_buffer"], [503, 3, 1, "", "register_forward_hook"], [503, 3, 1, "", "register_forward_pre_hook"], [503, 3, 1, "", "register_full_backward_hook"], [503, 3, 1, "", "register_module"], [503, 3, 1, "", "register_parameter"], [503, 3, 1, "", "requires_grad_"], [503, 3, 1, "", "sample_input"], [503, 3, 1, "", "set_extra_state"], [503, 3, 1, "", "share_memory"], [503, 3, 1, "", "state_dict"], [503, 3, 1, "", "to"], [503, 3, 1, "", "to_empty"], [503, 3, 1, "", "train"], [503, 3, 1, "", "type"], [503, 3, 1, "", "xpu"], [503, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional": [[505, 0, 0, "-", "categorical"], [508, 0, 0, "-", "normal"]], "draugr.torch_utilities.architectures.distributional.categorical": [[506, 2, 1, "", "CategoricalMLP"], [507, 2, 1, "", "MultipleCategoricalMLP"]], "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP": [[506, 3, 1, "", "__init__"], [506, 3, 1, "", "add_module"], [506, 3, 1, "", "apply"], [506, 3, 1, "", "bfloat16"], [506, 3, 1, "", "buffers"], [506, 3, 1, "", "children"], [506, 3, 1, "", "construct_progressive_hidden_layers"], [506, 3, 1, "", "cpu"], [506, 3, 1, "", "cuda"], [506, 3, 1, "", "double"], [506, 4, 1, "", "dump_patches"], [506, 3, 1, "", "eval"], [506, 3, 1, "", "extra_repr"], [506, 3, 1, "", "float"], [506, 3, 1, "", "forward"], [506, 3, 1, "", "get_buffer"], [506, 3, 1, "", "get_extra_state"], [506, 3, 1, "", "get_parameter"], [506, 3, 1, "", "get_submodule"], [506, 3, 1, "", "half"], [506, 3, 1, "", "infer_input_shape"], [506, 3, 1, "", "infer_output_shape"], [506, 5, 1, "", "input_shape"], [506, 3, 1, "", "load_state_dict"], [506, 3, 1, "", "modules"], [506, 3, 1, "", "named_buffers"], [506, 3, 1, "", "named_children"], [506, 3, 1, "", "named_modules"], [506, 3, 1, "", "named_parameters"], [506, 5, 1, "", "output_shape"], [506, 3, 1, "", "parameters"], [506, 3, 1, "", "register_backward_hook"], [506, 3, 1, "", "register_buffer"], [506, 3, 1, "", "register_forward_hook"], [506, 3, 1, "", "register_forward_pre_hook"], [506, 3, 1, "", "register_full_backward_hook"], [506, 3, 1, "", "register_module"], [506, 3, 1, "", "register_parameter"], [506, 3, 1, "", "requires_grad_"], [506, 3, 1, "", "sample_input"], [506, 3, 1, "", "set_extra_state"], [506, 3, 1, "", "share_memory"], [506, 3, 1, "", "state_dict"], [506, 3, 1, "", "to"], [506, 3, 1, "", "to_empty"], [506, 3, 1, "", "train"], [506, 3, 1, "", "type"], [506, 3, 1, "", "xpu"], [506, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP": [[507, 3, 1, "", "__init__"], [507, 3, 1, "", "add_module"], [507, 3, 1, "", "apply"], [507, 3, 1, "", "bfloat16"], [507, 3, 1, "", "buffers"], [507, 3, 1, "", "children"], [507, 3, 1, "", "construct_progressive_hidden_layers"], [507, 3, 1, "", "cpu"], [507, 3, 1, "", "cuda"], [507, 3, 1, "", "double"], [507, 4, 1, "", "dump_patches"], [507, 3, 1, "", "entropy"], [507, 3, 1, "", "eval"], [507, 3, 1, "", "extra_repr"], [507, 3, 1, "", "float"], [507, 3, 1, "", "forward"], [507, 3, 1, "", "get_buffer"], [507, 3, 1, "", "get_extra_state"], [507, 3, 1, "", "get_parameter"], [507, 3, 1, "", "get_submodule"], [507, 3, 1, "", "half"], [507, 3, 1, "", "infer_input_shape"], [507, 3, 1, "", "infer_output_shape"], [507, 5, 1, "", "input_shape"], [507, 3, 1, "", "load_state_dict"], [507, 3, 1, "", "modules"], [507, 3, 1, "", "named_buffers"], [507, 3, 1, "", "named_children"], [507, 3, 1, "", "named_modules"], [507, 3, 1, "", "named_parameters"], [507, 5, 1, "", "output_shape"], [507, 3, 1, "", "parameters"], [507, 3, 1, "", "register_backward_hook"], [507, 3, 1, "", "register_buffer"], [507, 3, 1, "", "register_forward_hook"], [507, 3, 1, "", "register_forward_pre_hook"], [507, 3, 1, "", "register_full_backward_hook"], [507, 3, 1, "", "register_module"], [507, 3, 1, "", "register_parameter"], [507, 3, 1, "", "requires_grad_"], [507, 3, 1, "", "sample"], [507, 3, 1, "", "sample_input"], [507, 3, 1, "", "set_extra_state"], [507, 3, 1, "", "share_memory"], [507, 3, 1, "", "state_dict"], [507, 3, 1, "", "to"], [507, 3, 1, "", "to_empty"], [507, 3, 1, "", "train"], [507, 3, 1, "", "type"], [507, 3, 1, "", "xpu"], [507, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal": [[509, 2, 1, "", "MultiDimensionalNormalMLP"], [510, 2, 1, "", "MultiVariateNormalMLP"], [511, 2, 1, "", "MultipleNormalMLP"], [512, 2, 1, "", "ShallowStdNormalMLP"]], "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP": [[509, 3, 1, "", "__init__"], [509, 3, 1, "", "add_module"], [509, 3, 1, "", "apply"], [509, 3, 1, "", "bfloat16"], [509, 3, 1, "", "buffers"], [509, 3, 1, "", "children"], [509, 3, 1, "", "construct_progressive_hidden_layers"], [509, 3, 1, "", "cpu"], [509, 3, 1, "", "cuda"], [509, 3, 1, "", "double"], [509, 4, 1, "", "dump_patches"], [509, 3, 1, "", "eval"], [509, 3, 1, "", "extra_repr"], [509, 3, 1, "", "float"], [509, 3, 1, "", "forward"], [509, 3, 1, "", "get_buffer"], [509, 3, 1, "", "get_extra_state"], [509, 3, 1, "", "get_parameter"], [509, 3, 1, "", "get_submodule"], [509, 3, 1, "", "half"], [509, 3, 1, "", "infer_input_shape"], [509, 3, 1, "", "infer_output_shape"], [509, 5, 1, "", "input_shape"], [509, 3, 1, "", "load_state_dict"], [509, 3, 1, "", "modules"], [509, 3, 1, "", "named_buffers"], [509, 3, 1, "", "named_children"], [509, 3, 1, "", "named_modules"], [509, 3, 1, "", "named_parameters"], [509, 5, 1, "", "output_shape"], [509, 3, 1, "", "parameters"], [509, 3, 1, "", "register_backward_hook"], [509, 3, 1, "", "register_buffer"], [509, 3, 1, "", "register_forward_hook"], [509, 3, 1, "", "register_forward_pre_hook"], [509, 3, 1, "", "register_full_backward_hook"], [509, 3, 1, "", "register_module"], [509, 3, 1, "", "register_parameter"], [509, 3, 1, "", "requires_grad_"], [509, 3, 1, "", "sample_input"], [509, 3, 1, "", "set_extra_state"], [509, 3, 1, "", "share_memory"], [509, 3, 1, "", "state_dict"], [509, 3, 1, "", "to"], [509, 3, 1, "", "to_empty"], [509, 3, 1, "", "train"], [509, 3, 1, "", "type"], [509, 3, 1, "", "xpu"], [509, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP": [[510, 3, 1, "", "__init__"], [510, 3, 1, "", "add_module"], [510, 3, 1, "", "apply"], [510, 3, 1, "", "bfloat16"], [510, 3, 1, "", "buffers"], [510, 3, 1, "", "children"], [510, 3, 1, "", "construct_progressive_hidden_layers"], [510, 3, 1, "", "cpu"], [510, 3, 1, "", "cuda"], [510, 3, 1, "", "double"], [510, 4, 1, "", "dump_patches"], [510, 3, 1, "", "eval"], [510, 3, 1, "", "extra_repr"], [510, 3, 1, "", "float"], [510, 3, 1, "", "forward"], [510, 3, 1, "", "get_buffer"], [510, 3, 1, "", "get_extra_state"], [510, 3, 1, "", "get_parameter"], [510, 3, 1, "", "get_submodule"], [510, 3, 1, "", "half"], [510, 3, 1, "", "infer_input_shape"], [510, 3, 1, "", "infer_output_shape"], [510, 5, 1, "", "input_shape"], [510, 3, 1, "", "load_state_dict"], [510, 3, 1, "", "modules"], [510, 3, 1, "", "named_buffers"], [510, 3, 1, "", "named_children"], [510, 3, 1, "", "named_modules"], [510, 3, 1, "", "named_parameters"], [510, 5, 1, "", "output_shape"], [510, 3, 1, "", "parameters"], [510, 3, 1, "", "register_backward_hook"], [510, 3, 1, "", "register_buffer"], [510, 3, 1, "", "register_forward_hook"], [510, 3, 1, "", "register_forward_pre_hook"], [510, 3, 1, "", "register_full_backward_hook"], [510, 3, 1, "", "register_module"], [510, 3, 1, "", "register_parameter"], [510, 3, 1, "", "requires_grad_"], [510, 3, 1, "", "sample_input"], [510, 3, 1, "", "set_extra_state"], [510, 3, 1, "", "share_memory"], [510, 3, 1, "", "state_dict"], [510, 3, 1, "", "to"], [510, 3, 1, "", "to_empty"], [510, 3, 1, "", "train"], [510, 3, 1, "", "type"], [510, 3, 1, "", "xpu"], [510, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP": [[511, 3, 1, "", "__init__"], [511, 3, 1, "", "add_module"], [511, 3, 1, "", "apply"], [511, 3, 1, "", "bfloat16"], [511, 3, 1, "", "buffers"], [511, 3, 1, "", "children"], [511, 3, 1, "", "construct_progressive_hidden_layers"], [511, 3, 1, "", "cpu"], [511, 3, 1, "", "cuda"], [511, 3, 1, "", "double"], [511, 4, 1, "", "dump_patches"], [511, 3, 1, "", "eval"], [511, 3, 1, "", "extra_repr"], [511, 3, 1, "", "float"], [511, 3, 1, "", "forward"], [511, 3, 1, "", "get_buffer"], [511, 3, 1, "", "get_extra_state"], [511, 3, 1, "", "get_parameter"], [511, 3, 1, "", "get_submodule"], [511, 3, 1, "", "half"], [511, 3, 1, "", "infer_input_shape"], [511, 3, 1, "", "infer_output_shape"], [511, 5, 1, "", "input_shape"], [511, 3, 1, "", "load_state_dict"], [511, 3, 1, "", "modules"], [511, 3, 1, "", "named_buffers"], [511, 3, 1, "", "named_children"], [511, 3, 1, "", "named_modules"], [511, 3, 1, "", "named_parameters"], [511, 5, 1, "", "output_shape"], [511, 3, 1, "", "parameters"], [511, 3, 1, "", "register_backward_hook"], [511, 3, 1, "", "register_buffer"], [511, 3, 1, "", "register_forward_hook"], [511, 3, 1, "", "register_forward_pre_hook"], [511, 3, 1, "", "register_full_backward_hook"], [511, 3, 1, "", "register_module"], [511, 3, 1, "", "register_parameter"], [511, 3, 1, "", "requires_grad_"], [511, 3, 1, "", "sample_input"], [511, 3, 1, "", "set_extra_state"], [511, 3, 1, "", "share_memory"], [511, 3, 1, "", "state_dict"], [511, 3, 1, "", "to"], [511, 3, 1, "", "to_empty"], [511, 3, 1, "", "train"], [511, 3, 1, "", "type"], [511, 3, 1, "", "xpu"], [511, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP": [[512, 3, 1, "", "__init__"], [512, 3, 1, "", "add_module"], [512, 3, 1, "", "apply"], [512, 3, 1, "", "bfloat16"], [512, 3, 1, "", "buffers"], [512, 3, 1, "", "children"], [512, 3, 1, "", "construct_progressive_hidden_layers"], [512, 3, 1, "", "cpu"], [512, 3, 1, "", "cuda"], [512, 3, 1, "", "double"], [512, 4, 1, "", "dump_patches"], [512, 3, 1, "", "eval"], [512, 3, 1, "", "extra_repr"], [512, 3, 1, "", "float"], [512, 3, 1, "", "forward"], [512, 3, 1, "", "get_buffer"], [512, 3, 1, "", "get_extra_state"], [512, 3, 1, "", "get_parameter"], [512, 3, 1, "", "get_submodule"], [512, 3, 1, "", "half"], [512, 3, 1, "", "infer_input_shape"], [512, 3, 1, "", "infer_output_shape"], [512, 5, 1, "", "input_shape"], [512, 3, 1, "", "load_state_dict"], [512, 3, 1, "", "modules"], [512, 3, 1, "", "named_buffers"], [512, 3, 1, "", "named_children"], [512, 3, 1, "", "named_modules"], [512, 3, 1, "", "named_parameters"], [512, 5, 1, "", "output_shape"], [512, 3, 1, "", "parameters"], [512, 3, 1, "", "register_backward_hook"], [512, 3, 1, "", "register_buffer"], [512, 3, 1, "", "register_forward_hook"], [512, 3, 1, "", "register_forward_pre_hook"], [512, 3, 1, "", "register_full_backward_hook"], [512, 3, 1, "", "register_module"], [512, 3, 1, "", "register_parameter"], [512, 3, 1, "", "requires_grad_"], [512, 3, 1, "", "sample_input"], [512, 3, 1, "", "set_extra_state"], [512, 3, 1, "", "share_memory"], [512, 3, 1, "", "state_dict"], [512, 3, 1, "", "to"], [512, 3, 1, "", "to_empty"], [512, 3, 1, "", "train"], [512, 3, 1, "", "type"], [512, 3, 1, "", "xpu"], [512, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental": [[514, 0, 0, "-", "heads"], [516, 0, 0, "-", "recurrent"]], "draugr.torch_utilities.architectures.experimental.heads": [[515, 2, 1, "", "MultiHeadedMLP"]], "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP": [[515, 3, 1, "", "__init__"], [515, 3, 1, "", "add_module"], [515, 3, 1, "", "apply"], [515, 3, 1, "", "bfloat16"], [515, 3, 1, "", "buffers"], [515, 3, 1, "", "children"], [515, 3, 1, "", "construct_progressive_hidden_layers"], [515, 3, 1, "", "cpu"], [515, 3, 1, "", "cuda"], [515, 3, 1, "", "double"], [515, 4, 1, "", "dump_patches"], [515, 3, 1, "", "eval"], [515, 3, 1, "", "extra_repr"], [515, 3, 1, "", "float"], [515, 3, 1, "", "forward"], [515, 3, 1, "", "get_buffer"], [515, 3, 1, "", "get_extra_state"], [515, 3, 1, "", "get_parameter"], [515, 3, 1, "", "get_submodule"], [515, 3, 1, "", "half"], [515, 3, 1, "", "infer_input_shape"], [515, 3, 1, "", "infer_output_shape"], [515, 5, 1, "", "input_shape"], [515, 3, 1, "", "load_state_dict"], [515, 3, 1, "", "modules"], [515, 3, 1, "", "named_buffers"], [515, 3, 1, "", "named_children"], [515, 3, 1, "", "named_modules"], [515, 3, 1, "", "named_parameters"], [515, 5, 1, "", "output_shape"], [515, 3, 1, "", "parameters"], [515, 3, 1, "", "register_backward_hook"], [515, 3, 1, "", "register_buffer"], [515, 3, 1, "", "register_forward_hook"], [515, 3, 1, "", "register_forward_pre_hook"], [515, 3, 1, "", "register_full_backward_hook"], [515, 3, 1, "", "register_module"], [515, 3, 1, "", "register_parameter"], [515, 3, 1, "", "requires_grad_"], [515, 3, 1, "", "sample_input"], [515, 3, 1, "", "set_extra_state"], [515, 3, 1, "", "share_memory"], [515, 3, 1, "", "state_dict"], [515, 3, 1, "", "to"], [515, 3, 1, "", "to_empty"], [515, 3, 1, "", "train"], [515, 3, 1, "", "type"], [515, 3, 1, "", "xpu"], [515, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent": [[517, 2, 1, "", "ExposedRecurrentCategoricalMLP"], [518, 2, 1, "", "RecurrentBase"], [519, 2, 1, "", "RecurrentCategoricalMLP"]], "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP": [[517, 3, 1, "", "__init__"], [517, 3, 1, "", "add_module"], [517, 3, 1, "", "apply"], [517, 3, 1, "", "bfloat16"], [517, 3, 1, "", "buffers"], [517, 3, 1, "", "children"], [517, 3, 1, "", "construct_progressive_hidden_layers"], [517, 3, 1, "", "cpu"], [517, 3, 1, "", "cuda"], [517, 3, 1, "", "double"], [517, 4, 1, "", "dump_patches"], [517, 3, 1, "", "eval"], [517, 3, 1, "", "extra_repr"], [517, 3, 1, "", "float"], [517, 3, 1, "", "forward"], [517, 3, 1, "", "get_buffer"], [517, 3, 1, "", "get_extra_state"], [517, 3, 1, "", "get_parameter"], [517, 3, 1, "", "get_submodule"], [517, 3, 1, "", "half"], [517, 3, 1, "", "infer_input_shape"], [517, 3, 1, "", "infer_output_shape"], [517, 5, 1, "", "input_shape"], [517, 3, 1, "", "load_state_dict"], [517, 3, 1, "", "modules"], [517, 3, 1, "", "named_buffers"], [517, 3, 1, "", "named_children"], [517, 3, 1, "", "named_modules"], [517, 3, 1, "", "named_parameters"], [517, 5, 1, "", "output_shape"], [517, 3, 1, "", "parameters"], [517, 3, 1, "", "register_backward_hook"], [517, 3, 1, "", "register_buffer"], [517, 3, 1, "", "register_forward_hook"], [517, 3, 1, "", "register_forward_pre_hook"], [517, 3, 1, "", "register_full_backward_hook"], [517, 3, 1, "", "register_module"], [517, 3, 1, "", "register_parameter"], [517, 3, 1, "", "requires_grad_"], [517, 3, 1, "", "sample_input"], [517, 3, 1, "", "set_extra_state"], [517, 3, 1, "", "share_memory"], [517, 3, 1, "", "state_dict"], [517, 3, 1, "", "to"], [517, 3, 1, "", "to_empty"], [517, 3, 1, "", "train"], [517, 3, 1, "", "type"], [517, 3, 1, "", "xpu"], [517, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase": [[518, 3, 1, "", "__init__"], [518, 3, 1, "", "add_module"], [518, 3, 1, "", "apply"], [518, 3, 1, "", "bfloat16"], [518, 3, 1, "", "buffers"], [518, 3, 1, "", "children"], [518, 3, 1, "", "cpu"], [518, 3, 1, "", "cuda"], [518, 3, 1, "", "double"], [518, 4, 1, "", "dump_patches"], [518, 3, 1, "", "eval"], [518, 3, 1, "", "extra_repr"], [518, 3, 1, "", "float"], [518, 3, 1, "", "forward"], [518, 3, 1, "", "get_buffer"], [518, 3, 1, "", "get_extra_state"], [518, 3, 1, "", "get_parameter"], [518, 3, 1, "", "get_submodule"], [518, 3, 1, "", "half"], [518, 3, 1, "", "load_state_dict"], [518, 3, 1, "", "modules"], [518, 3, 1, "", "named_buffers"], [518, 3, 1, "", "named_children"], [518, 3, 1, "", "named_modules"], [518, 3, 1, "", "named_parameters"], [518, 3, 1, "", "parameters"], [518, 3, 1, "", "register_backward_hook"], [518, 3, 1, "", "register_buffer"], [518, 3, 1, "", "register_forward_hook"], [518, 3, 1, "", "register_forward_pre_hook"], [518, 3, 1, "", "register_full_backward_hook"], [518, 3, 1, "", "register_module"], [518, 3, 1, "", "register_parameter"], [518, 3, 1, "", "requires_grad_"], [518, 3, 1, "", "set_extra_state"], [518, 3, 1, "", "share_memory"], [518, 3, 1, "", "state_dict"], [518, 3, 1, "", "to"], [518, 3, 1, "", "to_empty"], [518, 3, 1, "", "train"], [518, 3, 1, "", "type"], [518, 3, 1, "", "xpu"], [518, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP": [[519, 3, 1, "", "__init__"], [519, 3, 1, "", "add_module"], [519, 3, 1, "", "apply"], [519, 3, 1, "", "bfloat16"], [519, 3, 1, "", "buffers"], [519, 3, 1, "", "children"], [519, 3, 1, "", "construct_progressive_hidden_layers"], [519, 3, 1, "", "cpu"], [519, 3, 1, "", "cuda"], [519, 3, 1, "", "double"], [519, 4, 1, "", "dump_patches"], [519, 3, 1, "", "eval"], [519, 3, 1, "", "extra_repr"], [519, 3, 1, "", "float"], [519, 3, 1, "", "forward"], [519, 3, 1, "", "get_buffer"], [519, 3, 1, "", "get_extra_state"], [519, 3, 1, "", "get_parameter"], [519, 3, 1, "", "get_submodule"], [519, 3, 1, "", "half"], [519, 3, 1, "", "infer_input_shape"], [519, 3, 1, "", "infer_output_shape"], [519, 5, 1, "", "input_shape"], [519, 3, 1, "", "load_state_dict"], [519, 3, 1, "", "modules"], [519, 3, 1, "", "named_buffers"], [519, 3, 1, "", "named_children"], [519, 3, 1, "", "named_modules"], [519, 3, 1, "", "named_parameters"], [519, 5, 1, "", "output_shape"], [519, 3, 1, "", "parameters"], [519, 3, 1, "", "register_backward_hook"], [519, 3, 1, "", "register_buffer"], [519, 3, 1, "", "register_forward_hook"], [519, 3, 1, "", "register_forward_pre_hook"], [519, 3, 1, "", "register_full_backward_hook"], [519, 3, 1, "", "register_module"], [519, 3, 1, "", "register_parameter"], [519, 3, 1, "", "requires_grad_"], [519, 3, 1, "", "sample_input"], [519, 3, 1, "", "set_extra_state"], [519, 3, 1, "", "share_memory"], [519, 3, 1, "", "state_dict"], [519, 3, 1, "", "to"], [519, 3, 1, "", "to_empty"], [519, 3, 1, "", "train"], [519, 3, 1, "", "type"], [519, 3, 1, "", "xpu"], [519, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp": [[521, 2, 1, "", "MLP"]], "draugr.torch_utilities.architectures.mlp.MLP": [[521, 3, 1, "", "__init__"], [521, 3, 1, "", "add_module"], [521, 3, 1, "", "apply"], [521, 3, 1, "", "bfloat16"], [521, 3, 1, "", "buffers"], [521, 3, 1, "", "children"], [521, 3, 1, "", "construct_progressive_hidden_layers"], [521, 3, 1, "", "cpu"], [521, 3, 1, "", "cuda"], [521, 3, 1, "", "double"], [521, 4, 1, "", "dump_patches"], [521, 3, 1, "", "eval"], [521, 3, 1, "", "extra_repr"], [521, 3, 1, "", "float"], [521, 3, 1, "", "forward"], [521, 3, 1, "", "get_buffer"], [521, 3, 1, "", "get_extra_state"], [521, 3, 1, "", "get_parameter"], [521, 3, 1, "", "get_submodule"], [521, 3, 1, "", "half"], [521, 3, 1, "", "infer_input_shape"], [521, 3, 1, "", "infer_output_shape"], [521, 5, 1, "", "input_shape"], [521, 3, 1, "", "load_state_dict"], [521, 3, 1, "", "modules"], [521, 3, 1, "", "named_buffers"], [521, 3, 1, "", "named_children"], [521, 3, 1, "", "named_modules"], [521, 3, 1, "", "named_parameters"], [521, 5, 1, "", "output_shape"], [521, 3, 1, "", "parameters"], [521, 3, 1, "", "register_backward_hook"], [521, 3, 1, "", "register_buffer"], [521, 3, 1, "", "register_forward_hook"], [521, 3, 1, "", "register_forward_pre_hook"], [521, 3, 1, "", "register_full_backward_hook"], [521, 3, 1, "", "register_module"], [521, 3, 1, "", "register_parameter"], [521, 3, 1, "", "requires_grad_"], [521, 3, 1, "", "sample_input"], [521, 3, 1, "", "set_extra_state"], [521, 3, 1, "", "share_memory"], [521, 3, 1, "", "state_dict"], [521, 3, 1, "", "to"], [521, 3, 1, "", "to_empty"], [521, 3, 1, "", "train"], [521, 3, 1, "", "type"], [521, 3, 1, "", "xpu"], [521, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants": [[523, 0, 0, "-", "concatination"], [526, 0, 0, "-", "disjunction"], [528, 0, 0, "-", "fourier"]], "draugr.torch_utilities.architectures.mlp_variants.concatination": [[524, 2, 1, "", "LateConcatInputMLP"], [525, 2, 1, "", "PreConcatInputMLP"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP": [[524, 3, 1, "", "__init__"], [524, 3, 1, "", "add_module"], [524, 3, 1, "", "apply"], [524, 3, 1, "", "bfloat16"], [524, 3, 1, "", "buffers"], [524, 3, 1, "", "children"], [524, 3, 1, "", "construct_progressive_hidden_layers"], [524, 3, 1, "", "cpu"], [524, 3, 1, "", "cuda"], [524, 3, 1, "", "double"], [524, 4, 1, "", "dump_patches"], [524, 3, 1, "", "eval"], [524, 3, 1, "", "extra_repr"], [524, 3, 1, "", "float"], [524, 3, 1, "", "forward"], [524, 3, 1, "", "get_buffer"], [524, 3, 1, "", "get_extra_state"], [524, 3, 1, "", "get_parameter"], [524, 3, 1, "", "get_submodule"], [524, 3, 1, "", "half"], [524, 3, 1, "", "infer_input_shape"], [524, 3, 1, "", "infer_output_shape"], [524, 5, 1, "", "input_shape"], [524, 3, 1, "", "load_state_dict"], [524, 3, 1, "", "modules"], [524, 3, 1, "", "named_buffers"], [524, 3, 1, "", "named_children"], [524, 3, 1, "", "named_modules"], [524, 3, 1, "", "named_parameters"], [524, 5, 1, "", "output_shape"], [524, 3, 1, "", "parameters"], [524, 3, 1, "", "register_backward_hook"], [524, 3, 1, "", "register_buffer"], [524, 3, 1, "", "register_forward_hook"], [524, 3, 1, "", "register_forward_pre_hook"], [524, 3, 1, "", "register_full_backward_hook"], [524, 3, 1, "", "register_module"], [524, 3, 1, "", "register_parameter"], [524, 3, 1, "", "requires_grad_"], [524, 3, 1, "", "sample_input"], [524, 3, 1, "", "set_extra_state"], [524, 3, 1, "", "share_memory"], [524, 3, 1, "", "state_dict"], [524, 3, 1, "", "to"], [524, 3, 1, "", "to_empty"], [524, 3, 1, "", "train"], [524, 3, 1, "", "type"], [524, 3, 1, "", "xpu"], [524, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP": [[525, 3, 1, "", "__init__"], [525, 3, 1, "", "add_module"], [525, 3, 1, "", "apply"], [525, 3, 1, "", "bfloat16"], [525, 3, 1, "", "buffers"], [525, 3, 1, "", "children"], [525, 3, 1, "", "construct_progressive_hidden_layers"], [525, 3, 1, "", "cpu"], [525, 3, 1, "", "cuda"], [525, 3, 1, "", "double"], [525, 4, 1, "", "dump_patches"], [525, 3, 1, "", "eval"], [525, 3, 1, "", "extra_repr"], [525, 3, 1, "", "float"], [525, 3, 1, "", "forward"], [525, 3, 1, "", "get_buffer"], [525, 3, 1, "", "get_extra_state"], [525, 3, 1, "", "get_parameter"], [525, 3, 1, "", "get_submodule"], [525, 3, 1, "", "half"], [525, 3, 1, "", "infer_input_shape"], [525, 3, 1, "", "infer_output_shape"], [525, 5, 1, "", "input_shape"], [525, 3, 1, "", "load_state_dict"], [525, 3, 1, "", "modules"], [525, 3, 1, "", "named_buffers"], [525, 3, 1, "", "named_children"], [525, 3, 1, "", "named_modules"], [525, 3, 1, "", "named_parameters"], [525, 5, 1, "", "output_shape"], [525, 3, 1, "", "parameters"], [525, 3, 1, "", "register_backward_hook"], [525, 3, 1, "", "register_buffer"], [525, 3, 1, "", "register_forward_hook"], [525, 3, 1, "", "register_forward_pre_hook"], [525, 3, 1, "", "register_full_backward_hook"], [525, 3, 1, "", "register_module"], [525, 3, 1, "", "register_parameter"], [525, 3, 1, "", "requires_grad_"], [525, 3, 1, "", "sample_input"], [525, 3, 1, "", "set_extra_state"], [525, 3, 1, "", "share_memory"], [525, 3, 1, "", "state_dict"], [525, 3, 1, "", "to"], [525, 3, 1, "", "to_empty"], [525, 3, 1, "", "train"], [525, 3, 1, "", "type"], [525, 3, 1, "", "xpu"], [525, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction": [[527, 2, 1, "", "DisjunctMLP"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP": [[527, 3, 1, "", "__init__"], [527, 3, 1, "", "add_module"], [527, 3, 1, "", "apply"], [527, 3, 1, "", "bfloat16"], [527, 3, 1, "", "buffers"], [527, 3, 1, "", "children"], [527, 3, 1, "", "construct_progressive_hidden_layers"], [527, 3, 1, "", "cpu"], [527, 3, 1, "", "cuda"], [527, 3, 1, "", "double"], [527, 4, 1, "", "dump_patches"], [527, 3, 1, "", "eval"], [527, 3, 1, "", "extra_repr"], [527, 3, 1, "", "float"], [527, 3, 1, "", "forward"], [527, 3, 1, "", "get_buffer"], [527, 3, 1, "", "get_extra_state"], [527, 3, 1, "", "get_parameter"], [527, 3, 1, "", "get_submodule"], [527, 3, 1, "", "half"], [527, 3, 1, "", "infer_input_shape"], [527, 3, 1, "", "infer_output_shape"], [527, 5, 1, "", "input_shape"], [527, 3, 1, "", "load_state_dict"], [527, 3, 1, "", "modules"], [527, 3, 1, "", "named_buffers"], [527, 3, 1, "", "named_children"], [527, 3, 1, "", "named_modules"], [527, 3, 1, "", "named_parameters"], [527, 5, 1, "", "output_shape"], [527, 3, 1, "", "parameters"], [527, 3, 1, "", "register_backward_hook"], [527, 3, 1, "", "register_buffer"], [527, 3, 1, "", "register_forward_hook"], [527, 3, 1, "", "register_forward_pre_hook"], [527, 3, 1, "", "register_full_backward_hook"], [527, 3, 1, "", "register_module"], [527, 3, 1, "", "register_parameter"], [527, 3, 1, "", "requires_grad_"], [527, 3, 1, "", "sample_input"], [527, 3, 1, "", "set_extra_state"], [527, 3, 1, "", "share_memory"], [527, 3, 1, "", "state_dict"], [527, 3, 1, "", "to"], [527, 3, 1, "", "to_empty"], [527, 3, 1, "", "train"], [527, 3, 1, "", "type"], [527, 3, 1, "", "xpu"], [527, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.fourier": [[529, 2, 1, "", "BaseFourierFeatureMLP"]], "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP": [[529, 3, 1, "", "__init__"], [529, 3, 1, "", "add_module"], [529, 3, 1, "", "apply"], [529, 3, 1, "", "bfloat16"], [529, 3, 1, "", "buffers"], [529, 3, 1, "", "children"], [529, 3, 1, "", "cpu"], [529, 3, 1, "", "cuda"], [529, 3, 1, "", "double"], [529, 4, 1, "", "dump_patches"], [529, 3, 1, "", "eval"], [529, 3, 1, "", "extra_repr"], [529, 3, 1, "", "float"], [529, 3, 1, "", "forward"], [529, 3, 1, "", "get_buffer"], [529, 3, 1, "", "get_extra_state"], [529, 3, 1, "", "get_parameter"], [529, 3, 1, "", "get_submodule"], [529, 3, 1, "", "half"], [529, 3, 1, "", "load_state_dict"], [529, 3, 1, "", "modules"], [529, 3, 1, "", "named_buffers"], [529, 3, 1, "", "named_children"], [529, 3, 1, "", "named_modules"], [529, 3, 1, "", "named_parameters"], [529, 3, 1, "", "parameters"], [529, 3, 1, "", "register_backward_hook"], [529, 3, 1, "", "register_buffer"], [529, 3, 1, "", "register_forward_hook"], [529, 3, 1, "", "register_forward_pre_hook"], [529, 3, 1, "", "register_full_backward_hook"], [529, 3, 1, "", "register_module"], [529, 3, 1, "", "register_parameter"], [529, 3, 1, "", "requires_grad_"], [529, 3, 1, "", "save"], [529, 3, 1, "", "set_extra_state"], [529, 3, 1, "", "share_memory"], [529, 3, 1, "", "state_dict"], [529, 3, 1, "", "to"], [529, 3, 1, "", "to_empty"], [529, 3, 1, "", "train"], [529, 3, 1, "", "type"], [529, 3, 1, "", "xpu"], [529, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.datasets": [[531, 0, 0, "-", "non_sequential_dataset"], [533, 0, 0, "-", "random_dataset"], [535, 0, 0, "-", "supervised"]], "draugr.torch_utilities.datasets.non_sequential_dataset": [[532, 2, 1, "", "NonSequentialDataset"]], "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset": [[532, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.random_dataset": [[534, 2, 1, "", "RandomDataset"]], "draugr.torch_utilities.datasets.random_dataset.RandomDataset": [[534, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.supervised": [[536, 0, 0, "-", "categorical_dataset"], [538, 0, 0, "-", "supervised_dataset"], [540, 0, 0, "-", "vision_datasets"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset": [[537, 2, 1, "", "CategoricalDataset"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset": [[537, 3, 1, "", "__init__"], [537, 5, 1, "", "categories"], [537, 3, 1, "", "idx_to_str"], [537, 5, 1, "", "predictor_shape"], [537, 5, 1, "", "response_shape"], [537, 5, 1, "", "split_names"], [537, 3, 1, "", "str_to_idx"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset": [[539, 2, 1, "", "SupervisedDataset"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset": [[539, 3, 1, "", "__init__"], [539, 5, 1, "", "predictor_shape"], [539, 5, 1, "", "response_shape"], [539, 5, 1, "", "split_names"]], "draugr.torch_utilities.datasets.supervised.vision_datasets": [[541, 0, 0, "-", "dict_dataset"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset": [[542, 2, 1, "", "DictDatasetFolder"], [543, 2, 1, "", "SplitDictDatasetFolder"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder": [[542, 3, 1, "", "__init__"], [542, 3, 1, "", "sample"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder": [[543, 3, 1, "", "__init__"], [543, 3, 1, "", "sample"]], "draugr.torch_utilities.distributions": [[545, 0, 0, "-", "entropy"]], "draugr.torch_utilities.distributions.entropy": [[546, 1, 1, "", "differential_entropy_gaussian"], [547, 1, 1, "", "log_shannon_entropy"], [548, 1, 1, "", "normal_entropy"], [549, 1, 1, "", "normal_log_density"], [550, 1, 1, "", "shannon_entropy"]], "draugr.torch_utilities.evaluation": [[552, 0, 0, "-", "classification"], [554, 0, 0, "-", "cross_validation"]], "draugr.torch_utilities.evaluation.classification": [[553, 1, 1, "", "find_n_misclassified"]], "draugr.torch_utilities.evaluation.cross_validation": [[555, 1, 1, "", "cross_validation_generator"]], "draugr.torch_utilities.exporting": [[557, 0, 0, "-", "latex_tables"], [561, 0, 0, "-", "summary"]], "draugr.torch_utilities.exporting.latex_tables": [[558, 1, 1, "", "adasdassijd"], [559, 1, 1, "", "asijd"], [560, 1, 1, "", "iasjduh"]], "draugr.torch_utilities.exporting.summary": [[562, 1, 1, "", "to_latex_table"]], "draugr.torch_utilities.generators": [[564, 0, 0, "-", "batching"], [566, 0, 0, "-", "to_tensor_generator"]], "draugr.torch_utilities.generators.batching": [[565, 2, 1, "", "LimitedBatchResampler"]], "draugr.torch_utilities.generators.batching.LimitedBatchResampler": [[565, 3, 1, "", "__init__"]], "draugr.torch_utilities.images": [[568, 0, 0, "-", "channel_transform"], [573, 0, 0, "-", "conversion"]], "draugr.torch_utilities.images.channel_transform": [[569, 1, 1, "", "float_chw_to_hwc_uint_tensor"], [570, 1, 1, "", "float_nchw_to_nhwc_uint_batch"], [571, 1, 1, "", "uint_hwc_to_chw_float_tensor"], [572, 1, 1, "", "uint_nhwc_to_nchw_float_batch"]], "draugr.torch_utilities.images.conversion": [[574, 1, 1, "", "quick_to_pil_image"]], "draugr.torch_utilities.opencv": [[576, 0, 0, "-", "torch_conversion"]], "draugr.torch_utilities.opencv.torch_conversion": [[577, 2, 1, "", "CV2ToImage"], [578, 2, 1, "", "CV2ToTensor"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage": [[577, 3, 1, "", "__init__"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor": [[578, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations": [[580, 0, 0, "-", "boxes_2d"], [582, 0, 0, "-", "enums"], [584, 0, 0, "-", "sizes"], [595, 0, 0, "-", "torch_transforms"]], "draugr.torch_utilities.operations.boxes_2d": [[581, 1, 1, "", "minmax_to_xywh_torch"]], "draugr.torch_utilities.operations.enums": [[583, 2, 1, "", "ReductionMethodEnum"]], "draugr.torch_utilities.operations.enums.ReductionMethodEnum": [[583, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.sizes": [[585, 0, 0, "-", "conv2d"], [588, 0, 0, "-", "max_pool2d"], [590, 0, 0, "-", "pad2d"], [592, 0, 0, "-", "transp_conv2d"]], "draugr.torch_utilities.operations.sizes.conv2d": [[586, 1, 1, "", "conv2d_hw_shape"], [587, 1, 1, "", "conv2d_padding_size"]], "draugr.torch_utilities.operations.sizes.max_pool2d": [[589, 1, 1, "", "max_pool2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.pad2d": [[591, 1, 1, "", "pad2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.transp_conv2d": [[593, 1, 1, "", "transp_conv2d_output_shape"], [594, 1, 1, "", "transp_conv2d_padding_sizes"]], "draugr.torch_utilities.operations.torch_transforms": [[596, 0, 0, "-", "batch_transforms"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms": [[597, 2, 1, "", "BatchNormalize"], [598, 2, 1, "", "BatchRandomCrop"], [599, 2, 1, "", "BatchRandomHorizontalFlip"], [600, 2, 1, "", "BatchToTensor"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize": [[597, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop": [[598, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip": [[599, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor": [[600, 3, 1, "", "__init__"]], "draugr.torch_utilities.optimisation": [[602, 0, 0, "-", "debugging"], [619, 0, 0, "-", "parameters"], [622, 0, 0, "-", "scheduling"], [629, 0, 0, "-", "stopping"], [633, 0, 0, "-", "updates"]], "draugr.torch_utilities.optimisation.debugging": [[603, 0, 0, "-", "gradients"], [615, 0, 0, "-", "layer_fetching"]], "draugr.torch_utilities.optimisation.debugging.gradients": [[604, 0, 0, "-", "checking"], [607, 0, 0, "-", "flow"], [609, 0, 0, "-", "grad_trace"], [612, 0, 0, "-", "guided"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking": [[605, 0, 0, "-", "numerical_gradient"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient": [[606, 1, 1, "", "loss_grad_check"]], "draugr.torch_utilities.optimisation.debugging.gradients.flow": [[608, 1, 1, "", "plot_grad_flow"]], "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace": [[610, 1, 1, "", "print_grad_trace"], [611, 1, 1, "", "register_bad_grad_hooks"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided": [[613, 2, 1, "", "GuidedBackPropReLU"], [614, 2, 1, "", "GuidedBackPropReLUModel"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU": [[613, 3, 1, "", "__init__"], [613, 3, 1, "", "backward"], [613, 3, 1, "", "forward"], [613, 3, 1, "", "jvp"], [613, 3, 1, "", "mark_dirty"], [613, 3, 1, "", "mark_non_differentiable"], [613, 3, 1, "", "save_for_backward"], [613, 3, 1, "", "save_for_forward"], [613, 3, 1, "", "set_materialize_grads"], [613, 3, 1, "", "vjp"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel": [[614, 3, 1, "", "__init__"], [614, 3, 1, "", "forward"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching": [[616, 2, 1, "", "IntermediateLayerGetter"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter": [[616, 3, 1, "", "__init__"], [616, 3, 1, "", "reduce_getattr"]], "draugr.torch_utilities.optimisation.debugging.opt_verification": [[618, 1, 1, "", "overfit_single_batch"]], "draugr.torch_utilities.optimisation.parameters": [[620, 1, 1, "", "freeze_parameters"], [621, 1, 1, "", "frozen_parameters"]], "draugr.torch_utilities.optimisation.scheduling": [[623, 0, 0, "-", "learning_rate_utilities"], [625, 0, 0, "-", "lr_scheduler"], [627, 0, 0, "-", "schedulers"]], "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities": [[624, 1, 1, "", "set_lr"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler": [[626, 2, 1, "", "WarmupMultiStepLR"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR": [[626, 3, 1, "", "__init__"], [626, 3, 1, "", "get_last_lr"], [626, 3, 1, "", "get_lr"], [626, 3, 1, "", "load_state_dict"], [626, 3, 1, "", "print_lr"], [626, 3, 1, "", "state_dict"]], "draugr.torch_utilities.optimisation.scheduling.schedulers": [[628, 1, 1, "", "warmup_lr_scheduler"]], "draugr.torch_utilities.optimisation.stopping": [[630, 0, 0, "-", "overfitting"]], "draugr.torch_utilities.optimisation.stopping.overfitting": [[631, 2, 1, "", "ImprovementDetector"], [632, 2, 1, "", "OverfitDetector"]], "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector": [[631, 3, 1, "", "__init__"], [631, 3, 1, "", "reset"]], "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector": [[632, 3, 1, "", "__init__"], [632, 3, 1, "", "reset"]], "draugr.torch_utilities.optimisation.updates": [[634, 0, 0, "-", "copying"], [637, 0, 0, "-", "soft_update"]], "draugr.torch_utilities.optimisation.updates.copying": [[635, 1, 1, "", "copy_parameters"], [636, 1, 1, "", "copy_state"]], "draugr.torch_utilities.persistence": [[639, 0, 0, "-", "checkpoint"], [642, 0, 0, "-", "config"], [645, 0, 0, "-", "model"], [651, 0, 0, "-", "naming"], [653, 0, 0, "-", "parameters"]], "draugr.torch_utilities.persistence.checkpoint": [[640, 1, 1, "", "load_checkpoint"], [641, 1, 1, "", "save_checkpoint"]], "draugr.torch_utilities.persistence.config": [[643, 1, 1, "", "ensure_directory_exist"], [644, 1, 1, "", "save_config"]], "draugr.torch_utilities.persistence.model": [[646, 1, 1, "", "convert_saved_model_to_cpu"], [647, 1, 1, "", "load_latest_model"], [648, 1, 1, "", "load_model"], [649, 1, 1, "", "save_model"], [650, 1, 1, "", "save_model_and_configuration"]], "draugr.torch_utilities.persistence.naming": [[652, 1, 1, "", "get_model_hash"]], "draugr.torch_utilities.persistence.parameters": [[654, 1, 1, "", "load_latest_model_parameters"], [655, 1, 1, "", "load_model_parameters"], [656, 1, 1, "", "save_model_parameters"], [657, 1, 1, "", "save_parameters_and_configuration"]], "draugr.torch_utilities.sessions": [[659, 0, 0, "-", "cache_sessions"], [661, 0, 0, "-", "determinism_sessions"], [663, 0, 0, "-", "device_sessions"], [667, 0, 0, "-", "jit_sessions"], [670, 0, 0, "-", "model_sessions"], [675, 0, 0, "-", "type_sessions"]], "draugr.torch_utilities.sessions.cache_sessions": [[660, 2, 1, "", "TorchCacheSession"]], "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession": [[660, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.determinism_sessions": [[662, 2, 1, "", "TorchDeterministicSession"]], "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession": [[662, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions": [[664, 2, 1, "", "TorchCpuSession"], [665, 2, 1, "", "TorchCudaSession"], [666, 2, 1, "", "TorchDeviceSession"]], "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession": [[664, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession": [[665, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession": [[666, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions": [[668, 2, 1, "", "TorchIgnoreJitSession"], [669, 2, 1, "", "TorchJitSession"]], "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession": [[668, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession": [[669, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions": [[671, 2, 1, "", "TorchEvalSession"], [672, 2, 1, "", "TorchFrozenModelSession"], [673, 2, 1, "", "TorchTrainSession"], [674, 4, 1, "", "TorchTrainingSession"]], "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession": [[671, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession": [[672, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession": [[673, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.type_sessions": [[676, 2, 1, "", "DefaultTypeSession"]], "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession": [[676, 3, 1, "", "__init__"]], "draugr.torch_utilities.system": [[678, 0, 0, "-", "constants"], [680, 0, 0, "-", "data_type"], [683, 0, 0, "-", "device"], [691, 0, 0, "-", "info"], [694, 0, 0, "-", "loading"], [697, 0, 0, "-", "seeding"]], "draugr.torch_utilities.system.constants": [[679, 1, 1, "", "torch_pi"]], "draugr.torch_utilities.system.data_type": [[681, 1, 1, "", "global_torch_dtype"], [682, 1, 1, "", "set_global_torch_dtype"]], "draugr.torch_utilities.system.device": [[684, 2, 1, "", "TorchDeviceEnum"], [685, 1, 1, "", "auto_select_available_cuda_device"], [686, 1, 1, "", "get_gpu_usage_mb"], [687, 1, 1, "", "global_torch_device"], [688, 1, 1, "", "select_cuda_device"], [689, 1, 1, "", "set_global_torch_device"], [690, 1, 1, "", "torch_clean_up"]], "draugr.torch_utilities.system.device.TorchDeviceEnum": [[684, 3, 1, "", "__init__"]], "draugr.torch_utilities.system.info": [[692, 1, 1, "", "cuda_info"], [693, 1, 1, "", "system_info"]], "draugr.torch_utilities.system.loading": [[695, 1, 1, "", "default_worker_init_fn"], [696, 1, 1, "", "global_pin_memory"]], "draugr.torch_utilities.system.seeding": [[698, 1, 1, "", "torch_seed"]], "draugr.torch_utilities.tensors": [[700, 0, 0, "-", "dimension_order"], [707, 0, 0, "-", "info"], [709, 0, 0, "-", "mixins"], [711, 0, 0, "-", "normalise"], [713, 0, 0, "-", "reshaping"], [717, 0, 0, "-", "tensor_container"], [719, 0, 0, "-", "to_scalar"], [720, 0, 0, "-", "to_tensor"], [721, 0, 0, "-", "types"]], "draugr.torch_utilities.tensors.dimension_order": [[701, 1, 1, "", "chw_to_hwc_tensor"], [702, 1, 1, "", "hwc_to_chw_tensor"], [703, 1, 1, "", "nchw_to_nhwc_tensor"], [704, 1, 1, "", "nhwc_to_nchw_tensor"], [705, 1, 1, "", "ntchw_to_nthwc_tensor"], [706, 1, 1, "", "nthwc_to_ntchw_tensor"]], "draugr.torch_utilities.tensors.info": [[708, 1, 1, "", "size_of_tensor"]], "draugr.torch_utilities.tensors.mixins": [[710, 2, 1, "", "TensoriseMixin"]], "draugr.torch_utilities.tensors.mixins.TensoriseMixin": [[710, 3, 1, "", "__init__"]], "draugr.torch_utilities.tensors.normalise": [[712, 1, 1, "", "standardise"]], "draugr.torch_utilities.tensors.reshaping": [[714, 1, 1, "", "flatten_keep_batch"], [715, 1, 1, "", "flatten_tn_dim"], [716, 1, 1, "", "safe_concat"]], "draugr.torch_utilities.tensors.tensor_container": [[718, 2, 1, "", "NamedTensorTuple"]], "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple": [[718, 3, 1, "", "__init__"], [718, 3, 1, "", "numpy"], [718, 3, 1, "", "to"]], "draugr.torch_utilities.tensors.types": [[722, 1, 1, "", "numpy_to_torch_dtype"], [723, 1, 1, "", "torch_to_numpy_dtype"]], "draugr.torch_utilities.writers": [[725, 0, 0, "-", "mixins"], [728, 0, 0, "-", "tensorboard"], [734, 0, 0, "-", "torch_module_writer"], [740, 0, 0, "-", "visdom"]], "draugr.torch_utilities.writers.mixins": [[726, 0, 0, "-", "graph_writer_mixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin": [[727, 2, 1, "", "GraphWriterMixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin": [[727, 3, 1, "", "__init__"], [727, 3, 1, "", "graph"]], "draugr.torch_utilities.writers.tensorboard": [[729, 0, 0, "-", "launcher"], [731, 0, 0, "-", "tensorboard_pytorch_writer"]], "draugr.torch_utilities.writers.tensorboard.launcher": [[730, 1, 1, "", "launch_tensorboard"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer": [[732, 4, 1, "", "PTW"], [733, 2, 1, "", "TensorBoardPytorchWriter"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter": [[733, 2, 1, "", "MultiChannelMethodEnum"], [733, 3, 1, "", "__init__"], [733, 3, 1, "", "bar"], [733, 3, 1, "", "blip"], [733, 3, 1, "", "close"], [733, 3, 1, "", "embed"], [733, 3, 1, "", "figure"], [733, 3, 1, "", "filter"], [733, 3, 1, "", "graph"], [733, 3, 1, "", "histogram"], [733, 3, 1, "", "image"], [733, 3, 1, "", "instance"], [733, 3, 1, "", "line"], [733, 3, 1, "", "mesh"], [733, 3, 1, "", "open"], [733, 3, 1, "", "parameters"], [733, 3, 1, "", "precision_recall_curve"], [733, 3, 1, "", "scalar"], [733, 3, 1, "", "spectrogram"], [733, 3, 1, "", "video"], [733, 5, 1, "", "writer"]], "draugr.torch_utilities.writers.torch_module_writer": [[735, 0, 0, "-", "module_parameter_writer_mixin"], [737, 0, 0, "-", "module_writer_hook"], [738, 0, 0, "-", "module_writer_parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin": [[736, 2, 1, "", "ModuleParameterWriterMixin"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin": [[736, 3, 1, "", "__init__"], [736, 3, 1, "", "parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters": [[739, 1, 1, "", "weight_bias_histograms"]], "draugr.torch_utilities.writers.visdom": [[741, 0, 0, "-", "episode_visual"], [743, 0, 0, "-", "plotting"], [745, 0, 0, "-", "visdom_writer"]], "draugr.torch_utilities.writers.visdom.episode_visual": [[742, 1, 1, "", "update_visualiser"]], "draugr.torch_utilities.writers.visdom.plotting": [[744, 1, 1, "", "plot_episode_stats"]], "draugr.torch_utilities.writers.visdom.visdom_writer": [[746, 2, 1, "", "VisdomWriter"]], "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter": [[746, 3, 1, "", "__init__"], [746, 3, 1, "", "blip"], [746, 3, 1, "", "close"], [746, 3, 1, "", "filter"], [746, 3, 1, "", "open"], [746, 3, 1, "", "scalar"]], "draugr.tqdm_utilities": [[748, 0, 0, "-", "pooled_progress_bar"], [755, 0, 0, "-", "progress_bar"]], "draugr.tqdm_utilities.pooled_progress_bar": [[749, 1, 1, "", "parallel_imap"], [750, 1, 1, "", "parallel_map"], [751, 1, 1, "", "parallel_uimap"], [752, 1, 1, "", "parallel_umap"], [753, 1, 1, "", "sequential_imap"], [754, 1, 1, "", "sequential_map"]], "draugr.visualisation": [[757, 0, 0, "-", "ggplot_utilities"], [758, 0, 0, "-", "matplotlib_utilities"], [770, 0, 0, "-", "pillow_utilities"], [776, 0, 0, "-", "seaborn_utilities"]], "draugr.visualisation.matplotlib_utilities": [[759, 2, 1, "", "MatplotlibHorizontalAlignment"], [760, 2, 1, "", "MatplotlibVerticalAlignment"], [761, 1, 1, "", "annotate_point"], [762, 1, 1, "", "decolorise_plot"], [763, 1, 1, "", "denormalise_minusoneone"], [764, 1, 1, "", "latex_clean_label"], [765, 1, 1, "", "make_errorbar_legend"], [766, 1, 1, "", "matplotlib_bounding_box"], [767, 1, 1, "", "remove_decoration"], [768, 1, 1, "", "save_embed_fig"], [769, 1, 1, "", "use_monochrome_style"]], "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment": [[759, 3, 1, "", "__init__"]], "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment": [[760, 3, 1, "", "__init__"]], "draugr.visualisation.pillow_utilities": [[771, 1, 1, "", "byte_array_to_pil_image"], [772, 1, 1, "", "np_array_to_pil_img"], [773, 1, 1, "", "pil_image_to_byte_array"], [774, 1, 1, "", "pil_img_to_np_array"], [775, 1, 1, "", "pil_merge_images"]], "draugr.visualisation.seaborn_utilities": [[777, 1, 1, "", "despine_all"], [778, 1, 1, "", "exponential_moving_average"], [779, 1, 1, "", "set_y_log_scale"]], "draugr.writers": [[781, 0, 0, "-", "csv_writer"], [783, 0, 0, "-", "databases"], [788, 0, 0, "-", "log_writer"], [818, 0, 0, "-", "mock_writer"], [820, 0, 0, "-", "standard_tags"], [829, 0, 0, "-", "terminal"], [845, 0, 0, "-", "writer"], [849, 0, 0, "-", "writer_utilities"]], "draugr.writers.csv_writer": [[782, 2, 1, "", "CSVWriter"]], "draugr.writers.csv_writer.CSVWriter": [[782, 3, 1, "", "__init__"], [782, 3, 1, "", "blip"], [782, 3, 1, "", "close"], [782, 3, 1, "", "filter"], [782, 3, 1, "", "get_csv_writer"], [782, 3, 1, "", "open"], [782, 3, 1, "", "scalar"]], "draugr.writers.databases": [[784, 0, 0, "-", "hdf_writer"], [786, 0, 0, "-", "sqlite_writer"]], "draugr.writers.databases.hdf_writer": [[785, 2, 1, "", "HdfWriter"]], "draugr.writers.databases.hdf_writer.HdfWriter": [[785, 3, 1, "", "__init__"], [785, 3, 1, "", "blip"], [785, 3, 1, "", "close"], [785, 3, 1, "", "filter"], [785, 3, 1, "", "open"], [785, 3, 1, "", "scalar"]], "draugr.writers.databases.sqlite_writer": [[787, 2, 1, "", "SqliteWriter"]], "draugr.writers.databases.sqlite_writer.SqliteWriter": [[787, 3, 1, "", "__init__"], [787, 3, 1, "", "blip"], [787, 3, 1, "", "close"], [787, 3, 1, "", "filter"], [787, 3, 1, "", "open"], [787, 3, 1, "", "scalar"]], "draugr.writers.log_writer": [[789, 2, 1, "", "LogWriter"]], "draugr.writers.log_writer.LogWriter": [[789, 3, 1, "", "__init__"], [789, 3, 1, "", "blip"], [789, 3, 1, "", "close"], [789, 3, 1, "", "filter"], [789, 3, 1, "", "get_logger"], [789, 3, 1, "", "log"], [789, 3, 1, "", "open"], [789, 3, 1, "", "scalar"], [789, 3, 1, "", "text"]], "draugr.writers.mixins": [[791, 0, 0, "-", "audio_writer_mixin"], [793, 0, 0, "-", "bar_writer_mixin"], [795, 0, 0, "-", "embed_writer_mixin"], [797, 0, 0, "-", "figure_writer_mixin"], [799, 0, 0, "-", "histogram_writer_mixin"], [801, 0, 0, "-", "image_writer_mixin"], [803, 0, 0, "-", "instantiation_writer_mixin"], [805, 0, 0, "-", "line_writer_mixin"], [807, 0, 0, "-", "mesh_writer_mixin"], [809, 0, 0, "-", "precision_recall_writer_mixin"], [811, 0, 0, "-", "scalar_writer_mixin"], [813, 0, 0, "-", "spectrogram_writer_mixin"], [815, 0, 0, "-", "video_writer_mixin"]], "draugr.writers.mixins.audio_writer_mixin": [[792, 2, 1, "", "AudioWriterMixin"]], "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin": [[792, 3, 1, "", "__init__"], [792, 3, 1, "", "audio"]], "draugr.writers.mixins.bar_writer_mixin": [[794, 2, 1, "", "BarWriterMixin"]], "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin": [[794, 3, 1, "", "__init__"], [794, 3, 1, "", "bar"]], "draugr.writers.mixins.embed_writer_mixin": [[796, 2, 1, "", "EmbedWriterMixin"]], "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin": [[796, 3, 1, "", "__init__"], [796, 3, 1, "", "embed"]], "draugr.writers.mixins.figure_writer_mixin": [[798, 2, 1, "", "FigureWriterMixin"]], "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin": [[798, 3, 1, "", "__init__"], [798, 3, 1, "", "figure"]], "draugr.writers.mixins.histogram_writer_mixin": [[800, 2, 1, "", "HistogramWriterMixin"]], "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin": [[800, 3, 1, "", "__init__"], [800, 3, 1, "", "histogram"]], "draugr.writers.mixins.image_writer_mixin": [[802, 2, 1, "", "ImageWriterMixin"]], "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin": [[802, 2, 1, "", "MultiChannelMethodEnum"], [802, 3, 1, "", "__init__"], [802, 3, 1, "", "image"]], "draugr.writers.mixins.instantiation_writer_mixin": [[804, 2, 1, "", "InstantiationWriterMixin"]], "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin": [[804, 3, 1, "", "__init__"], [804, 3, 1, "", "instance"]], "draugr.writers.mixins.line_writer_mixin": [[806, 2, 1, "", "LineWriterMixin"]], "draugr.writers.mixins.line_writer_mixin.LineWriterMixin": [[806, 3, 1, "", "__init__"], [806, 3, 1, "", "line"]], "draugr.writers.mixins.mesh_writer_mixin": [[808, 2, 1, "", "MeshWriterMixin"]], "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin": [[808, 3, 1, "", "__init__"], [808, 3, 1, "", "mesh"]], "draugr.writers.mixins.precision_recall_writer_mixin": [[810, 2, 1, "", "PrecisionRecallCurveWriterMixin"]], "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin": [[810, 3, 1, "", "__init__"], [810, 3, 1, "", "precision_recall_curve"]], "draugr.writers.mixins.scalar_writer_mixin": [[812, 2, 1, "", "ScalarWriterMixin"]], "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin": [[812, 3, 1, "", "__init__"], [812, 3, 1, "", "blip"], [812, 3, 1, "", "scalar"]], "draugr.writers.mixins.spectrogram_writer_mixin": [[814, 2, 1, "", "SpectrogramWriterMixin"]], "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin": [[814, 3, 1, "", "__init__"], [814, 3, 1, "", "spectrogram"]], "draugr.writers.mixins.video_writer_mixin": [[816, 2, 1, "", "VideoInputDimsEnum"], [817, 2, 1, "", "VideoWriterMixin"]], "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum": [[816, 3, 1, "", "__init__"]], "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin": [[817, 3, 1, "", "__init__"], [817, 3, 1, "", "video"]], "draugr.writers.mock_writer": [[819, 2, 1, "", "MockWriter"]], "draugr.writers.mock_writer.MockWriter": [[819, 3, 1, "", "__init__"], [819, 3, 1, "", "blip"], [819, 3, 1, "", "close"], [819, 3, 1, "", "filter"], [819, 3, 1, "", "open"], [819, 3, 1, "", "scalar"]], "draugr.writers.standard_tags": [[821, 2, 1, "", "TestingCurves"], [822, 2, 1, "", "TestingScalars"], [823, 2, 1, "", "TestingTables"], [824, 2, 1, "", "TrainingCurves"], [825, 2, 1, "", "TrainingScalars"], [826, 2, 1, "", "TrainingTables"], [827, 1, 1, "", "should_plot_y_log_scale"], [828, 1, 1, "", "should_smooth_series"]], "draugr.writers.standard_tags.TestingCurves": [[821, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingScalars": [[822, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingTables": [[823, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingCurves": [[824, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingScalars": [[825, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingTables": [[826, 3, 1, "", "__init__"]], "draugr.writers.terminal": [[830, 0, 0, "-", "console_writer"], [832, 0, 0, "-", "terminal_image_renderer"], [839, 0, 0, "-", "terminal_plot"], [840, 0, 0, "-", "terminal_plot_writer"], [842, 0, 0, "-", "terminal_plotter"], [843, 0, 0, "-", "terminal_utilities"]], "draugr.writers.terminal.console_writer": [[831, 2, 1, "", "ConsoleWriter"]], "draugr.writers.terminal.console_writer.ConsoleWriter": [[831, 3, 1, "", "__init__"], [831, 3, 1, "", "blip"], [831, 3, 1, "", "close"], [831, 3, 1, "", "filter"], [831, 3, 1, "", "open"], [831, 3, 1, "", "scalar"]], "draugr.writers.terminal.terminal_image_renderer": [[833, 1, 1, "", "entry_point"], [834, 1, 1, "", "get_image"], [835, 1, 1, "", "get_pixel"], [836, 1, 1, "", "render_file"], [837, 1, 1, "", "render_image"], [838, 1, 1, "", "terminalise_image"]], "draugr.writers.terminal.terminal_plot_writer": [[841, 2, 1, "", "TerminalPlotWriter"]], "draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter": [[841, 2, 1, "", "MultiChannelMethodEnum"], [841, 3, 1, "", "__init__"], [841, 3, 1, "", "blip"], [841, 3, 1, "", "close"], [841, 3, 1, "", "filter"], [841, 3, 1, "", "image"], [841, 3, 1, "", "open"], [841, 3, 1, "", "scalar"], [841, 3, 1, "", "stats"]], "draugr.writers.terminal.terminal_utilities": [[844, 1, 1, "", "scale"]], "draugr.writers.writer": [[846, 2, 1, "", "Writer"], [847, 1, 1, "", "global_writer"], [848, 1, 1, "", "set_global_writer"]], "draugr.writers.writer.Writer": [[846, 3, 1, "", "__init__"], [846, 3, 1, "", "blip"], [846, 3, 1, "", "close"], [846, 3, 1, "", "filter"], [846, 3, 1, "", "open"], [846, 3, 1, "", "scalar"]], "draugr.writers.writer_utilities": [[850, 1, 1, "", "metrics"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"draugr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852], "dist_is_edit": 1, "dlib_util": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dlib5faciallandmarksindic": 4, "dlib68faciallandmarksindic": 5, "eye_aspect_ratio": 6, "mouth_aspect_ratio": 7, "rect_to_bounding_box": 8, "shape_to_ndarrai": 9, "exclud": [10, 11, 12, 53, 291, 292, 293, 294, 295, 296, 297, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 433, 434, 435, 436, 437, 438, 439, 440, 497], "flag": [11, 12, 222, 223, 224, 225, 226, 227], "tupleflag": 12, "facealign": [13, 14], "align_fac": 14, "drawer": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "mpl_drawer": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "discrete_scroll_plot": 19, "distribution_plot": [20, 21], "distributionplot": 21, "image_stream_plot": [22, 23], "imagestreamplot": 23, "mpldrawer": [24, 25, 26], "mockdraw": 25, "series_scroll_plot": [27, 28], "seriesscrollplot": 28, "spectral": [29, 30, 31, 32, 33], "fast_fourier_transform": [30, 31], "fastfouriertransformplot": 31, "fast_fourier_transform_spectrogram": [32, 33], "fastfouriertransformspectrogramplot": 33, "opencv_draw": [34, 35, 36, 191, 192, 193], "opencv_image_stream": [35, 36], "opencvimagestream": 36, "entry_point": [37, 38, 39, 40, 41, 42, 43, 44, 45, 833], "cpu_usage_entry_point": [38, 39], "main": [39, 41, 43, 45, 372, 374, 375, 376, 378, 439], "tensorboard_entry_point": [40, 41], "toggle_darkmod": [42, 43], "visdom_entry_point": [44, 45], "extens": [46, 47, 48, 49, 50, 51], "skimage_util": [47, 48], "rgb_to_grayscal": 48, "sorcery_util": [49, 50, 51], "lower_case_assigned_nam": 50, "upper_case_assigned_nam": 51, "ffmpeg_util": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "extract": [54, 55], "extract_fram": 55, "merg": [56, 57], "merge_video": 57, "sequencifi": [58, 59], "sequencify_fil": 59, "split": [60, 61, 101, 102, 103, 104, 105], "spilt_video": 61, "get_vers": 62, "jax_util": 63, "matlab_util": 64, "metric": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 850], "accumul": [66, 67, 68, 69], "lambda_accumul": 67, "mean_accumul": 68, "total_accumul": 69, "meter": [70, 71, 72], "averagemet": 71, "metric_aggreg": [73, 74, 75], "metricaggreg": 74, "save_metr": 75, "metric_collect": [76, 77], "metriccollect": 77, "metric_summari": [78, 79], "metricsummari": 79, "plot": [80, 743, 744], "multiprocessing_util": [81, 82, 83, 84, 85], "pooled_queue_processor": [82, 83, 84, 85], "cloudpicklebas": 83, "pooledqueueprocessor": 84, "pooledqueuetask": 85, "numpy_util": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "channel_transform": [87, 88, 89, 90, 91, 568, 569, 570, 571, 572], "chw_to_hwc": 88, "float_chw_to_hwc_uint": 89, "hwc_to_chw": 90, "uint_hwc_to_chw_float": 91, "dataset": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "categor": [93, 94, 95, 96, 97, 98, 99, 505, 506, 507], "deep_categori": [94, 95], "build_deep_categorical_dataset": 95, "flat_categori": [96, 97], "build_flat_dataset": 97, "shallow_categori": [98, 99], "build_shallow_categorical_dataset": 99, "default": [100, 264, 265, 266], "splitenum": 102, "splitindex": 103, "select_split": 104, "train_valid_test_split": 105, "manipul": [106, 107, 108], "myndarrai": 107, "recursive_flatten_numpi": 108, "mix": [109, 110], "mix_channel": 110, "power": [111, 112, 113, 114, 115, 116], "next_pow_10_numpi": 112, "next_pow_2_numpi": 113, "next_pow_numpi": 114, "next_power_10_numpi": 115, "next_power_2_numpi": 116, "raster_grid_2d_mask": [117, 118], "circular_mask": 118, "raster_grid_3d_mask": [119, 120], "sphere_mask": 120, "resiz": [121, 122, 258, 259, 260], "resize_arrai": 122, "sampl": [123, 124], "get_sampl": 124, "signal_util": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "pad": [126, 127, 128], "zero_pad_to": 127, "zero_pad_to_power_2": 128, "signal_mix": [129, 130], "mix_ratio": 130, "signal_project": [131, 132, 133, 134, 135], "heavisid": 132, "normalise_sign": 133, "normalise_signal_max_ab": 134, "normalise_signal_minmax": 135, "signal_statist": [136, 137, 138], "mean_squar": 137, "root_mean_squar": 138, "truncat": [139, 140, 141, 142], "last_dim_trunc": 140, "min_length_truncate_batch": 141, "truncate_to_power_2": 142, "opencv_util": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "bounding_box": [144, 145, 146, 147, 148, 149, 150, 151], "boxes_2d": [145, 146, 147, 580, 581], "minmax_to_xywh": 146, "xywh_to_minmax": 147, "evalu": [148, 149, 150, 151, 551, 552, 553, 554, 555], "intersect_numpi": 149, "jaccard_overlap_numpi": 150, "remove_null_box": 151, "color_spac": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "clean": [153, 154, 155], "cleanupmethod": 154, "clean_up": 155, "color": [156, 157, 158, 159], "is_singular_channel": 157, "num_channel": 158, "to_color": 159, "edg": [160, 161, 162, 163, 371, 372], "cannyapertures": 161, "toedgemethodenum": 162, "to_edg": 163, "gamma": [164, 165, 166, 167, 168, 169], "gamma_correct_byt": 165, "gamma_correct_fast_to_byt": 166, "gamma_correct_float_to_byt": 167, "linear_correct_byt": 168, "linear_correct_float_to_byt": 169, "grai": [170, 171, 172], "tograymethodenum": 171, "to_grai": 172, "nois": [173, 174, 175], "noisefiltermethodenum": 174, "noise_filt": 175, "threshold": [176, 177, 178, 179], "thresholdmethodenum": 177, "hsv_min_max_clip_mask": 178, "threshold_channel": 179, "draw": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "draw_box": [181, 182, 183, 184], "draw_bounding_box": 182, "draw_single_box": 183, "draw_single_rect": 184, "mask": [185, 186, 187, 188, 189, 190], "gauss_circl": [186, 187, 188, 189], "ellipse_bbox": 187, "make_gradient_v1": 188, "make_gradient_v2": 189, "segment_ellips": 190, "draw_mask": 192, "find_contour": 193, "opencv_drawing_util": [194, 195, 196, 197], "cube_3d_matrix": 195, "draw_axi": 196, "draw_cub": 197, "namespac": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "color_conversion_enum": [199, 200], "colorconversionenum": 200, "enum": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 384, 385, 386, 387, 388, 389, 390, 391, 392, 582, 583], "bordertypeenum": 202, "camerapropertyenum": 203, "comparisonenum": 204, "contourapproximationmodeenum": 205, "contourretrievalmodeenum": 206, "datatypeenum": 207, "distancetransformlabeltypeenum": 208, "distancetransformmaskenum": 209, "distancetypeenum": 210, "fontenum": 211, "houghmodeenum": 212, "kmeansenum": 213, "linetypeenum": 214, "markertypeenum": 215, "morphshapeenum": 216, "morphtypeenum": 217, "mouseeventenum": 218, "rectanglesintersecttyp": 219, "videocaptureapienum": 220, "windowflagenum": 221, "drawmatchesflagenum": 223, "mouseeventflag": 224, "termcriteriaflag": 225, "thresholdtypeflag": 226, "windowpropertyflag": 227, "raster_sequ": [228, 229, 230, 231, 232, 233, 234, 235], "async_video_stream": [229, 230], "asyncvideostream": 230, "frame_annot": [231, 232, 233], "blit_fp": 232, "blit_numbering_raster_sequ": 233, "frame": [234, 235], "frame_gener": 235, "transform": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "crop": [237, 238], "circle_crop": 238, "cv2_transform": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "cv2compos": 240, "cv2convertcolor": 241, "cv2expand": 242, "cv2photometricdistort": 243, "cv2randombright": 244, "cv2randomcontrast": 245, "cv2randomhu": 246, "cv2randomlightingnois": 247, "cv2randommirror": 248, "cv2randomsamplecrop": 249, "cv2randomsatur": 250, "cv2resiz": 251, "cv2swapchannel": 252, "cv2toabsolutecoord": 253, "cv2topercentcoord": 254, "convertfromint": 255, "lambda": 256, "subtractmean": 257, "interpolationenum": 259, "cv2_resiz": 260, "window": [261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "color_pick": [262, 263], "interactive_hsv_color_pick": 263, "extensionenum": 265, "match_return_cod": 266, "element": [267, 268, 269], "trackbar": [268, 269], "add_trackbar": 269, "hough_circl": [270, 271], "interactive_hough_circl": 271, "imag": [272, 273, 567, 568, 569, 570, 571, 572, 573, 574], "show_imag": 273, "os_util": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "cuda_devic": [275, 276, 277, 278], "deviceorderenum": 276, "set_cuda_device_ord": 277, "set_cuda_visible_devic": 278, "linux_util": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "gnome_util": [280, 281, 282], "dark_mod": [281, 282, 289], "is_dark_mode_act": 282, "gtk_util": [283, 284, 285, 286, 287], "gtk_set": [284, 285], "gtkset": 285, "theme_prefer": [286, 287], "gtkthemeprefer": 287, "mac_util": [288, 289, 314], "systemd_util": [290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "amdroc": 292, "deprec": [293, 294, 295], "libuser_test": 294, "systemd_utilities_old": 295, "docker_inspect": 296, "psystemd": 297, "service_manag": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "runasenum": 299, "disable_servic": 300, "enable_servic": 301, "install_servic": 302, "remove_servic": [303, 340], "restart_servic": 304, "start_servic": 305, "status_servic": 306, "stop_servic": 307, "service_templ": 308, "user_util": [309, 310, 311, 312, 313], "change_home_dir": 310, "change_passwd": 311, "make_us": 312, "remove_us": 313, "platform_select": [315, 316], "get_backend_modul": 316, "resource_util": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "all": [318, 319], "get_num_inst": 319, "cpu": [320, 321, 322, 323, 324, 325, 326], "workersess": 321, "release_worker_cor": 322, "request_worker_cor": 323, "reset_worker_track": 324, "worker_cores_avail": 325, "worker_cores_in_us": 326, "gpu": 327, "ram": [328, 329], "num_instance_no_pag": 329, "screen_resolut": [330, 331, 332, 333, 334, 335, 336, 337], "get_screen_resolut": [331, 429], "screen_res_gtk": 332, "screen_res_mac": 333, "screen_res_pygam": 334, "screen_res_tk": 335, "screen_res_win": 336, "screen_res_xlib": 337, "servic": [338, 339, 340], "add_servic": 339, "windows_util": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "commun": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "direct_input": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "failsafeexcept": 345, "hardwareinput": 346, "input": 347, "input_i": 348, "keybdinput": 349, "mouseinput": 350, "point": 351, "click": 352, "doubleclick": 353, "failsafecheck": 354, "keydown": 355, "keyup": 356, "leftclick": 357, "middleclick": 358, "mousedown": 359, "mouseup": 360, "move": 361, "moverel": 362, "moveto": 363, "posit": 364, "press": 365, "rightclick": 366, "size": [367, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "tripleclick": 368, "typewrit": 369, "write": 370, "firefox": [373, 374], "mario": [377, 378], "task_schedul": [379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "api": [380, 381, 382, 383, 394, 395, 396], "delete_task": 381, "new_user_logon_execute_task": 382, "set_task_act": 383, "task_action_typ": [385, 386], "taskactiontypeenum": 386, "task_creat": [387, 388], "taskcreationenum": 388, "task_logon_typ": [389, 390], "tasklogontypeenum": 390, "task_trigg": [391, 392], "tasktriggerenum": 392, "win32": [393, 394, 395, 396, 397, 398, 399, 400], "press_kei": 395, "press_key_foreground": 396, "gui": [397, 398, 399, 400], "find_all_window": 398, "get_inner_window": 399, "list_window_nam": 400, "windows_set": [401, 402], "windowsset": 402, "pandas_util": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "format": [404, 405], "pandas_mean_std_bold_formatt": 405, "from_dict": [406, 407, 408, 409], "nested_dict_to_four_level_column_df": 407, "nested_dict_to_three_level_column_df": 408, "nested_dict_to_two_level_column_df": 409, "latex_mean_std": [410, 411, 412, 413, 414], "pandas_format_bold_max_row_latex": 411, "pandas_mean_std": 412, "pandas_mean_std_to_str": 413, "pandas_to_latex_clean": 414, "misc_util": [415, 416, 417, 418], "chainedassignmentoptionenum": 416, "exportmethodenum": 417, "duplicate_column": 418, "multi_index_util": [419, 420], "add_index_level": 420, "style": [421, 422, 423, 424, 425, 426], "attrenum": 422, "colorenum": 423, "ndframeextremeenum": 424, "color_highlight_extrem": 425, "color_negative_r": 426, "pygame_util": [427, 428, 429], "screen": [428, 429], "python_util": [430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "broadcast": [431, 432], "broadcastnon": 432, "packag": [434, 435, 436, 437], "b": 436, "c": 437, "worker": [438, 439, 440], "spawn": 440, "function_wrapp": [441, 442, 443, 444, 445], "max_frequ": 442, "min_interval_wrapp": 443, "min_interval_wrapper_glob": 444, "wrap_arg": 445, "gener": [446, 447, 448, 449, 450, 451, 452, 453, 454, 563, 564, 565, 566], "batching_gener": [447, 448, 449, 450, 451], "batch_gener": 448, "random_batch": 449, "shuffled_batch": 450, "sized_batch": 451, "recycling_gener": [452, 453, 454], "batched_recycl": 453, "recycl": 454, "http": [455, 456], "httpmethodenum": 456, "socket": [457, 458, 459, 460], "find_unclaimed_port": 458, "get_host_ip": 459, "is_port_in_us": 460, "torch_like_channel_transform": [461, 462, 463, 464, 465], "reverse_torch_vision_normalize_batch_nchw": 462, "rgb_drop_alpha_batch_nhwc": 463, "rgb_drop_alpha_hwc": 464, "torch_vision_normalize_batch_nchw": 465, "random_util": [466, 467, 468], "seed": [467, 468, 697, 698], "seed_stack": 468, "scipy_util": [469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "read_normalised_wav": 471, "write_normalised_wav": 472, "signal_process": 473, "subsampl": [474, 475, 476, 477, 478, 479], "fft_subsampl": 475, "fir_subsampl": 476, "mag_decimation_subsampl": 477, "max_decimation_subsampl": 478, "min_decimation_subsampl": 479, "stop": [480, 481, 482, 483, 629, 630, 631, 632], "stopping_kei": [481, 482, 483], "captureearlystop": 482, "add_early_stopping_key_combin": 483, "tensorboard_util": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "experiment": [485, 486, 487, 488, 513, 514, 515, 516, 517, 518, 519], "confusion_matrix": 486, "pretty_cf": [487, 488], "pretty_print_conf_matrix": 488, "export": [489, 490, 491, 492, 493, 494, 495, 556, 557, 558, 559, 560, 561, 562], "db_export": [490, 491], "tensorboardeventexporterdatabas": 491, "event_export": [492, 493], "tensorboardeventexport": 493, "file_export": [494, 495], "tensorboardeventexporterfil": 495, "threading_util": [496, 497, 498, 499], "skipper": [498, 499], "torch_util": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746], "architectur": [501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "distribut": [504, 505, 506, 507, 508, 509, 510, 511, 512, 544, 545, 546, 547, 548, 549, 550], "categoricalmlp": 506, "multiplecategoricalmlp": 507, "normal": [508, 509, 510, 511, 512], "multidimensionalnormalmlp": 509, "multivariatenormalmlp": 510, "multiplenormalmlp": 511, "shallowstdnormalmlp": 512, "head": [514, 515], "multiheadedmlp": 515, "recurr": [516, 517, 518, 519], "exposedrecurrentcategoricalmlp": 517, "recurrentbas": 518, "recurrentcategoricalmlp": 519, "mlp": [520, 521], "mlp_variant": [522, 523, 524, 525, 526, 527, 528, 529], "concatin": [523, 524, 525], "lateconcatinputmlp": 524, "preconcatinputmlp": 525, "disjunct": [526, 527], "disjunctmlp": 527, "fourier": [528, 529], "basefourierfeaturemlp": 529, "non_sequential_dataset": [531, 532], "nonsequentialdataset": 532, "random_dataset": [533, 534], "randomdataset": 534, "supervis": [535, 536, 537, 538, 539, 540, 541, 542, 543], "categorical_dataset": [536, 537], "categoricaldataset": 537, "supervised_dataset": [538, 539], "superviseddataset": 539, "vision_dataset": [540, 541, 542, 543], "dict_dataset": [541, 542, 543], "dictdatasetfold": 542, "splitdictdatasetfold": 543, "entropi": [545, 546, 547, 548, 549, 550], "differential_entropy_gaussian": 546, "log_shannon_entropi": 547, "normal_entropi": 548, "normal_log_dens": 549, "shannon_entropi": 550, "classif": [552, 553], "find_n_misclassifi": 553, "cross_valid": [554, 555], "cross_validation_gener": 555, "latex_t": [557, 558, 559, 560], "adasdassijd": 558, "asijd": 559, "iasjduh": 560, "summari": [561, 562], "to_latex_t": 562, "batch": [564, 565], "limitedbatchresampl": 565, "to_tensor_gener": 566, "float_chw_to_hwc_uint_tensor": 569, "float_nchw_to_nhwc_uint_batch": 570, "uint_hwc_to_chw_float_tensor": 571, "uint_nhwc_to_nchw_float_batch": 572, "convers": [573, 574], "quick_to_pil_imag": 574, "opencv": [575, 576, 577, 578], "torch_convers": [576, 577, 578], "cv2toimag": 577, "cv2totensor": 578, "oper": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "minmax_to_xywh_torch": 581, "reductionmethodenum": 583, "conv2d": [585, 586, 587], "conv2d_hw_shap": 586, "conv2d_padding_s": 587, "max_pool2d": [588, 589], "max_pool2d_hw_shap": 589, "pad2d": [590, 591], "pad2d_hw_shap": 591, "transp_conv2d": [592, 593, 594], "transp_conv2d_output_shap": 593, "transp_conv2d_padding_s": 594, "torch_transform": [595, 596, 597, 598, 599, 600], "batch_transform": [596, 597, 598, 599, 600], "batchnorm": 597, "batchrandomcrop": 598, "batchrandomhorizontalflip": 599, "batchtotensor": 600, "optimis": [601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637], "debug": [602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618], "gradient": [603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "check": [604, 605, 606], "numerical_gradi": [605, 606], "loss_grad_check": 606, "flow": [607, 608], "plot_grad_flow": 608, "grad_trac": [609, 610, 611], "print_grad_trac": 610, "register_bad_grad_hook": 611, "guid": [612, 613, 614], "guidedbackproprelu": 613, "guidedbackproprelumodel": 614, "layer_fetch": [615, 616], "intermediatelayergett": 616, "opt_verif": [617, 618], "overfit_single_batch": 618, "paramet": [619, 620, 621, 653, 654, 655, 656, 657], "freeze_paramet": 620, "frozen_paramet": 621, "schedul": [622, 623, 624, 625, 626, 627, 628], "learning_rate_util": [623, 624], "set_lr": 624, "lr_schedul": [625, 626], "warmupmultisteplr": 626, "warmup_lr_schedul": 628, "overfit": [630, 631, 632], "improvementdetector": 631, "overfitdetector": 632, "updat": [633, 634, 635, 636, 637], "copi": [634, 635, 636], "copy_paramet": 635, "copy_st": 636, "soft_upd": 637, "persist": [638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657], "checkpoint": [639, 640, 641], "load_checkpoint": 640, "save_checkpoint": 641, "config": [642, 643, 644], "ensure_directory_exist": 643, "save_config": 644, "model": [645, 646, 647, 648, 649, 650], "convert_saved_model_to_cpu": 646, "load_latest_model": 647, "load_model": 648, "save_model": 649, "save_model_and_configur": 650, "name": [651, 652], "get_model_hash": 652, "load_latest_model_paramet": 654, "load_model_paramet": 655, "save_model_paramet": 656, "save_parameters_and_configur": 657, "session": [658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676], "cache_sess": [659, 660], "torchcachesess": 660, "determinism_sess": [661, 662], "torchdeterministicsess": 662, "device_sess": [663, 664, 665, 666], "torchcpusess": 664, "torchcudasess": 665, "torchdevicesess": 666, "jit_sess": [667, 668, 669], "torchignorejitsess": 668, "torchjitsess": 669, "model_sess": [670, 671, 672, 673, 674], "torchevalsess": 671, "torchfrozenmodelsess": 672, "torchtrainsess": 673, "torchtrainingsess": 674, "type_sess": [675, 676], "defaulttypesess": 676, "system": [677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698], "constant": [678, 679], "torch_pi": 679, "data_typ": [680, 681, 682], "global_torch_dtyp": 681, "set_global_torch_dtyp": 682, "devic": [683, 684, 685, 686, 687, 688, 689, 690], "torchdeviceenum": 684, "auto_select_available_cuda_devic": 685, "get_gpu_usage_mb": 686, "global_torch_devic": 687, "select_cuda_devic": 688, "set_global_torch_devic": 689, "torch_clean_up": 690, "info": [691, 692, 693, 707, 708], "cuda_info": 692, "system_info": 693, "load": [694, 695, 696], "default_worker_init_fn": 695, "global_pin_memori": 696, "torch_se": 698, "tensor": [699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723], "dimension_ord": [700, 701, 702, 703, 704, 705, 706], "chw_to_hwc_tensor": 701, "hwc_to_chw_tensor": 702, "nchw_to_nhwc_tensor": 703, "nhwc_to_nchw_tensor": 704, "ntchw_to_nthwc_tensor": 705, "nthwc_to_ntchw_tensor": 706, "size_of_tensor": 708, "mixin": [709, 710, 725, 726, 727, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "tensorisemixin": 710, "normalis": [711, 712], "standardis": 712, "reshap": [713, 714, 715, 716], "flatten_keep_batch": 714, "flatten_tn_dim": 715, "safe_concat": 716, "tensor_contain": [717, 718], "namedtensortupl": 718, "to_scalar": 719, "to_tensor": 720, "type": [721, 722, 723], "numpy_to_torch_dtyp": 722, "torch_to_numpy_dtyp": 723, "writer": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850], "graph_writer_mixin": [726, 727], "graphwritermixin": 727, "tensorboard": [728, 729, 730, 731, 732, 733], "launcher": [729, 730], "launch_tensorboard": 730, "tensorboard_pytorch_writ": [731, 732, 733], "ptw": 732, "tensorboardpytorchwrit": 733, "torch_module_writ": [734, 735, 736, 737, 738, 739], "module_parameter_writer_mixin": [735, 736], "moduleparameterwritermixin": 736, "module_writer_hook": 737, "module_writer_paramet": [738, 739], "weight_bias_histogram": 739, "visdom": [740, 741, 742, 743, 744, 745, 746], "episode_visu": [741, 742], "update_visualis": 742, "plot_episode_stat": 744, "visdom_writ": [745, 746], "visdomwrit": 746, "tqdm_util": [747, 748, 749, 750, 751, 752, 753, 754, 755], "pooled_progress_bar": [748, 749, 750, 751, 752, 753, 754], "parallel_imap": 749, "parallel_map": 750, "parallel_uimap": 751, "parallel_umap": 752, "sequential_imap": 753, "sequential_map": 754, "progress_bar": 755, "visualis": [756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779], "ggplot_util": 757, "matplotlib_util": [758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769], "matplotlibhorizontalalign": 759, "matplotlibverticalalign": 760, "annotate_point": 761, "decolorise_plot": 762, "denormalise_minusoneon": 763, "latex_clean_label": 764, "make_errorbar_legend": 765, "matplotlib_bounding_box": 766, "remove_decor": 767, "save_embed_fig": 768, "use_monochrome_styl": 769, "pillow_util": [770, 771, 772, 773, 774, 775], "byte_array_to_pil_imag": 771, "np_array_to_pil_img": 772, "pil_image_to_byte_arrai": 773, "pil_img_to_np_arrai": 774, "pil_merge_imag": 775, "seaborn_util": [776, 777, 778, 779], "despine_al": 777, "exponential_moving_averag": 778, "set_y_log_scal": 779, "csv_writer": [781, 782], "csvwriter": 782, "databas": [783, 784, 785, 786, 787], "hdf_writer": [784, 785], "hdfwriter": 785, "sqlite_writ": [786, 787], "sqlitewrit": 787, "log_writ": [788, 789], "logwrit": 789, "audio_writer_mixin": [791, 792], "audiowritermixin": 792, "bar_writer_mixin": [793, 794], "barwritermixin": 794, "embed_writer_mixin": [795, 796], "embedwritermixin": 796, "figure_writer_mixin": [797, 798], "figurewritermixin": 798, "histogram_writer_mixin": [799, 800], "histogramwritermixin": 800, "image_writer_mixin": [801, 802], "imagewritermixin": 802, "instantiation_writer_mixin": [803, 804], "instantiationwritermixin": 804, "line_writer_mixin": [805, 806], "linewritermixin": 806, "mesh_writer_mixin": [807, 808], "meshwritermixin": 808, "precision_recall_writer_mixin": [809, 810], "precisionrecallcurvewritermixin": 810, "scalar_writer_mixin": [811, 812], "scalarwritermixin": 812, "spectrogram_writer_mixin": [813, 814], "spectrogramwritermixin": 814, "video_writer_mixin": [815, 816, 817], "videoinputdimsenum": 816, "videowritermixin": 817, "mock_writ": [818, 819], "mockwrit": 819, "standard_tag": [820, 821, 822, 823, 824, 825, 826, 827, 828], "testingcurv": 821, "testingscalar": 822, "testingt": 823, "trainingcurv": 824, "trainingscalar": 825, "trainingt": 826, "should_plot_y_log_scal": 827, "should_smooth_seri": 828, "termin": [829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844], "console_writ": [830, 831], "consolewrit": 831, "terminal_image_render": [832, 833, 834, 835, 836, 837, 838], "get_imag": 834, "get_pixel": 835, "render_fil": 836, "render_imag": 837, "terminalise_imag": 838, "terminal_plot": 839, "terminal_plot_writ": [840, 841], "terminalplotwrit": 841, "terminal_plott": 842, "terminal_util": [843, 844], "scale": 844, "global_writ": 847, "set_global_writ": 848, "writer_util": [849, 850], "get": 851, "start": 851, "document": 852, "what": 852, "s": 852, "next": 852, "indic": 852, "tabl": 852}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})