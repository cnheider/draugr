Search.setIndex({"docnames": ["generated/draugr", "generated/draugr.dist_is_editable", "generated/draugr.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities", "generated/draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "generated/draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "generated/draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "generated/draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "generated/draugr.dlib_utilities.exclude", "generated/draugr.dlib_utilities.exclude.flags", "generated/draugr.dlib_utilities.exclude.flags.TupleFlag", "generated/draugr.dlib_utilities.facealigner", "generated/draugr.dlib_utilities.facealigner.align_face", "generated/draugr.drawers", "generated/draugr.drawers.drawer", "generated/draugr.drawers.drawer.Drawer", "generated/draugr.drawers.mpl_drawers", "generated/draugr.drawers.mpl_drawers.discrete_scroll_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot", "generated/draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "generated/draugr.drawers.mpl_drawers.image_stream_plot", "generated/draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "generated/draugr.drawers.mpl_drawers.mpldrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "generated/draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "generated/draugr.drawers.mpl_drawers.series_scroll_plot", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "generated/draugr.drawers.mpl_drawers.spectral", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "generated/draugr.drawers.opencv_drawers", "generated/draugr.drawers.opencv_drawers.opencv_image_stream", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "generated/draugr.entry_points", "generated/draugr.entry_points.cpu_usage_entry_point", "generated/draugr.entry_points.cpu_usage_entry_point.main", "generated/draugr.entry_points.tensorboard_entry_point", "generated/draugr.entry_points.tensorboard_entry_point.main", "generated/draugr.entry_points.toggle_darkmode", "generated/draugr.entry_points.toggle_darkmode.main", "generated/draugr.entry_points.visdom_entry_point", "generated/draugr.entry_points.visdom_entry_point.main", "generated/draugr.extensions", "generated/draugr.extensions.skimage_utilities", "generated/draugr.extensions.skimage_utilities.rgb_to_grayscale", "generated/draugr.extensions.sorcery_utilities", "generated/draugr.extensions.sorcery_utilities.lower_case_assigned_names", "generated/draugr.extensions.sorcery_utilities.upper_case_assigned_names", "generated/draugr.ffmpeg_utilities", "generated/draugr.ffmpeg_utilities.exclude", "generated/draugr.ffmpeg_utilities.extract", "generated/draugr.ffmpeg_utilities.extract.extract_frames", "generated/draugr.ffmpeg_utilities.merge", "generated/draugr.ffmpeg_utilities.merge.merge_video", "generated/draugr.ffmpeg_utilities.sequencify", "generated/draugr.ffmpeg_utilities.sequencify.sequencify_files", "generated/draugr.ffmpeg_utilities.split", "generated/draugr.ffmpeg_utilities.split.spilt_video", "generated/draugr.get_version", "generated/draugr.jax_utilities", "generated/draugr.metrics", "generated/draugr.metrics.accumulation", "generated/draugr.metrics.accumulation.lambda_accumulator", "generated/draugr.metrics.accumulation.mean_accumulator", "generated/draugr.metrics.accumulation.total_accumulator", "generated/draugr.metrics.meters", "generated/draugr.metrics.meters.AverageMeter", "generated/draugr.metrics.meters.Meter", "generated/draugr.metrics.metric_aggregator", "generated/draugr.metrics.metric_aggregator.MetricAggregator", "generated/draugr.metrics.metric_aggregator.save_metric", "generated/draugr.metrics.metric_collection", "generated/draugr.metrics.metric_collection.MetricCollection", "generated/draugr.metrics.metric_summary", "generated/draugr.metrics.metric_summary.MetricSummary", "generated/draugr.metrics.plotting", "generated/draugr.multiprocessing_utilities", "generated/draugr.multiprocessing_utilities.pooled_queue_processor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "generated/draugr.numpy_utilities", "generated/draugr.numpy_utilities.channel_transform", "generated/draugr.numpy_utilities.channel_transform.chw_to_hwc", "generated/draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "generated/draugr.numpy_utilities.channel_transform.hwc_to_chw", "generated/draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "generated/draugr.numpy_utilities.datasets", "generated/draugr.numpy_utilities.datasets.categorical", "generated/draugr.numpy_utilities.datasets.categorical.deep_category", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "generated/draugr.numpy_utilities.datasets.categorical.flat_category", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "generated/draugr.numpy_utilities.datasets.defaults", "generated/draugr.numpy_utilities.datasets.splitting", "generated/draugr.numpy_utilities.datasets.splitting.SplitEnum", "generated/draugr.numpy_utilities.datasets.splitting.SplitIndexer", "generated/draugr.numpy_utilities.datasets.splitting.select_split", "generated/draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "generated/draugr.numpy_utilities.manipulation", "generated/draugr.numpy_utilities.manipulation.MyNdArray", "generated/draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "generated/draugr.numpy_utilities.mixing", "generated/draugr.numpy_utilities.mixing.mix_channels", "generated/draugr.numpy_utilities.powers", "generated/draugr.numpy_utilities.powers.next_pow_10_numpy", "generated/draugr.numpy_utilities.powers.next_pow_2_numpy", "generated/draugr.numpy_utilities.powers.next_pow_numpy", "generated/draugr.numpy_utilities.powers.next_power_10_numpy", "generated/draugr.numpy_utilities.powers.next_power_2_numpy", "generated/draugr.numpy_utilities.raster_grid_2d_masking", "generated/draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "generated/draugr.numpy_utilities.raster_grid_3d_masking", "generated/draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "generated/draugr.numpy_utilities.resize", "generated/draugr.numpy_utilities.resize.resize_array", "generated/draugr.numpy_utilities.sampling", "generated/draugr.numpy_utilities.sampling.get_sampler", "generated/draugr.numpy_utilities.signal_utilities", "generated/draugr.numpy_utilities.signal_utilities.padding", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "generated/draugr.numpy_utilities.signal_utilities.signal_projection", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "generated/draugr.numpy_utilities.signal_utilities.truncation", "generated/draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "generated/draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "generated/draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "generated/draugr.opencv_utilities", "generated/draugr.opencv_utilities.bounding_boxes", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "generated/draugr.opencv_utilities.bounding_boxes.evaluation", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "generated/draugr.opencv_utilities.color_space", "generated/draugr.opencv_utilities.color_space.clean", "generated/draugr.opencv_utilities.color_space.clean.CleanUpMethod", "generated/draugr.opencv_utilities.color_space.clean.clean_up", "generated/draugr.opencv_utilities.color_space.color", "generated/draugr.opencv_utilities.color_space.color.is_singular_channel", "generated/draugr.opencv_utilities.color_space.color.num_channels", "generated/draugr.opencv_utilities.color_space.color.to_color", "generated/draugr.opencv_utilities.color_space.edge", "generated/draugr.opencv_utilities.color_space.edge.CannyApertureSize", "generated/draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "generated/draugr.opencv_utilities.color_space.edge.to_edge", "generated/draugr.opencv_utilities.color_space.gamma", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "generated/draugr.opencv_utilities.color_space.gray", "generated/draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "generated/draugr.opencv_utilities.color_space.gray.to_gray", "generated/draugr.opencv_utilities.color_space.noise", "generated/draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "generated/draugr.opencv_utilities.color_space.noise.noise_filter", "generated/draugr.opencv_utilities.color_space.threshold", "generated/draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "generated/draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "generated/draugr.opencv_utilities.color_space.threshold.threshold_channel", "generated/draugr.opencv_utilities.drawing", "generated/draugr.opencv_utilities.drawing.draw_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "generated/draugr.opencv_utilities.drawing.masks", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "generated/draugr.opencv_utilities.drawing.masks.segment_ellipse", "generated/draugr.opencv_utilities.drawing.opencv_draw", "generated/draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "generated/draugr.opencv_utilities.drawing.opencv_draw.find_contours", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "generated/draugr.opencv_utilities.namespaces", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "generated/draugr.opencv_utilities.namespaces.enums", "generated/draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "generated/draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.FontEnum", "generated/draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "generated/draugr.opencv_utilities.namespaces.enums.KmeansEnum", "generated/draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "generated/draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "generated/draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "generated/draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "generated/draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags", "generated/draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "generated/draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "generated/draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "generated/draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "generated/draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "generated/draugr.opencv_utilities.raster_sequences", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "generated/draugr.opencv_utilities.raster_sequences.frames", "generated/draugr.opencv_utilities.raster_sequences.frames.frame_generator", "generated/draugr.opencv_utilities.transformation", "generated/draugr.opencv_utilities.transformation.cropping", "generated/draugr.opencv_utilities.transformation.cropping.circle_crop", "generated/draugr.opencv_utilities.transformation.cv2_transforms", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "generated/draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "generated/draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "generated/draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "generated/draugr.opencv_utilities.transformation.resize", "generated/draugr.opencv_utilities.transformation.resize.InterpolationEnum", "generated/draugr.opencv_utilities.transformation.resize.cv2_resize", "generated/draugr.opencv_utilities.windows", "generated/draugr.opencv_utilities.windows.color_picker", "generated/draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "generated/draugr.opencv_utilities.windows.default", "generated/draugr.opencv_utilities.windows.default.ExtensionEnum", "generated/draugr.opencv_utilities.windows.default.match_return_code", "generated/draugr.opencv_utilities.windows.elements", "generated/draugr.opencv_utilities.windows.elements.trackbar", "generated/draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "generated/draugr.opencv_utilities.windows.hough_circles", "generated/draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "generated/draugr.opencv_utilities.windows.image", "generated/draugr.opencv_utilities.windows.image.show_image", "generated/draugr.os_utilities", "generated/draugr.os_utilities.cuda_device", "generated/draugr.os_utilities.cuda_device.DeviceOrderEnum", "generated/draugr.os_utilities.cuda_device.set_cuda_device_order", "generated/draugr.os_utilities.cuda_device.set_cuda_visible_devices", "generated/draugr.os_utilities.linux_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "generated/draugr.os_utilities.linux_utilities.gtk_utilities", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "generated/draugr.os_utilities.linux_utilities.mac_utilities", "generated/draugr.os_utilities.linux_utilities.systemd_utilities", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "generated/draugr.os_utilities.linux_utilities.user_utilities", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "generated/draugr.os_utilities.linux_utilities.user_utilities.make_user", "generated/draugr.os_utilities.linux_utilities.user_utilities.remove_user", "generated/draugr.os_utilities.mac_utilities", "generated/draugr.os_utilities.platform_selection", "generated/draugr.os_utilities.platform_selection.get_backend_module", "generated/draugr.os_utilities.resource_utilities", "generated/draugr.os_utilities.resource_utilities.all", "generated/draugr.os_utilities.resource_utilities.all.get_num_instances", "generated/draugr.os_utilities.resource_utilities.cpu", "generated/draugr.os_utilities.resource_utilities.cpu.WorkerSession", "generated/draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "generated/draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "generated/draugr.os_utilities.resource_utilities.gpu", "generated/draugr.os_utilities.resource_utilities.ram", "generated/draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "generated/draugr.os_utilities.screen_resolution", "generated/draugr.os_utilities.screen_resolution.get_screen_resolution", "generated/draugr.os_utilities.screen_resolution.screen_res_gtk", "generated/draugr.os_utilities.screen_resolution.screen_res_mac", "generated/draugr.os_utilities.screen_resolution.screen_res_pygame", "generated/draugr.os_utilities.screen_resolution.screen_res_tk", "generated/draugr.os_utilities.screen_resolution.screen_res_win", "generated/draugr.os_utilities.screen_resolution.screen_res_xlib", "generated/draugr.os_utilities.service", "generated/draugr.os_utilities.service.add_service", "generated/draugr.os_utilities.service.remove_service", "generated/draugr.pandas_utilities", "generated/draugr.pandas_utilities.formatting", "generated/draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "generated/draugr.pandas_utilities.from_dict", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "generated/draugr.pandas_utilities.latex_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "generated/draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "generated/draugr.pandas_utilities.misc_utilities", "generated/draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "generated/draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "generated/draugr.pandas_utilities.misc_utilities.duplicate_columns", "generated/draugr.pandas_utilities.multi_index_utilities", "generated/draugr.pandas_utilities.multi_index_utilities.add_index_level", "generated/draugr.pandas_utilities.styling", "generated/draugr.pandas_utilities.styling.AttrEnum", "generated/draugr.pandas_utilities.styling.ColorEnum", "generated/draugr.pandas_utilities.styling.NDFrameExtremeEnum", "generated/draugr.pandas_utilities.styling.color_highlight_extreme", "generated/draugr.pandas_utilities.styling.color_negative_red", "generated/draugr.pygame_utilities", "generated/draugr.pygame_utilities.screen", "generated/draugr.pygame_utilities.screen.get_screen_resolution", "generated/draugr.python_utilities", "generated/draugr.python_utilities.broadcasting", "generated/draugr.python_utilities.broadcasting.BroadcastNone", "generated/draugr.python_utilities.exclude", "generated/draugr.python_utilities.exclude.packages", "generated/draugr.python_utilities.exclude.packages.a", "generated/draugr.python_utilities.exclude.packages.b", "generated/draugr.python_utilities.exclude.packages.c", "generated/draugr.python_utilities.exclude.worker", "generated/draugr.python_utilities.exclude.worker.main", "generated/draugr.python_utilities.exclude.worker.spawn", "generated/draugr.python_utilities.function_wrappers", "generated/draugr.python_utilities.function_wrappers.max_frequency", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "generated/draugr.python_utilities.function_wrappers.wrap_args", "generated/draugr.python_utilities.generators", "generated/draugr.python_utilities.generators.batching_generator", "generated/draugr.python_utilities.generators.batching_generator.batch_generator", "generated/draugr.python_utilities.generators.batching_generator.random_batches", "generated/draugr.python_utilities.generators.batching_generator.shuffled_batches", "generated/draugr.python_utilities.generators.batching_generator.sized_batch", "generated/draugr.python_utilities.generators.recycling_generator", "generated/draugr.python_utilities.generators.recycling_generator.batched_recycle", "generated/draugr.python_utilities.generators.recycling_generator.recycle", "generated/draugr.python_utilities.http", "generated/draugr.python_utilities.http.HttpMethodEnum", "generated/draugr.python_utilities.sockets", "generated/draugr.python_utilities.sockets.find_unclaimed_port", "generated/draugr.python_utilities.sockets.get_host_ip", "generated/draugr.python_utilities.sockets.is_port_in_use", "generated/draugr.python_utilities.torch_like_channel_transformation", "generated/draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "generated/draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "generated/draugr.random_utilities", "generated/draugr.random_utilities.seeding", "generated/draugr.random_utilities.seeding.seed_stack", "generated/draugr.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities", "generated/draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "generated/draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "generated/draugr.scipy_utilities.signal_processing", "generated/draugr.scipy_utilities.subsampling", "generated/draugr.scipy_utilities.subsampling.fft_subsample", "generated/draugr.scipy_utilities.subsampling.fir_subsample", "generated/draugr.scipy_utilities.subsampling.mag_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.max_decimation_subsample", "generated/draugr.scipy_utilities.subsampling.min_decimation_subsample", "generated/draugr.stopping", "generated/draugr.stopping.stopping_key", "generated/draugr.stopping.stopping_key.CaptureEarlyStop", "generated/draugr.stopping.stopping_key.add_early_stopping_key_combination", "generated/draugr.threading_utilities", "generated/draugr.threading_utilities.exclude", "generated/draugr.threading_utilities.skipper", "generated/draugr.threading_utilities.skipper.Skipper", "generated/draugr.torch_utilities", "generated/draugr.torch_utilities.architectures", "generated/draugr.torch_utilities.architectures.architecture", "generated/draugr.torch_utilities.architectures.architecture.Architecture", "generated/draugr.torch_utilities.architectures.distributional", "generated/draugr.torch_utilities.architectures.distributional.categorical", "generated/draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "generated/draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "generated/draugr.torch_utilities.architectures.experimental", "generated/draugr.torch_utilities.architectures.experimental.heads", "generated/draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent", "generated/draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "generated/draugr.torch_utilities.architectures.mlp", "generated/draugr.torch_utilities.architectures.mlp.MLP", "generated/draugr.torch_utilities.architectures.mlp_variants", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "generated/draugr.torch_utilities.datasets", "generated/draugr.torch_utilities.datasets.non_sequential_dataset", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "generated/draugr.torch_utilities.datasets.random_dataset", "generated/draugr.torch_utilities.datasets.random_dataset.RandomDataset", "generated/draugr.torch_utilities.datasets.supervised", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "generated/draugr.torch_utilities.distributions", "generated/draugr.torch_utilities.distributions.entropy", "generated/draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "generated/draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_entropy", "generated/draugr.torch_utilities.distributions.entropy.normal_log_density", "generated/draugr.torch_utilities.distributions.entropy.shannon_entropy", "generated/draugr.torch_utilities.evaluation", "generated/draugr.torch_utilities.evaluation.classification", "generated/draugr.torch_utilities.evaluation.classification.find_n_misclassified", "generated/draugr.torch_utilities.evaluation.cross_validation", "generated/draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "generated/draugr.torch_utilities.exporting", "generated/draugr.torch_utilities.exporting.summary", "generated/draugr.torch_utilities.exporting.summary.to_latex_table", "generated/draugr.torch_utilities.generators", "generated/draugr.torch_utilities.generators.batching", "generated/draugr.torch_utilities.generators.batching.LimitedBatchResampler", "generated/draugr.torch_utilities.generators.to_tensor_generator", "generated/draugr.torch_utilities.images", "generated/draugr.torch_utilities.images.channel_transform", "generated/draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "generated/draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "generated/draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "generated/draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "generated/draugr.torch_utilities.images.conversion", "generated/draugr.torch_utilities.images.conversion.quick_to_pil_image", "generated/draugr.torch_utilities.opencv", "generated/draugr.torch_utilities.opencv.torch_conversion", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "generated/draugr.torch_utilities.operations", "generated/draugr.torch_utilities.operations.boxes_2d", "generated/draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "generated/draugr.torch_utilities.operations.enums", "generated/draugr.torch_utilities.operations.enums.ReductionMethodEnum", "generated/draugr.torch_utilities.operations.sizes", "generated/draugr.torch_utilities.operations.sizes.conv2d", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "generated/draugr.torch_utilities.operations.sizes.max_pool2d", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.pad2d", "generated/draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "generated/draugr.torch_utilities.operations.torch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "generated/draugr.torch_utilities.optimisation", "generated/draugr.torch_utilities.optimisation.debugging", "generated/draugr.torch_utilities.optimisation.debugging.gradients", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "generated/draugr.torch_utilities.optimisation.parameters", "generated/draugr.torch_utilities.optimisation.parameters.freeze_parameters", "generated/draugr.torch_utilities.optimisation.parameters.frozen_parameters", "generated/draugr.torch_utilities.optimisation.scheduling", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "generated/draugr.torch_utilities.optimisation.stopping", "generated/draugr.torch_utilities.optimisation.stopping.overfitting", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "generated/draugr.torch_utilities.optimisation.updates", "generated/draugr.torch_utilities.optimisation.updates.copying", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_state", "generated/draugr.torch_utilities.optimisation.updates.soft_update", "generated/draugr.torch_utilities.persistence", "generated/draugr.torch_utilities.persistence.checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "generated/draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "generated/draugr.torch_utilities.persistence.config", "generated/draugr.torch_utilities.persistence.config.ensure_directory_exist", "generated/draugr.torch_utilities.persistence.config.save_config", "generated/draugr.torch_utilities.persistence.model", "generated/draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "generated/draugr.torch_utilities.persistence.model.load_latest_model", "generated/draugr.torch_utilities.persistence.model.load_model", "generated/draugr.torch_utilities.persistence.model.save_model", "generated/draugr.torch_utilities.persistence.model.save_model_and_configuration", "generated/draugr.torch_utilities.persistence.naming", "generated/draugr.torch_utilities.persistence.naming.get_model_hash", "generated/draugr.torch_utilities.persistence.parameters", "generated/draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.load_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_model_parameters", "generated/draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "generated/draugr.torch_utilities.sessions", "generated/draugr.torch_utilities.sessions.cache_sessions", "generated/draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "generated/draugr.torch_utilities.sessions.determinism_sessions", "generated/draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "generated/draugr.torch_utilities.sessions.device_sessions", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "generated/draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "generated/draugr.torch_utilities.sessions.jit_sessions", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "generated/draugr.torch_utilities.sessions.model_sessions", "generated/draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "generated/draugr.torch_utilities.sessions.type_sessions", "generated/draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "generated/draugr.torch_utilities.system", "generated/draugr.torch_utilities.system.constants", "generated/draugr.torch_utilities.system.constants.torch_pi", "generated/draugr.torch_utilities.system.data_type", "generated/draugr.torch_utilities.system.data_type.global_torch_dtype", "generated/draugr.torch_utilities.system.data_type.set_global_torch_dtype", "generated/draugr.torch_utilities.system.device", "generated/draugr.torch_utilities.system.device.TorchDeviceEnum", "generated/draugr.torch_utilities.system.device.auto_select_available_cuda_device", "generated/draugr.torch_utilities.system.device.get_gpu_usage_mb", "generated/draugr.torch_utilities.system.device.global_torch_device", "generated/draugr.torch_utilities.system.device.select_cuda_device", "generated/draugr.torch_utilities.system.device.set_global_torch_device", "generated/draugr.torch_utilities.system.device.torch_clean_up", "generated/draugr.torch_utilities.system.info", "generated/draugr.torch_utilities.system.info.cuda_info", "generated/draugr.torch_utilities.system.info.system_info", "generated/draugr.torch_utilities.system.loading", "generated/draugr.torch_utilities.system.loading.default_worker_init_fn", "generated/draugr.torch_utilities.system.loading.global_pin_memory", "generated/draugr.torch_utilities.system.seeding", "generated/draugr.torch_utilities.system.seeding.torch_seed", "generated/draugr.torch_utilities.tensors", "generated/draugr.torch_utilities.tensors.dimension_order", "generated/draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "generated/draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "generated/draugr.torch_utilities.tensors.info", "generated/draugr.torch_utilities.tensors.info.size_of_tensor", "generated/draugr.torch_utilities.tensors.mixins", "generated/draugr.torch_utilities.tensors.mixins.TensoriseMixin", "generated/draugr.torch_utilities.tensors.normalise", "generated/draugr.torch_utilities.tensors.normalise.standardise", "generated/draugr.torch_utilities.tensors.reshaping", "generated/draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "generated/draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "generated/draugr.torch_utilities.tensors.reshaping.safe_concat", "generated/draugr.torch_utilities.tensors.tensor_container", "generated/draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "generated/draugr.torch_utilities.tensors.to_scalar", "generated/draugr.torch_utilities.tensors.to_tensor", "generated/draugr.torch_utilities.tensors.types", "generated/draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "generated/draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "generated/draugr.torch_utilities.writers", "generated/draugr.torch_utilities.writers.mixins", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "generated/draugr.torch_utilities.writers.tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.launcher", "generated/draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "generated/draugr.torch_utilities.writers.torch_module_writer", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "generated/draugr.torch_utilities.writers.visdom", "generated/draugr.torch_utilities.writers.visdom.episode_visual", "generated/draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "generated/draugr.torch_utilities.writers.visdom.plotting", "generated/draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "generated/draugr.torch_utilities.writers.visdom.visdom_writer", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "generated/draugr.tqdm_utilities", "generated/draugr.tqdm_utilities.pooled_progress_bar", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "generated/draugr.tqdm_utilities.progress_bar", "generated/draugr.visualisation", "generated/draugr.visualisation.ggplot_utilities", "generated/draugr.visualisation.matplotlib_utilities", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "generated/draugr.visualisation.matplotlib_utilities.annotate_point", "generated/draugr.visualisation.matplotlib_utilities.decolorise_plot", "generated/draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "generated/draugr.visualisation.matplotlib_utilities.latex_clean_label", "generated/draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "generated/draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "generated/draugr.visualisation.matplotlib_utilities.remove_decoration", "generated/draugr.visualisation.matplotlib_utilities.save_embed_fig", "generated/draugr.visualisation.matplotlib_utilities.use_monochrome_style", "generated/draugr.visualisation.pillow_utilities", "generated/draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "generated/draugr.visualisation.pillow_utilities.np_array_to_pil_img", "generated/draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "generated/draugr.visualisation.pillow_utilities.pil_img_to_np_array", "generated/draugr.visualisation.pillow_utilities.pil_merge_images", "generated/draugr.visualisation.seaborn_utilities", "generated/draugr.visualisation.seaborn_utilities.despine_all", "generated/draugr.visualisation.seaborn_utilities.exponential_moving_average", "generated/draugr.visualisation.seaborn_utilities.set_y_log_scale", "generated/draugr.writers", "generated/draugr.writers.csv_writer", "generated/draugr.writers.csv_writer.CSVWriter", "generated/draugr.writers.databases", "generated/draugr.writers.databases.hdf_writer", "generated/draugr.writers.databases.hdf_writer.HdfWriter", "generated/draugr.writers.databases.sqlite_writer", "generated/draugr.writers.databases.sqlite_writer.SqliteWriter", "generated/draugr.writers.log_writer", "generated/draugr.writers.log_writer.LogWriter", "generated/draugr.writers.mixins", "generated/draugr.writers.mixins.audio_writer_mixin", "generated/draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "generated/draugr.writers.mixins.bar_writer_mixin", "generated/draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "generated/draugr.writers.mixins.embed_writer_mixin", "generated/draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "generated/draugr.writers.mixins.figure_writer_mixin", "generated/draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "generated/draugr.writers.mixins.histogram_writer_mixin", "generated/draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "generated/draugr.writers.mixins.image_writer_mixin", "generated/draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "generated/draugr.writers.mixins.instantiation_writer_mixin", "generated/draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "generated/draugr.writers.mixins.line_writer_mixin", "generated/draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "generated/draugr.writers.mixins.mesh_writer_mixin", "generated/draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin", "generated/draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "generated/draugr.writers.mixins.scalar_writer_mixin", "generated/draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin", "generated/draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "generated/draugr.writers.mixins.video_writer_mixin", "generated/draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "generated/draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "generated/draugr.writers.mock_writer", "generated/draugr.writers.mock_writer.MockWriter", "generated/draugr.writers.standard_tags", "generated/draugr.writers.standard_tags.TestingCurves", "generated/draugr.writers.standard_tags.TestingScalars", "generated/draugr.writers.standard_tags.TestingTables", "generated/draugr.writers.standard_tags.TrainingCurves", "generated/draugr.writers.standard_tags.TrainingScalars", "generated/draugr.writers.standard_tags.TrainingTables", "generated/draugr.writers.standard_tags.should_plot_y_log_scale", "generated/draugr.writers.standard_tags.should_smooth_series", "generated/draugr.writers.terminal", "generated/draugr.writers.terminal.console_writer", "generated/draugr.writers.terminal.console_writer.ConsoleWriter", "generated/draugr.writers.terminal.terminal_image_renderer", "generated/draugr.writers.terminal.terminal_image_renderer.entry_point", "generated/draugr.writers.terminal.terminal_image_renderer.get_image", "generated/draugr.writers.terminal.terminal_image_renderer.get_pixel", "generated/draugr.writers.terminal.terminal_image_renderer.render_file", "generated/draugr.writers.terminal.terminal_image_renderer.render_image", "generated/draugr.writers.terminal.terminal_image_renderer.terminalise_image", "generated/draugr.writers.terminal.terminal_plot", "generated/draugr.writers.terminal.terminal_plot_writer", "generated/draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter", "generated/draugr.writers.terminal.terminal_plotter", "generated/draugr.writers.terminal.terminal_utilities", "generated/draugr.writers.terminal.terminal_utilities.scale", "generated/draugr.writers.writer", "generated/draugr.writers.writer.Writer", "generated/draugr.writers.writer.global_writer", "generated/draugr.writers.writer.set_global_writer", "generated/draugr.writers.writer_utilities", "generated/draugr.writers.writer_utilities.metrics", "getting_started", "index"], "filenames": ["generated/draugr.rst", "generated/draugr.dist_is_editable.rst", "generated/draugr.dlib_utilities.rst", "generated/draugr.dlib_utilities.dlib_utilities.rst", "generated/draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices.rst", "generated/draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices.rst", "generated/draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio.rst", "generated/draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio.rst", "generated/draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box.rst", "generated/draugr.dlib_utilities.dlib_utilities.shape_to_ndarray.rst", "generated/draugr.dlib_utilities.exclude.rst", "generated/draugr.dlib_utilities.exclude.flags.rst", "generated/draugr.dlib_utilities.exclude.flags.TupleFlag.rst", "generated/draugr.dlib_utilities.facealigner.rst", "generated/draugr.dlib_utilities.facealigner.align_face.rst", "generated/draugr.drawers.rst", "generated/draugr.drawers.drawer.rst", "generated/draugr.drawers.drawer.Drawer.rst", "generated/draugr.drawers.mpl_drawers.rst", "generated/draugr.drawers.mpl_drawers.discrete_scroll_plot.rst", "generated/draugr.drawers.mpl_drawers.distribution_plot.rst", "generated/draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot.rst", "generated/draugr.drawers.mpl_drawers.image_stream_plot.rst", "generated/draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.MockDrawer.rst", "generated/draugr.drawers.mpl_drawers.mpldrawer.MplDrawer.rst", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.rst", "generated/draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot.rst", "generated/draugr.drawers.mpl_drawers.spectral.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.rst", "generated/draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot.rst", "generated/draugr.drawers.opencv_drawers.rst", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.rst", "generated/draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream.rst", "generated/draugr.entry_points.rst", "generated/draugr.entry_points.cpu_usage_entry_point.rst", "generated/draugr.entry_points.cpu_usage_entry_point.main.rst", "generated/draugr.entry_points.tensorboard_entry_point.rst", "generated/draugr.entry_points.tensorboard_entry_point.main.rst", "generated/draugr.entry_points.toggle_darkmode.rst", "generated/draugr.entry_points.toggle_darkmode.main.rst", "generated/draugr.entry_points.visdom_entry_point.rst", "generated/draugr.entry_points.visdom_entry_point.main.rst", "generated/draugr.extensions.rst", "generated/draugr.extensions.skimage_utilities.rst", "generated/draugr.extensions.skimage_utilities.rgb_to_grayscale.rst", "generated/draugr.extensions.sorcery_utilities.rst", "generated/draugr.extensions.sorcery_utilities.lower_case_assigned_names.rst", "generated/draugr.extensions.sorcery_utilities.upper_case_assigned_names.rst", "generated/draugr.ffmpeg_utilities.rst", "generated/draugr.ffmpeg_utilities.exclude.rst", "generated/draugr.ffmpeg_utilities.extract.rst", "generated/draugr.ffmpeg_utilities.extract.extract_frames.rst", "generated/draugr.ffmpeg_utilities.merge.rst", "generated/draugr.ffmpeg_utilities.merge.merge_video.rst", "generated/draugr.ffmpeg_utilities.sequencify.rst", "generated/draugr.ffmpeg_utilities.sequencify.sequencify_files.rst", "generated/draugr.ffmpeg_utilities.split.rst", "generated/draugr.ffmpeg_utilities.split.spilt_video.rst", "generated/draugr.get_version.rst", "generated/draugr.jax_utilities.rst", "generated/draugr.metrics.rst", "generated/draugr.metrics.accumulation.rst", "generated/draugr.metrics.accumulation.lambda_accumulator.rst", "generated/draugr.metrics.accumulation.mean_accumulator.rst", "generated/draugr.metrics.accumulation.total_accumulator.rst", "generated/draugr.metrics.meters.rst", "generated/draugr.metrics.meters.AverageMeter.rst", "generated/draugr.metrics.meters.Meter.rst", "generated/draugr.metrics.metric_aggregator.rst", "generated/draugr.metrics.metric_aggregator.MetricAggregator.rst", "generated/draugr.metrics.metric_aggregator.save_metric.rst", "generated/draugr.metrics.metric_collection.rst", "generated/draugr.metrics.metric_collection.MetricCollection.rst", "generated/draugr.metrics.metric_summary.rst", "generated/draugr.metrics.metric_summary.MetricSummary.rst", "generated/draugr.metrics.plotting.rst", "generated/draugr.multiprocessing_utilities.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor.rst", "generated/draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask.rst", "generated/draugr.numpy_utilities.rst", "generated/draugr.numpy_utilities.channel_transform.rst", "generated/draugr.numpy_utilities.channel_transform.chw_to_hwc.rst", "generated/draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint.rst", "generated/draugr.numpy_utilities.channel_transform.hwc_to_chw.rst", "generated/draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float.rst", "generated/draugr.numpy_utilities.datasets.rst", "generated/draugr.numpy_utilities.datasets.categorical.rst", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset.rst", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset.rst", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.rst", "generated/draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset.rst", "generated/draugr.numpy_utilities.datasets.defaults.rst", "generated/draugr.numpy_utilities.datasets.splitting.rst", "generated/draugr.numpy_utilities.datasets.splitting.SplitEnum.rst", "generated/draugr.numpy_utilities.datasets.splitting.SplitIndexer.rst", "generated/draugr.numpy_utilities.datasets.splitting.select_split.rst", "generated/draugr.numpy_utilities.datasets.splitting.train_valid_test_split.rst", "generated/draugr.numpy_utilities.manipulation.rst", "generated/draugr.numpy_utilities.manipulation.MyNdArray.rst", "generated/draugr.numpy_utilities.manipulation.recursive_flatten_numpy.rst", "generated/draugr.numpy_utilities.mixing.rst", "generated/draugr.numpy_utilities.mixing.mix_channels.rst", "generated/draugr.numpy_utilities.powers.rst", "generated/draugr.numpy_utilities.powers.next_pow_10_numpy.rst", "generated/draugr.numpy_utilities.powers.next_pow_2_numpy.rst", "generated/draugr.numpy_utilities.powers.next_pow_numpy.rst", "generated/draugr.numpy_utilities.powers.next_power_10_numpy.rst", "generated/draugr.numpy_utilities.powers.next_power_2_numpy.rst", "generated/draugr.numpy_utilities.raster_grid_2d_masking.rst", "generated/draugr.numpy_utilities.raster_grid_2d_masking.circular_mask.rst", "generated/draugr.numpy_utilities.raster_grid_3d_masking.rst", "generated/draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask.rst", "generated/draugr.numpy_utilities.resize.rst", "generated/draugr.numpy_utilities.resize.resize_array.rst", "generated/draugr.numpy_utilities.sampling.rst", "generated/draugr.numpy_utilities.sampling.get_sampler.rst", "generated/draugr.numpy_utilities.signal_utilities.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to.rst", "generated/draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.heaviside.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square.rst", "generated/draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch.rst", "generated/draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2.rst", "generated/draugr.opencv_utilities.rst", "generated/draugr.opencv_utilities.bounding_boxes.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh.rst", "generated/draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy.rst", "generated/draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes.rst", "generated/draugr.opencv_utilities.color_space.rst", "generated/draugr.opencv_utilities.color_space.clean.rst", "generated/draugr.opencv_utilities.color_space.clean.CleanUpMethod.rst", "generated/draugr.opencv_utilities.color_space.clean.clean_up.rst", "generated/draugr.opencv_utilities.color_space.color.rst", "generated/draugr.opencv_utilities.color_space.color.is_singular_channel.rst", "generated/draugr.opencv_utilities.color_space.color.num_channels.rst", "generated/draugr.opencv_utilities.color_space.color.to_color.rst", "generated/draugr.opencv_utilities.color_space.edge.rst", "generated/draugr.opencv_utilities.color_space.edge.CannyApertureSize.rst", "generated/draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.edge.to_edge.rst", "generated/draugr.opencv_utilities.color_space.gamma.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_byte.rst", "generated/draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte.rst", "generated/draugr.opencv_utilities.color_space.gray.rst", "generated/draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.gray.to_gray.rst", "generated/draugr.opencv_utilities.color_space.noise.rst", "generated/draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.noise.noise_filter.rst", "generated/draugr.opencv_utilities.color_space.threshold.rst", "generated/draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum.rst", "generated/draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask.rst", "generated/draugr.opencv_utilities.color_space.threshold.threshold_channel.rst", "generated/draugr.opencv_utilities.drawing.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_box.rst", "generated/draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect.rst", "generated/draugr.opencv_utilities.drawing.masks.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1.rst", "generated/draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2.rst", "generated/draugr.opencv_utilities.drawing.masks.segment_ellipse.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.draw_masks.rst", "generated/draugr.opencv_utilities.drawing.opencv_draw.find_contours.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis.rst", "generated/draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube.rst", "generated/draugr.opencv_utilities.namespaces.rst", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.rst", "generated/draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.rst", "generated/draugr.opencv_utilities.namespaces.enums.BorderTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ComparisonEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DataTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.FontEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.HoughModeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.KmeansEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.LineTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MorphShapeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MorphTypeEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.MouseEventEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes.rst", "generated/draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum.rst", "generated/draugr.opencv_utilities.namespaces.enums.WindowFlagEnum.rst", "generated/draugr.opencv_utilities.namespaces.flags.rst", "generated/draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum.rst", "generated/draugr.opencv_utilities.namespaces.flags.MouseEventFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag.rst", "generated/draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag.rst", "generated/draugr.opencv_utilities.raster_sequences.rst", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.rst", "generated/draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps.rst", "generated/draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence.rst", "generated/draugr.opencv_utilities.raster_sequences.frames.rst", "generated/draugr.opencv_utilities.raster_sequences.frames.frame_generator.rst", "generated/draugr.opencv_utilities.transformation.rst", "generated/draugr.opencv_utilities.transformation.cropping.rst", "generated/draugr.opencv_utilities.transformation.cropping.circle_crop.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.Lambda.rst", "generated/draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans.rst", "generated/draugr.opencv_utilities.transformation.resize.rst", "generated/draugr.opencv_utilities.transformation.resize.InterpolationEnum.rst", "generated/draugr.opencv_utilities.transformation.resize.cv2_resize.rst", "generated/draugr.opencv_utilities.windows.rst", "generated/draugr.opencv_utilities.windows.color_picker.rst", "generated/draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker.rst", "generated/draugr.opencv_utilities.windows.default.rst", "generated/draugr.opencv_utilities.windows.default.ExtensionEnum.rst", "generated/draugr.opencv_utilities.windows.default.match_return_code.rst", "generated/draugr.opencv_utilities.windows.elements.rst", "generated/draugr.opencv_utilities.windows.elements.trackbar.rst", "generated/draugr.opencv_utilities.windows.elements.trackbar.add_trackbar.rst", "generated/draugr.opencv_utilities.windows.hough_circles.rst", "generated/draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles.rst", "generated/draugr.opencv_utilities.windows.image.rst", "generated/draugr.opencv_utilities.windows.image.show_image.rst", "generated/draugr.os_utilities.rst", "generated/draugr.os_utilities.cuda_device.rst", "generated/draugr.os_utilities.cuda_device.DeviceOrderEnum.rst", "generated/draugr.os_utilities.cuda_device.set_cuda_device_order.rst", "generated/draugr.os_utilities.cuda_device.set_cuda_visible_devices.rst", "generated/draugr.os_utilities.linux_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.rst", "generated/draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.rst", "generated/draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences.rst", "generated/draugr.os_utilities.linux_utilities.mac_utilities.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service.rst", "generated/draugr.os_utilities.linux_utilities.systemd_utilities.service_template.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_home_dir.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.change_passwd.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.make_user.rst", "generated/draugr.os_utilities.linux_utilities.user_utilities.remove_user.rst", "generated/draugr.os_utilities.mac_utilities.rst", "generated/draugr.os_utilities.platform_selection.rst", "generated/draugr.os_utilities.platform_selection.get_backend_module.rst", "generated/draugr.os_utilities.resource_utilities.rst", "generated/draugr.os_utilities.resource_utilities.all.rst", "generated/draugr.os_utilities.resource_utilities.all.get_num_instances.rst", "generated/draugr.os_utilities.resource_utilities.cpu.rst", "generated/draugr.os_utilities.resource_utilities.cpu.WorkerSession.rst", "generated/draugr.os_utilities.resource_utilities.cpu.release_worker_cores.rst", "generated/draugr.os_utilities.resource_utilities.cpu.request_worker_cores.rst", "generated/draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker.rst", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_available.rst", "generated/draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use.rst", "generated/draugr.os_utilities.resource_utilities.gpu.rst", "generated/draugr.os_utilities.resource_utilities.ram.rst", "generated/draugr.os_utilities.resource_utilities.ram.num_instance_no_paging.rst", "generated/draugr.os_utilities.screen_resolution.rst", "generated/draugr.os_utilities.screen_resolution.get_screen_resolution.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_gtk.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_mac.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_pygame.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_tk.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_win.rst", "generated/draugr.os_utilities.screen_resolution.screen_res_xlib.rst", "generated/draugr.os_utilities.service.rst", "generated/draugr.os_utilities.service.add_service.rst", "generated/draugr.os_utilities.service.remove_service.rst", "generated/draugr.pandas_utilities.rst", "generated/draugr.pandas_utilities.formatting.rst", "generated/draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter.rst", "generated/draugr.pandas_utilities.from_dict.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df.rst", "generated/draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df.rst", "generated/draugr.pandas_utilities.latex_mean_std.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str.rst", "generated/draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean.rst", "generated/draugr.pandas_utilities.misc_utilities.rst", "generated/draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum.rst", "generated/draugr.pandas_utilities.misc_utilities.ExportMethodEnum.rst", "generated/draugr.pandas_utilities.misc_utilities.duplicate_columns.rst", "generated/draugr.pandas_utilities.multi_index_utilities.rst", "generated/draugr.pandas_utilities.multi_index_utilities.add_index_level.rst", "generated/draugr.pandas_utilities.styling.rst", "generated/draugr.pandas_utilities.styling.AttrEnum.rst", "generated/draugr.pandas_utilities.styling.ColorEnum.rst", "generated/draugr.pandas_utilities.styling.NDFrameExtremeEnum.rst", "generated/draugr.pandas_utilities.styling.color_highlight_extreme.rst", "generated/draugr.pandas_utilities.styling.color_negative_red.rst", "generated/draugr.pygame_utilities.rst", "generated/draugr.pygame_utilities.screen.rst", "generated/draugr.pygame_utilities.screen.get_screen_resolution.rst", "generated/draugr.python_utilities.rst", "generated/draugr.python_utilities.broadcasting.rst", "generated/draugr.python_utilities.broadcasting.BroadcastNone.rst", "generated/draugr.python_utilities.exclude.rst", "generated/draugr.python_utilities.exclude.packages.rst", "generated/draugr.python_utilities.exclude.packages.a.rst", "generated/draugr.python_utilities.exclude.packages.b.rst", "generated/draugr.python_utilities.exclude.packages.c.rst", "generated/draugr.python_utilities.exclude.worker.rst", "generated/draugr.python_utilities.exclude.worker.main.rst", "generated/draugr.python_utilities.exclude.worker.spawn.rst", "generated/draugr.python_utilities.function_wrappers.rst", "generated/draugr.python_utilities.function_wrappers.max_frequency.rst", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper.rst", "generated/draugr.python_utilities.function_wrappers.min_interval_wrapper_global.rst", "generated/draugr.python_utilities.function_wrappers.wrap_args.rst", "generated/draugr.python_utilities.generators.rst", "generated/draugr.python_utilities.generators.batching_generator.rst", "generated/draugr.python_utilities.generators.batching_generator.batch_generator.rst", "generated/draugr.python_utilities.generators.batching_generator.random_batches.rst", "generated/draugr.python_utilities.generators.batching_generator.shuffled_batches.rst", "generated/draugr.python_utilities.generators.batching_generator.sized_batch.rst", "generated/draugr.python_utilities.generators.recycling_generator.rst", "generated/draugr.python_utilities.generators.recycling_generator.batched_recycle.rst", "generated/draugr.python_utilities.generators.recycling_generator.recycle.rst", "generated/draugr.python_utilities.http.rst", "generated/draugr.python_utilities.http.HttpMethodEnum.rst", "generated/draugr.python_utilities.sockets.rst", "generated/draugr.python_utilities.sockets.find_unclaimed_port.rst", "generated/draugr.python_utilities.sockets.get_host_ip.rst", "generated/draugr.python_utilities.sockets.is_port_in_use.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc.rst", "generated/draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw.rst", "generated/draugr.random_utilities.rst", "generated/draugr.random_utilities.seeding.rst", "generated/draugr.random_utilities.seeding.seed_stack.rst", "generated/draugr.scipy_utilities.rst", "generated/draugr.scipy_utilities.scipy_utilities.rst", "generated/draugr.scipy_utilities.scipy_utilities.read_normalised_wave.rst", "generated/draugr.scipy_utilities.scipy_utilities.write_normalised_wave.rst", "generated/draugr.scipy_utilities.signal_processing.rst", "generated/draugr.scipy_utilities.subsampling.rst", "generated/draugr.scipy_utilities.subsampling.fft_subsample.rst", "generated/draugr.scipy_utilities.subsampling.fir_subsample.rst", "generated/draugr.scipy_utilities.subsampling.mag_decimation_subsample.rst", "generated/draugr.scipy_utilities.subsampling.max_decimation_subsample.rst", "generated/draugr.scipy_utilities.subsampling.min_decimation_subsample.rst", "generated/draugr.stopping.rst", "generated/draugr.stopping.stopping_key.rst", "generated/draugr.stopping.stopping_key.CaptureEarlyStop.rst", "generated/draugr.stopping.stopping_key.add_early_stopping_key_combination.rst", "generated/draugr.threading_utilities.rst", "generated/draugr.threading_utilities.exclude.rst", "generated/draugr.threading_utilities.skipper.rst", "generated/draugr.threading_utilities.skipper.Skipper.rst", "generated/draugr.torch_utilities.rst", "generated/draugr.torch_utilities.architectures.rst", "generated/draugr.torch_utilities.architectures.architecture.rst", "generated/draugr.torch_utilities.architectures.architecture.Architecture.rst", "generated/draugr.torch_utilities.architectures.distributional.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP.rst", "generated/draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.rst", "generated/draugr.torch_utilities.architectures.experimental.heads.rst", "generated/draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase.rst", "generated/draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP.rst", "generated/draugr.torch_utilities.architectures.mlp.rst", "generated/draugr.torch_utilities.architectures.mlp.MLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.rst", "generated/draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP.rst", "generated/draugr.torch_utilities.datasets.rst", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.rst", "generated/draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset.rst", "generated/draugr.torch_utilities.datasets.random_dataset.rst", "generated/draugr.torch_utilities.datasets.random_dataset.RandomDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.rst", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder.rst", "generated/draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder.rst", "generated/draugr.torch_utilities.distributions.rst", "generated/draugr.torch_utilities.distributions.entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian.rst", "generated/draugr.torch_utilities.distributions.entropy.log_shannon_entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.normal_entropy.rst", "generated/draugr.torch_utilities.distributions.entropy.normal_log_density.rst", "generated/draugr.torch_utilities.distributions.entropy.shannon_entropy.rst", "generated/draugr.torch_utilities.evaluation.rst", "generated/draugr.torch_utilities.evaluation.classification.rst", "generated/draugr.torch_utilities.evaluation.classification.find_n_misclassified.rst", "generated/draugr.torch_utilities.evaluation.cross_validation.rst", "generated/draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator.rst", "generated/draugr.torch_utilities.exporting.rst", "generated/draugr.torch_utilities.exporting.summary.rst", "generated/draugr.torch_utilities.exporting.summary.to_latex_table.rst", "generated/draugr.torch_utilities.generators.rst", "generated/draugr.torch_utilities.generators.batching.rst", "generated/draugr.torch_utilities.generators.batching.LimitedBatchResampler.rst", "generated/draugr.torch_utilities.generators.to_tensor_generator.rst", "generated/draugr.torch_utilities.images.rst", "generated/draugr.torch_utilities.images.channel_transform.rst", "generated/draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor.rst", "generated/draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch.rst", "generated/draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor.rst", "generated/draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch.rst", "generated/draugr.torch_utilities.images.conversion.rst", "generated/draugr.torch_utilities.images.conversion.quick_to_pil_image.rst", "generated/draugr.torch_utilities.opencv.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToImage.rst", "generated/draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor.rst", "generated/draugr.torch_utilities.operations.rst", "generated/draugr.torch_utilities.operations.boxes_2d.rst", "generated/draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch.rst", "generated/draugr.torch_utilities.operations.enums.rst", "generated/draugr.torch_utilities.operations.enums.ReductionMethodEnum.rst", "generated/draugr.torch_utilities.operations.sizes.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size.rst", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.rst", "generated/draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.pad2d.rst", "generated/draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape.rst", "generated/draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes.rst", "generated/draugr.torch_utilities.operations.torch_transforms.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip.rst", "generated/draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor.rst", "generated/draugr.torch_utilities.optimisation.rst", "generated/draugr.torch_utilities.optimisation.debugging.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU.rst", "generated/draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel.rst", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.rst", "generated/draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter.rst", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.rst", "generated/draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch.rst", "generated/draugr.torch_utilities.optimisation.parameters.rst", "generated/draugr.torch_utilities.optimisation.parameters.freeze_parameters.rst", "generated/draugr.torch_utilities.optimisation.parameters.frozen_parameters.rst", "generated/draugr.torch_utilities.optimisation.scheduling.rst", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.rst", "generated/draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr.rst", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.rst", "generated/draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR.rst", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.rst", "generated/draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler.rst", "generated/draugr.torch_utilities.optimisation.stopping.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector.rst", "generated/draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector.rst", "generated/draugr.torch_utilities.optimisation.updates.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_parameters.rst", "generated/draugr.torch_utilities.optimisation.updates.copying.copy_state.rst", "generated/draugr.torch_utilities.optimisation.updates.soft_update.rst", "generated/draugr.torch_utilities.persistence.rst", "generated/draugr.torch_utilities.persistence.checkpoint.rst", "generated/draugr.torch_utilities.persistence.checkpoint.load_checkpoint.rst", "generated/draugr.torch_utilities.persistence.checkpoint.save_checkpoint.rst", "generated/draugr.torch_utilities.persistence.config.rst", "generated/draugr.torch_utilities.persistence.config.ensure_directory_exist.rst", "generated/draugr.torch_utilities.persistence.config.save_config.rst", "generated/draugr.torch_utilities.persistence.model.rst", "generated/draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu.rst", "generated/draugr.torch_utilities.persistence.model.load_latest_model.rst", "generated/draugr.torch_utilities.persistence.model.load_model.rst", "generated/draugr.torch_utilities.persistence.model.save_model.rst", "generated/draugr.torch_utilities.persistence.model.save_model_and_configuration.rst", "generated/draugr.torch_utilities.persistence.naming.rst", "generated/draugr.torch_utilities.persistence.naming.get_model_hash.rst", "generated/draugr.torch_utilities.persistence.parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.load_latest_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.load_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.save_model_parameters.rst", "generated/draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration.rst", "generated/draugr.torch_utilities.sessions.rst", "generated/draugr.torch_utilities.sessions.cache_sessions.rst", "generated/draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession.rst", "generated/draugr.torch_utilities.sessions.determinism_sessions.rst", "generated/draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCpuSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchCudaSession.rst", "generated/draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession.rst", "generated/draugr.torch_utilities.sessions.jit_sessions.TorchJitSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchEvalSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainSession.rst", "generated/draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession.rst", "generated/draugr.torch_utilities.sessions.type_sessions.rst", "generated/draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession.rst", "generated/draugr.torch_utilities.system.rst", "generated/draugr.torch_utilities.system.constants.rst", "generated/draugr.torch_utilities.system.constants.torch_pi.rst", "generated/draugr.torch_utilities.system.data_type.rst", "generated/draugr.torch_utilities.system.data_type.global_torch_dtype.rst", "generated/draugr.torch_utilities.system.data_type.set_global_torch_dtype.rst", "generated/draugr.torch_utilities.system.device.rst", "generated/draugr.torch_utilities.system.device.TorchDeviceEnum.rst", "generated/draugr.torch_utilities.system.device.auto_select_available_cuda_device.rst", "generated/draugr.torch_utilities.system.device.get_gpu_usage_mb.rst", "generated/draugr.torch_utilities.system.device.global_torch_device.rst", "generated/draugr.torch_utilities.system.device.select_cuda_device.rst", "generated/draugr.torch_utilities.system.device.set_global_torch_device.rst", "generated/draugr.torch_utilities.system.device.torch_clean_up.rst", "generated/draugr.torch_utilities.system.info.rst", "generated/draugr.torch_utilities.system.info.cuda_info.rst", "generated/draugr.torch_utilities.system.info.system_info.rst", "generated/draugr.torch_utilities.system.loading.rst", "generated/draugr.torch_utilities.system.loading.default_worker_init_fn.rst", "generated/draugr.torch_utilities.system.loading.global_pin_memory.rst", "generated/draugr.torch_utilities.system.seeding.rst", "generated/draugr.torch_utilities.system.seeding.torch_seed.rst", "generated/draugr.torch_utilities.tensors.rst", "generated/draugr.torch_utilities.tensors.dimension_order.rst", "generated/draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor.rst", "generated/draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor.rst", "generated/draugr.torch_utilities.tensors.info.rst", "generated/draugr.torch_utilities.tensors.info.size_of_tensor.rst", "generated/draugr.torch_utilities.tensors.mixins.rst", "generated/draugr.torch_utilities.tensors.mixins.TensoriseMixin.rst", "generated/draugr.torch_utilities.tensors.normalise.rst", "generated/draugr.torch_utilities.tensors.normalise.standardise.rst", "generated/draugr.torch_utilities.tensors.reshaping.rst", "generated/draugr.torch_utilities.tensors.reshaping.flatten_keep_batch.rst", "generated/draugr.torch_utilities.tensors.reshaping.flatten_tn_dim.rst", "generated/draugr.torch_utilities.tensors.reshaping.safe_concat.rst", "generated/draugr.torch_utilities.tensors.tensor_container.rst", "generated/draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple.rst", "generated/draugr.torch_utilities.tensors.to_scalar.rst", "generated/draugr.torch_utilities.tensors.to_tensor.rst", "generated/draugr.torch_utilities.tensors.types.rst", "generated/draugr.torch_utilities.tensors.types.numpy_to_torch_dtype.rst", "generated/draugr.torch_utilities.tensors.types.torch_to_numpy_dtype.rst", "generated/draugr.torch_utilities.writers.rst", "generated/draugr.torch_utilities.writers.mixins.rst", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.rst", "generated/draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin.rst", "generated/draugr.torch_utilities.writers.tensorboard.rst", "generated/draugr.torch_utilities.writers.tensorboard.launcher.rst", "generated/draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW.rst", "generated/draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_hook.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.rst", "generated/draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms.rst", "generated/draugr.torch_utilities.writers.visdom.rst", "generated/draugr.torch_utilities.writers.visdom.episode_visual.rst", "generated/draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser.rst", "generated/draugr.torch_utilities.writers.visdom.plotting.rst", "generated/draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats.rst", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.rst", "generated/draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter.rst", "generated/draugr.tqdm_utilities.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_imap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_map.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.parallel_umap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_imap.rst", "generated/draugr.tqdm_utilities.pooled_progress_bar.sequential_map.rst", "generated/draugr.tqdm_utilities.progress_bar.rst", "generated/draugr.visualisation.rst", "generated/draugr.visualisation.ggplot_utilities.rst", "generated/draugr.visualisation.matplotlib_utilities.rst", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment.rst", "generated/draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment.rst", "generated/draugr.visualisation.matplotlib_utilities.annotate_point.rst", "generated/draugr.visualisation.matplotlib_utilities.decolorise_plot.rst", "generated/draugr.visualisation.matplotlib_utilities.denormalise_minusoneone.rst", "generated/draugr.visualisation.matplotlib_utilities.latex_clean_label.rst", "generated/draugr.visualisation.matplotlib_utilities.make_errorbar_legend.rst", "generated/draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box.rst", "generated/draugr.visualisation.matplotlib_utilities.remove_decoration.rst", "generated/draugr.visualisation.matplotlib_utilities.save_embed_fig.rst", "generated/draugr.visualisation.matplotlib_utilities.use_monochrome_style.rst", "generated/draugr.visualisation.pillow_utilities.rst", "generated/draugr.visualisation.pillow_utilities.byte_array_to_pil_image.rst", "generated/draugr.visualisation.pillow_utilities.np_array_to_pil_img.rst", "generated/draugr.visualisation.pillow_utilities.pil_image_to_byte_array.rst", "generated/draugr.visualisation.pillow_utilities.pil_img_to_np_array.rst", "generated/draugr.visualisation.pillow_utilities.pil_merge_images.rst", "generated/draugr.visualisation.seaborn_utilities.rst", "generated/draugr.visualisation.seaborn_utilities.despine_all.rst", "generated/draugr.visualisation.seaborn_utilities.exponential_moving_average.rst", "generated/draugr.visualisation.seaborn_utilities.set_y_log_scale.rst", "generated/draugr.writers.rst", "generated/draugr.writers.csv_writer.rst", "generated/draugr.writers.csv_writer.CSVWriter.rst", "generated/draugr.writers.databases.rst", "generated/draugr.writers.databases.hdf_writer.rst", "generated/draugr.writers.databases.hdf_writer.HdfWriter.rst", "generated/draugr.writers.databases.sqlite_writer.rst", "generated/draugr.writers.databases.sqlite_writer.SqliteWriter.rst", "generated/draugr.writers.log_writer.rst", "generated/draugr.writers.log_writer.LogWriter.rst", "generated/draugr.writers.mixins.rst", "generated/draugr.writers.mixins.audio_writer_mixin.rst", "generated/draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin.rst", "generated/draugr.writers.mixins.bar_writer_mixin.rst", "generated/draugr.writers.mixins.bar_writer_mixin.BarWriterMixin.rst", "generated/draugr.writers.mixins.embed_writer_mixin.rst", "generated/draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin.rst", "generated/draugr.writers.mixins.figure_writer_mixin.rst", "generated/draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin.rst", "generated/draugr.writers.mixins.histogram_writer_mixin.rst", "generated/draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin.rst", "generated/draugr.writers.mixins.image_writer_mixin.rst", "generated/draugr.writers.mixins.image_writer_mixin.ImageWriterMixin.rst", "generated/draugr.writers.mixins.instantiation_writer_mixin.rst", "generated/draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin.rst", "generated/draugr.writers.mixins.line_writer_mixin.rst", "generated/draugr.writers.mixins.line_writer_mixin.LineWriterMixin.rst", "generated/draugr.writers.mixins.mesh_writer_mixin.rst", "generated/draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin.rst", "generated/draugr.writers.mixins.precision_recall_writer_mixin.rst", "generated/draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin.rst", "generated/draugr.writers.mixins.scalar_writer_mixin.rst", "generated/draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin.rst", "generated/draugr.writers.mixins.spectrogram_writer_mixin.rst", "generated/draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin.rst", "generated/draugr.writers.mixins.video_writer_mixin.rst", "generated/draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum.rst", "generated/draugr.writers.mixins.video_writer_mixin.VideoWriterMixin.rst", "generated/draugr.writers.mock_writer.rst", "generated/draugr.writers.mock_writer.MockWriter.rst", "generated/draugr.writers.standard_tags.rst", "generated/draugr.writers.standard_tags.TestingCurves.rst", "generated/draugr.writers.standard_tags.TestingScalars.rst", "generated/draugr.writers.standard_tags.TestingTables.rst", "generated/draugr.writers.standard_tags.TrainingCurves.rst", "generated/draugr.writers.standard_tags.TrainingScalars.rst", "generated/draugr.writers.standard_tags.TrainingTables.rst", "generated/draugr.writers.standard_tags.should_plot_y_log_scale.rst", "generated/draugr.writers.standard_tags.should_smooth_series.rst", "generated/draugr.writers.terminal.rst", "generated/draugr.writers.terminal.console_writer.rst", "generated/draugr.writers.terminal.console_writer.ConsoleWriter.rst", "generated/draugr.writers.terminal.terminal_image_renderer.rst", "generated/draugr.writers.terminal.terminal_image_renderer.entry_point.rst", "generated/draugr.writers.terminal.terminal_image_renderer.get_image.rst", "generated/draugr.writers.terminal.terminal_image_renderer.get_pixel.rst", "generated/draugr.writers.terminal.terminal_image_renderer.render_file.rst", "generated/draugr.writers.terminal.terminal_image_renderer.render_image.rst", "generated/draugr.writers.terminal.terminal_image_renderer.terminalise_image.rst", "generated/draugr.writers.terminal.terminal_plot.rst", "generated/draugr.writers.terminal.terminal_plot_writer.rst", "generated/draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter.rst", "generated/draugr.writers.terminal.terminal_plotter.rst", "generated/draugr.writers.terminal.terminal_utilities.rst", "generated/draugr.writers.terminal.terminal_utilities.scale.rst", "generated/draugr.writers.writer.rst", "generated/draugr.writers.writer.Writer.rst", "generated/draugr.writers.writer.global_writer.rst", "generated/draugr.writers.writer.set_global_writer.rst", "generated/draugr.writers.writer_utilities.rst", "generated/draugr.writers.writer_utilities.metrics.rst", "getting_started.rst", "index.rst"], "titles": ["draugr", "draugr.dist_is_editable", "draugr.dlib_utilities", "draugr.dlib_utilities.dlib_utilities", "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices", "draugr.dlib_utilities.dlib_utilities.eye_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.mouth_aspect_ratio", "draugr.dlib_utilities.dlib_utilities.rect_to_bounding_box", "draugr.dlib_utilities.dlib_utilities.shape_to_ndarray", "draugr.dlib_utilities.exclude", "draugr.dlib_utilities.exclude.flags", "draugr.dlib_utilities.exclude.flags.TupleFlag", "draugr.dlib_utilities.facealigner", "draugr.dlib_utilities.facealigner.align_face", "draugr.drawers", "draugr.drawers.drawer", "draugr.drawers.drawer.Drawer", "draugr.drawers.mpl_drawers", "draugr.drawers.mpl_drawers.discrete_scroll_plot", "draugr.drawers.mpl_drawers.distribution_plot", "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot", "draugr.drawers.mpl_drawers.image_stream_plot", "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot", "draugr.drawers.mpl_drawers.mpldrawer", "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer", "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer", "draugr.drawers.mpl_drawers.series_scroll_plot", "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot", "draugr.drawers.mpl_drawers.spectral", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram", "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot", "draugr.drawers.opencv_drawers", "draugr.drawers.opencv_drawers.opencv_image_stream", "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream", "draugr.entry_points", "draugr.entry_points.cpu_usage_entry_point", "draugr.entry_points.cpu_usage_entry_point.main", "draugr.entry_points.tensorboard_entry_point", "draugr.entry_points.tensorboard_entry_point.main", "draugr.entry_points.toggle_darkmode", "draugr.entry_points.toggle_darkmode.main", "draugr.entry_points.visdom_entry_point", "draugr.entry_points.visdom_entry_point.main", "draugr.extensions", "draugr.extensions.skimage_utilities", "draugr.extensions.skimage_utilities.rgb_to_grayscale", "draugr.extensions.sorcery_utilities", "draugr.extensions.sorcery_utilities.lower_case_assigned_names", "draugr.extensions.sorcery_utilities.upper_case_assigned_names", "draugr.ffmpeg_utilities", "draugr.ffmpeg_utilities.exclude", "draugr.ffmpeg_utilities.extract", "draugr.ffmpeg_utilities.extract.extract_frames", "draugr.ffmpeg_utilities.merge", "draugr.ffmpeg_utilities.merge.merge_video", "draugr.ffmpeg_utilities.sequencify", "draugr.ffmpeg_utilities.sequencify.sequencify_files", "draugr.ffmpeg_utilities.split", "draugr.ffmpeg_utilities.split.spilt_video", "draugr.get_version", "draugr.jax_utilities", "draugr.metrics", "draugr.metrics.accumulation", "draugr.metrics.accumulation.lambda_accumulator", "draugr.metrics.accumulation.mean_accumulator", "draugr.metrics.accumulation.total_accumulator", "draugr.metrics.meters", "draugr.metrics.meters.AverageMeter", "draugr.metrics.meters.Meter", "draugr.metrics.metric_aggregator", "draugr.metrics.metric_aggregator.MetricAggregator", "draugr.metrics.metric_aggregator.save_metric", "draugr.metrics.metric_collection", "draugr.metrics.metric_collection.MetricCollection", "draugr.metrics.metric_summary", "draugr.metrics.metric_summary.MetricSummary", "draugr.metrics.plotting", "draugr.multiprocessing_utilities", "draugr.multiprocessing_utilities.pooled_queue_processor", "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor", "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask", "draugr.numpy_utilities", "draugr.numpy_utilities.channel_transform", "draugr.numpy_utilities.channel_transform.chw_to_hwc", "draugr.numpy_utilities.channel_transform.float_chw_to_hwc_uint", "draugr.numpy_utilities.channel_transform.hwc_to_chw", "draugr.numpy_utilities.channel_transform.uint_hwc_to_chw_float", "draugr.numpy_utilities.datasets", "draugr.numpy_utilities.datasets.categorical", "draugr.numpy_utilities.datasets.categorical.deep_category", "draugr.numpy_utilities.datasets.categorical.deep_category.build_deep_categorical_dataset", "draugr.numpy_utilities.datasets.categorical.flat_category", "draugr.numpy_utilities.datasets.categorical.flat_category.build_flat_dataset", "draugr.numpy_utilities.datasets.categorical.shallow_category", "draugr.numpy_utilities.datasets.categorical.shallow_category.build_shallow_categorical_dataset", "draugr.numpy_utilities.datasets.defaults", "draugr.numpy_utilities.datasets.splitting", "draugr.numpy_utilities.datasets.splitting.SplitEnum", "draugr.numpy_utilities.datasets.splitting.SplitIndexer", "draugr.numpy_utilities.datasets.splitting.select_split", "draugr.numpy_utilities.datasets.splitting.train_valid_test_split", "draugr.numpy_utilities.manipulation", "draugr.numpy_utilities.manipulation.MyNdArray", "draugr.numpy_utilities.manipulation.recursive_flatten_numpy", "draugr.numpy_utilities.mixing", "draugr.numpy_utilities.mixing.mix_channels", "draugr.numpy_utilities.powers", "draugr.numpy_utilities.powers.next_pow_10_numpy", "draugr.numpy_utilities.powers.next_pow_2_numpy", "draugr.numpy_utilities.powers.next_pow_numpy", "draugr.numpy_utilities.powers.next_power_10_numpy", "draugr.numpy_utilities.powers.next_power_2_numpy", "draugr.numpy_utilities.raster_grid_2d_masking", "draugr.numpy_utilities.raster_grid_2d_masking.circular_mask", "draugr.numpy_utilities.raster_grid_3d_masking", "draugr.numpy_utilities.raster_grid_3d_masking.sphere_mask", "draugr.numpy_utilities.resize", "draugr.numpy_utilities.resize.resize_array", "draugr.numpy_utilities.sampling", "draugr.numpy_utilities.sampling.get_sampler", "draugr.numpy_utilities.signal_utilities", "draugr.numpy_utilities.signal_utilities.padding", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to", "draugr.numpy_utilities.signal_utilities.padding.zero_pad_to_power_2", "draugr.numpy_utilities.signal_utilities.signal_mixing", "draugr.numpy_utilities.signal_utilities.signal_mixing.mix_ratio", "draugr.numpy_utilities.signal_utilities.signal_projection", "draugr.numpy_utilities.signal_utilities.signal_projection.heaviside", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_max_abs", "draugr.numpy_utilities.signal_utilities.signal_projection.normalise_signal_minmax", "draugr.numpy_utilities.signal_utilities.signal_statistics", "draugr.numpy_utilities.signal_utilities.signal_statistics.mean_square", "draugr.numpy_utilities.signal_utilities.signal_statistics.root_mean_square", "draugr.numpy_utilities.signal_utilities.truncation", "draugr.numpy_utilities.signal_utilities.truncation.last_dim_truncate", "draugr.numpy_utilities.signal_utilities.truncation.min_length_truncate_batch", "draugr.numpy_utilities.signal_utilities.truncation.truncate_to_power_2", "draugr.opencv_utilities", "draugr.opencv_utilities.bounding_boxes", "draugr.opencv_utilities.bounding_boxes.boxes_2d", "draugr.opencv_utilities.bounding_boxes.boxes_2d.minmax_to_xywh", "draugr.opencv_utilities.bounding_boxes.boxes_2d.xywh_to_minmax", "draugr.opencv_utilities.bounding_boxes.evaluation", "draugr.opencv_utilities.bounding_boxes.evaluation.intersect_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.jaccard_overlap_numpy", "draugr.opencv_utilities.bounding_boxes.evaluation.remove_null_boxes", "draugr.opencv_utilities.color_space", "draugr.opencv_utilities.color_space.clean", "draugr.opencv_utilities.color_space.clean.CleanUpMethod", "draugr.opencv_utilities.color_space.clean.clean_up", "draugr.opencv_utilities.color_space.color", "draugr.opencv_utilities.color_space.color.is_singular_channel", "draugr.opencv_utilities.color_space.color.num_channels", "draugr.opencv_utilities.color_space.color.to_color", "draugr.opencv_utilities.color_space.edge", "draugr.opencv_utilities.color_space.edge.CannyApertureSize", "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum", "draugr.opencv_utilities.color_space.edge.to_edge", "draugr.opencv_utilities.color_space.gamma", "draugr.opencv_utilities.color_space.gamma.gamma_correct_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_fast_to_byte", "draugr.opencv_utilities.color_space.gamma.gamma_correct_float_to_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_byte", "draugr.opencv_utilities.color_space.gamma.linear_correct_float_to_byte", "draugr.opencv_utilities.color_space.gray", "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum", "draugr.opencv_utilities.color_space.gray.to_gray", "draugr.opencv_utilities.color_space.noise", "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum", "draugr.opencv_utilities.color_space.noise.noise_filter", "draugr.opencv_utilities.color_space.threshold", "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum", "draugr.opencv_utilities.color_space.threshold.hsv_min_max_clip_mask", "draugr.opencv_utilities.color_space.threshold.threshold_channel", "draugr.opencv_utilities.drawing", "draugr.opencv_utilities.drawing.draw_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_bounding_boxes", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_box", "draugr.opencv_utilities.drawing.draw_boxes.draw_single_rect", "draugr.opencv_utilities.drawing.masks", "draugr.opencv_utilities.drawing.masks.gauss_circles", "draugr.opencv_utilities.drawing.masks.gauss_circles.ellipse_bbox", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v1", "draugr.opencv_utilities.drawing.masks.gauss_circles.make_gradient_v2", "draugr.opencv_utilities.drawing.masks.segment_ellipse", "draugr.opencv_utilities.drawing.opencv_draw", "draugr.opencv_utilities.drawing.opencv_draw.draw_masks", "draugr.opencv_utilities.drawing.opencv_draw.find_contours", "draugr.opencv_utilities.drawing.opencv_drawing_utilities", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.cube_3d_matrix", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_axis", "draugr.opencv_utilities.drawing.opencv_drawing_utilities.draw_cube", "draugr.opencv_utilities.namespaces", "draugr.opencv_utilities.namespaces.color_conversion_enum", "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum", "draugr.opencv_utilities.namespaces.enums", "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum", "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum", "draugr.opencv_utilities.namespaces.enums.ComparisonEnum", "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum", "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum", "draugr.opencv_utilities.namespaces.enums.DataTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum", "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum", "draugr.opencv_utilities.namespaces.enums.FontEnum", "draugr.opencv_utilities.namespaces.enums.HoughModeEnum", "draugr.opencv_utilities.namespaces.enums.KmeansEnum", "draugr.opencv_utilities.namespaces.enums.LineTypeEnum", "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum", "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum", "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum", "draugr.opencv_utilities.namespaces.enums.MouseEventEnum", "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes", "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum", "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum", "draugr.opencv_utilities.namespaces.flags", "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum", "draugr.opencv_utilities.namespaces.flags.MouseEventFlag", "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag", "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag", "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag", "draugr.opencv_utilities.raster_sequences", "draugr.opencv_utilities.raster_sequences.async_video_stream", "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream", "draugr.opencv_utilities.raster_sequences.frame_annotation", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_fps", "draugr.opencv_utilities.raster_sequences.frame_annotation.blit_numbering_raster_sequence", "draugr.opencv_utilities.raster_sequences.frames", "draugr.opencv_utilities.raster_sequences.frames.frame_generator", "draugr.opencv_utilities.transformation", "draugr.opencv_utilities.transformation.cropping", "draugr.opencv_utilities.transformation.cropping.circle_crop", "draugr.opencv_utilities.transformation.cv2_transforms", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand", "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop", "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation", "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize", "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords", "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords", "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts", "draugr.opencv_utilities.transformation.cv2_transforms.Lambda", "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans", "draugr.opencv_utilities.transformation.resize", "draugr.opencv_utilities.transformation.resize.InterpolationEnum", "draugr.opencv_utilities.transformation.resize.cv2_resize", "draugr.opencv_utilities.windows", "draugr.opencv_utilities.windows.color_picker", "draugr.opencv_utilities.windows.color_picker.interactive_hsv_color_picker", "draugr.opencv_utilities.windows.default", "draugr.opencv_utilities.windows.default.ExtensionEnum", "draugr.opencv_utilities.windows.default.match_return_code", "draugr.opencv_utilities.windows.elements", "draugr.opencv_utilities.windows.elements.trackbar", "draugr.opencv_utilities.windows.elements.trackbar.add_trackbar", "draugr.opencv_utilities.windows.hough_circles", "draugr.opencv_utilities.windows.hough_circles.interactive_hough_circles", "draugr.opencv_utilities.windows.image", "draugr.opencv_utilities.windows.image.show_image", "draugr.os_utilities", "draugr.os_utilities.cuda_device", "draugr.os_utilities.cuda_device.DeviceOrderEnum", "draugr.os_utilities.cuda_device.set_cuda_device_order", "draugr.os_utilities.cuda_device.set_cuda_visible_devices", "draugr.os_utilities.linux_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode", "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode.is_dark_mode_active", "draugr.os_utilities.linux_utilities.gtk_utilities", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings", "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences", "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences", "draugr.os_utilities.linux_utilities.mac_utilities", "draugr.os_utilities.linux_utilities.systemd_utilities", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.amdroc", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.deprecated", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.docker_inspection", "draugr.os_utilities.linux_utilities.systemd_utilities.exclude.psystemd", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.disable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.enable_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.install_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.remove_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.restart_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.start_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.status_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.stop_service", "draugr.os_utilities.linux_utilities.systemd_utilities.service_template", "draugr.os_utilities.linux_utilities.user_utilities", "draugr.os_utilities.linux_utilities.user_utilities.change_home_dir", "draugr.os_utilities.linux_utilities.user_utilities.change_passwd", "draugr.os_utilities.linux_utilities.user_utilities.make_user", "draugr.os_utilities.linux_utilities.user_utilities.remove_user", "draugr.os_utilities.mac_utilities", "draugr.os_utilities.platform_selection", "draugr.os_utilities.platform_selection.get_backend_module", "draugr.os_utilities.resource_utilities", "draugr.os_utilities.resource_utilities.all", "draugr.os_utilities.resource_utilities.all.get_num_instances", "draugr.os_utilities.resource_utilities.cpu", "draugr.os_utilities.resource_utilities.cpu.WorkerSession", "draugr.os_utilities.resource_utilities.cpu.release_worker_cores", "draugr.os_utilities.resource_utilities.cpu.request_worker_cores", "draugr.os_utilities.resource_utilities.cpu.reset_worker_tracker", "draugr.os_utilities.resource_utilities.cpu.worker_cores_available", "draugr.os_utilities.resource_utilities.cpu.worker_cores_in_use", "draugr.os_utilities.resource_utilities.gpu", "draugr.os_utilities.resource_utilities.ram", "draugr.os_utilities.resource_utilities.ram.num_instance_no_paging", "draugr.os_utilities.screen_resolution", "draugr.os_utilities.screen_resolution.get_screen_resolution", "draugr.os_utilities.screen_resolution.screen_res_gtk", "draugr.os_utilities.screen_resolution.screen_res_mac", "draugr.os_utilities.screen_resolution.screen_res_pygame", "draugr.os_utilities.screen_resolution.screen_res_tk", "draugr.os_utilities.screen_resolution.screen_res_win", "draugr.os_utilities.screen_resolution.screen_res_xlib", "draugr.os_utilities.service", "draugr.os_utilities.service.add_service", "draugr.os_utilities.service.remove_service", "draugr.pandas_utilities", "draugr.pandas_utilities.formatting", "draugr.pandas_utilities.formatting.pandas_mean_std_bold_formatter", "draugr.pandas_utilities.from_dict", "draugr.pandas_utilities.from_dict.nested_dict_to_four_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_three_level_column_df", "draugr.pandas_utilities.from_dict.nested_dict_to_two_level_column_df", "draugr.pandas_utilities.latex_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_format_bold_max_row_latex", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std", "draugr.pandas_utilities.latex_mean_std.pandas_mean_std_to_str", "draugr.pandas_utilities.latex_mean_std.pandas_to_latex_clean", "draugr.pandas_utilities.misc_utilities", "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum", "draugr.pandas_utilities.misc_utilities.ExportMethodEnum", "draugr.pandas_utilities.misc_utilities.duplicate_columns", "draugr.pandas_utilities.multi_index_utilities", "draugr.pandas_utilities.multi_index_utilities.add_index_level", "draugr.pandas_utilities.styling", "draugr.pandas_utilities.styling.AttrEnum", "draugr.pandas_utilities.styling.ColorEnum", "draugr.pandas_utilities.styling.NDFrameExtremeEnum", "draugr.pandas_utilities.styling.color_highlight_extreme", "draugr.pandas_utilities.styling.color_negative_red", "draugr.pygame_utilities", "draugr.pygame_utilities.screen", "draugr.pygame_utilities.screen.get_screen_resolution", "draugr.python_utilities", "draugr.python_utilities.broadcasting", "draugr.python_utilities.broadcasting.BroadcastNone", "draugr.python_utilities.exclude", "draugr.python_utilities.exclude.packages", "draugr.python_utilities.exclude.packages.a", "draugr.python_utilities.exclude.packages.b", "draugr.python_utilities.exclude.packages.c", "draugr.python_utilities.exclude.worker", "draugr.python_utilities.exclude.worker.main", "draugr.python_utilities.exclude.worker.spawn", "draugr.python_utilities.function_wrappers", "draugr.python_utilities.function_wrappers.max_frequency", "draugr.python_utilities.function_wrappers.min_interval_wrapper", "draugr.python_utilities.function_wrappers.min_interval_wrapper_global", "draugr.python_utilities.function_wrappers.wrap_args", "draugr.python_utilities.generators", "draugr.python_utilities.generators.batching_generator", "draugr.python_utilities.generators.batching_generator.batch_generator", "draugr.python_utilities.generators.batching_generator.random_batches", "draugr.python_utilities.generators.batching_generator.shuffled_batches", "draugr.python_utilities.generators.batching_generator.sized_batch", "draugr.python_utilities.generators.recycling_generator", "draugr.python_utilities.generators.recycling_generator.batched_recycle", "draugr.python_utilities.generators.recycling_generator.recycle", "draugr.python_utilities.http", "draugr.python_utilities.http.HttpMethodEnum", "draugr.python_utilities.sockets", "draugr.python_utilities.sockets.find_unclaimed_port", "draugr.python_utilities.sockets.get_host_ip", "draugr.python_utilities.sockets.is_port_in_use", "draugr.python_utilities.torch_like_channel_transformation", "draugr.python_utilities.torch_like_channel_transformation.reverse_torch_vision_normalize_batch_nchw", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_batch_nhwc", "draugr.python_utilities.torch_like_channel_transformation.rgb_drop_alpha_hwc", "draugr.python_utilities.torch_like_channel_transformation.torch_vision_normalize_batch_nchw", "draugr.random_utilities", "draugr.random_utilities.seeding", "draugr.random_utilities.seeding.seed_stack", "draugr.scipy_utilities", "draugr.scipy_utilities.scipy_utilities", "draugr.scipy_utilities.scipy_utilities.read_normalised_wave", "draugr.scipy_utilities.scipy_utilities.write_normalised_wave", "draugr.scipy_utilities.signal_processing", "draugr.scipy_utilities.subsampling", "draugr.scipy_utilities.subsampling.fft_subsample", "draugr.scipy_utilities.subsampling.fir_subsample", "draugr.scipy_utilities.subsampling.mag_decimation_subsample", "draugr.scipy_utilities.subsampling.max_decimation_subsample", "draugr.scipy_utilities.subsampling.min_decimation_subsample", "draugr.stopping", "draugr.stopping.stopping_key", "draugr.stopping.stopping_key.CaptureEarlyStop", "draugr.stopping.stopping_key.add_early_stopping_key_combination", "draugr.threading_utilities", "draugr.threading_utilities.exclude", "draugr.threading_utilities.skipper", "draugr.threading_utilities.skipper.Skipper", "draugr.torch_utilities", "draugr.torch_utilities.architectures", "draugr.torch_utilities.architectures.architecture", "draugr.torch_utilities.architectures.architecture.Architecture", "draugr.torch_utilities.architectures.distributional", "draugr.torch_utilities.architectures.distributional.categorical", "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP", "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP", "draugr.torch_utilities.architectures.distributional.normal", "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP", "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP", "draugr.torch_utilities.architectures.experimental", "draugr.torch_utilities.architectures.experimental.heads", "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP", "draugr.torch_utilities.architectures.experimental.recurrent", "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase", "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP", "draugr.torch_utilities.architectures.mlp", "draugr.torch_utilities.architectures.mlp.MLP", "draugr.torch_utilities.architectures.mlp_variants", "draugr.torch_utilities.architectures.mlp_variants.concatination", "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP", "draugr.torch_utilities.architectures.mlp_variants.disjunction", "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP", "draugr.torch_utilities.architectures.mlp_variants.fourier", "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP", "draugr.torch_utilities.datasets", "draugr.torch_utilities.datasets.non_sequential_dataset", "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset", "draugr.torch_utilities.datasets.random_dataset", "draugr.torch_utilities.datasets.random_dataset.RandomDataset", "draugr.torch_utilities.datasets.supervised", "draugr.torch_utilities.datasets.supervised.categorical_dataset", "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset", "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset", "draugr.torch_utilities.datasets.supervised.vision_datasets", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder", "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder", "draugr.torch_utilities.distributions", "draugr.torch_utilities.distributions.entropy", "draugr.torch_utilities.distributions.entropy.differential_entropy_gaussian", "draugr.torch_utilities.distributions.entropy.log_shannon_entropy", "draugr.torch_utilities.distributions.entropy.normal_entropy", "draugr.torch_utilities.distributions.entropy.normal_log_density", "draugr.torch_utilities.distributions.entropy.shannon_entropy", "draugr.torch_utilities.evaluation", "draugr.torch_utilities.evaluation.classification", "draugr.torch_utilities.evaluation.classification.find_n_misclassified", "draugr.torch_utilities.evaluation.cross_validation", "draugr.torch_utilities.evaluation.cross_validation.cross_validation_generator", "draugr.torch_utilities.exporting", "draugr.torch_utilities.exporting.summary", "draugr.torch_utilities.exporting.summary.to_latex_table", "draugr.torch_utilities.generators", "draugr.torch_utilities.generators.batching", "draugr.torch_utilities.generators.batching.LimitedBatchResampler", "draugr.torch_utilities.generators.to_tensor_generator", "draugr.torch_utilities.images", "draugr.torch_utilities.images.channel_transform", "draugr.torch_utilities.images.channel_transform.float_chw_to_hwc_uint_tensor", "draugr.torch_utilities.images.channel_transform.float_nchw_to_nhwc_uint_batch", "draugr.torch_utilities.images.channel_transform.uint_hwc_to_chw_float_tensor", "draugr.torch_utilities.images.channel_transform.uint_nhwc_to_nchw_float_batch", "draugr.torch_utilities.images.conversion", "draugr.torch_utilities.images.conversion.quick_to_pil_image", "draugr.torch_utilities.opencv", "draugr.torch_utilities.opencv.torch_conversion", "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage", "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor", "draugr.torch_utilities.operations", "draugr.torch_utilities.operations.boxes_2d", "draugr.torch_utilities.operations.boxes_2d.minmax_to_xywh_torch", "draugr.torch_utilities.operations.enums", "draugr.torch_utilities.operations.enums.ReductionMethodEnum", "draugr.torch_utilities.operations.sizes", "draugr.torch_utilities.operations.sizes.conv2d", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_hw_shape", "draugr.torch_utilities.operations.sizes.conv2d.conv2d_padding_size", "draugr.torch_utilities.operations.sizes.max_pool2d", "draugr.torch_utilities.operations.sizes.max_pool2d.max_pool2d_hw_shape", "draugr.torch_utilities.operations.sizes.pad2d", "draugr.torch_utilities.operations.sizes.pad2d.pad2d_hw_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_output_shape", "draugr.torch_utilities.operations.sizes.transp_conv2d.transp_conv2d_padding_sizes", "draugr.torch_utilities.operations.torch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip", "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor", "draugr.torch_utilities.optimisation", "draugr.torch_utilities.optimisation.debugging", "draugr.torch_utilities.optimisation.debugging.gradients", "draugr.torch_utilities.optimisation.debugging.gradients.checking", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient", "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient.loss_grad_check", "draugr.torch_utilities.optimisation.debugging.gradients.flow", "draugr.torch_utilities.optimisation.debugging.gradients.flow.plot_grad_flow", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.print_grad_trace", "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace.register_bad_grad_hooks", "draugr.torch_utilities.optimisation.debugging.gradients.guided", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU", "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel", "draugr.torch_utilities.optimisation.debugging.layer_fetching", "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter", "draugr.torch_utilities.optimisation.debugging.opt_verification", "draugr.torch_utilities.optimisation.debugging.opt_verification.overfit_single_batch", "draugr.torch_utilities.optimisation.parameters", "draugr.torch_utilities.optimisation.parameters.freeze_parameters", "draugr.torch_utilities.optimisation.parameters.frozen_parameters", "draugr.torch_utilities.optimisation.scheduling", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities", "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities.set_lr", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler", "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR", "draugr.torch_utilities.optimisation.scheduling.schedulers", "draugr.torch_utilities.optimisation.scheduling.schedulers.warmup_lr_scheduler", "draugr.torch_utilities.optimisation.stopping", "draugr.torch_utilities.optimisation.stopping.overfitting", "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector", "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector", "draugr.torch_utilities.optimisation.updates", "draugr.torch_utilities.optimisation.updates.copying", "draugr.torch_utilities.optimisation.updates.copying.copy_parameters", "draugr.torch_utilities.optimisation.updates.copying.copy_state", "draugr.torch_utilities.optimisation.updates.soft_update", "draugr.torch_utilities.persistence", "draugr.torch_utilities.persistence.checkpoint", "draugr.torch_utilities.persistence.checkpoint.load_checkpoint", "draugr.torch_utilities.persistence.checkpoint.save_checkpoint", "draugr.torch_utilities.persistence.config", "draugr.torch_utilities.persistence.config.ensure_directory_exist", "draugr.torch_utilities.persistence.config.save_config", "draugr.torch_utilities.persistence.model", "draugr.torch_utilities.persistence.model.convert_saved_model_to_cpu", "draugr.torch_utilities.persistence.model.load_latest_model", "draugr.torch_utilities.persistence.model.load_model", "draugr.torch_utilities.persistence.model.save_model", "draugr.torch_utilities.persistence.model.save_model_and_configuration", "draugr.torch_utilities.persistence.naming", "draugr.torch_utilities.persistence.naming.get_model_hash", "draugr.torch_utilities.persistence.parameters", "draugr.torch_utilities.persistence.parameters.load_latest_model_parameters", "draugr.torch_utilities.persistence.parameters.load_model_parameters", "draugr.torch_utilities.persistence.parameters.save_model_parameters", "draugr.torch_utilities.persistence.parameters.save_parameters_and_configuration", "draugr.torch_utilities.sessions", "draugr.torch_utilities.sessions.cache_sessions", "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession", "draugr.torch_utilities.sessions.determinism_sessions", "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession", "draugr.torch_utilities.sessions.device_sessions", "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession", "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession", "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession", "draugr.torch_utilities.sessions.jit_sessions", "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession", "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession", "draugr.torch_utilities.sessions.model_sessions", "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession", "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession", "draugr.torch_utilities.sessions.model_sessions.TorchTrainingSession", "draugr.torch_utilities.sessions.type_sessions", "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession", "draugr.torch_utilities.system", "draugr.torch_utilities.system.constants", "draugr.torch_utilities.system.constants.torch_pi", "draugr.torch_utilities.system.data_type", "draugr.torch_utilities.system.data_type.global_torch_dtype", "draugr.torch_utilities.system.data_type.set_global_torch_dtype", "draugr.torch_utilities.system.device", "draugr.torch_utilities.system.device.TorchDeviceEnum", "draugr.torch_utilities.system.device.auto_select_available_cuda_device", "draugr.torch_utilities.system.device.get_gpu_usage_mb", "draugr.torch_utilities.system.device.global_torch_device", "draugr.torch_utilities.system.device.select_cuda_device", "draugr.torch_utilities.system.device.set_global_torch_device", "draugr.torch_utilities.system.device.torch_clean_up", "draugr.torch_utilities.system.info", "draugr.torch_utilities.system.info.cuda_info", "draugr.torch_utilities.system.info.system_info", "draugr.torch_utilities.system.loading", "draugr.torch_utilities.system.loading.default_worker_init_fn", "draugr.torch_utilities.system.loading.global_pin_memory", "draugr.torch_utilities.system.seeding", "draugr.torch_utilities.system.seeding.torch_seed", "draugr.torch_utilities.tensors", "draugr.torch_utilities.tensors.dimension_order", "draugr.torch_utilities.tensors.dimension_order.chw_to_hwc_tensor", "draugr.torch_utilities.tensors.dimension_order.hwc_to_chw_tensor", "draugr.torch_utilities.tensors.dimension_order.nchw_to_nhwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nhwc_to_nchw_tensor", "draugr.torch_utilities.tensors.dimension_order.ntchw_to_nthwc_tensor", "draugr.torch_utilities.tensors.dimension_order.nthwc_to_ntchw_tensor", "draugr.torch_utilities.tensors.info", "draugr.torch_utilities.tensors.info.size_of_tensor", "draugr.torch_utilities.tensors.mixins", "draugr.torch_utilities.tensors.mixins.TensoriseMixin", "draugr.torch_utilities.tensors.normalise", "draugr.torch_utilities.tensors.normalise.standardise", "draugr.torch_utilities.tensors.reshaping", "draugr.torch_utilities.tensors.reshaping.flatten_keep_batch", "draugr.torch_utilities.tensors.reshaping.flatten_tn_dim", "draugr.torch_utilities.tensors.reshaping.safe_concat", "draugr.torch_utilities.tensors.tensor_container", "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple", "draugr.torch_utilities.tensors.to_scalar", "draugr.torch_utilities.tensors.to_tensor", "draugr.torch_utilities.tensors.types", "draugr.torch_utilities.tensors.types.numpy_to_torch_dtype", "draugr.torch_utilities.tensors.types.torch_to_numpy_dtype", "draugr.torch_utilities.writers", "draugr.torch_utilities.writers.mixins", "draugr.torch_utilities.writers.mixins.graph_writer_mixin", "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin", "draugr.torch_utilities.writers.tensorboard", "draugr.torch_utilities.writers.tensorboard.launcher", "draugr.torch_utilities.writers.tensorboard.launcher.launch_tensorboard", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.PTW", "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter", "draugr.torch_utilities.writers.torch_module_writer", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin", "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin", "draugr.torch_utilities.writers.torch_module_writer.module_writer_hook", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters", "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters.weight_bias_histograms", "draugr.torch_utilities.writers.visdom", "draugr.torch_utilities.writers.visdom.episode_visual", "draugr.torch_utilities.writers.visdom.episode_visual.update_visualiser", "draugr.torch_utilities.writers.visdom.plotting", "draugr.torch_utilities.writers.visdom.plotting.plot_episode_stats", "draugr.torch_utilities.writers.visdom.visdom_writer", "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter", "draugr.tqdm_utilities", "draugr.tqdm_utilities.pooled_progress_bar", "draugr.tqdm_utilities.pooled_progress_bar.parallel_imap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_map", "draugr.tqdm_utilities.pooled_progress_bar.parallel_uimap", "draugr.tqdm_utilities.pooled_progress_bar.parallel_umap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_imap", "draugr.tqdm_utilities.pooled_progress_bar.sequential_map", "draugr.tqdm_utilities.progress_bar", "draugr.visualisation", "draugr.visualisation.ggplot_utilities", "draugr.visualisation.matplotlib_utilities", "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment", "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment", "draugr.visualisation.matplotlib_utilities.annotate_point", "draugr.visualisation.matplotlib_utilities.decolorise_plot", "draugr.visualisation.matplotlib_utilities.denormalise_minusoneone", "draugr.visualisation.matplotlib_utilities.latex_clean_label", "draugr.visualisation.matplotlib_utilities.make_errorbar_legend", "draugr.visualisation.matplotlib_utilities.matplotlib_bounding_box", "draugr.visualisation.matplotlib_utilities.remove_decoration", "draugr.visualisation.matplotlib_utilities.save_embed_fig", "draugr.visualisation.matplotlib_utilities.use_monochrome_style", "draugr.visualisation.pillow_utilities", "draugr.visualisation.pillow_utilities.byte_array_to_pil_image", "draugr.visualisation.pillow_utilities.np_array_to_pil_img", "draugr.visualisation.pillow_utilities.pil_image_to_byte_array", "draugr.visualisation.pillow_utilities.pil_img_to_np_array", "draugr.visualisation.pillow_utilities.pil_merge_images", "draugr.visualisation.seaborn_utilities", "draugr.visualisation.seaborn_utilities.despine_all", "draugr.visualisation.seaborn_utilities.exponential_moving_average", "draugr.visualisation.seaborn_utilities.set_y_log_scale", "draugr.writers", "draugr.writers.csv_writer", "draugr.writers.csv_writer.CSVWriter", "draugr.writers.databases", "draugr.writers.databases.hdf_writer", "draugr.writers.databases.hdf_writer.HdfWriter", "draugr.writers.databases.sqlite_writer", "draugr.writers.databases.sqlite_writer.SqliteWriter", "draugr.writers.log_writer", "draugr.writers.log_writer.LogWriter", "draugr.writers.mixins", "draugr.writers.mixins.audio_writer_mixin", "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin", "draugr.writers.mixins.bar_writer_mixin", "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin", "draugr.writers.mixins.embed_writer_mixin", "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin", "draugr.writers.mixins.figure_writer_mixin", "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin", "draugr.writers.mixins.histogram_writer_mixin", "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin", "draugr.writers.mixins.image_writer_mixin", "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin", "draugr.writers.mixins.instantiation_writer_mixin", "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin", "draugr.writers.mixins.line_writer_mixin", "draugr.writers.mixins.line_writer_mixin.LineWriterMixin", "draugr.writers.mixins.mesh_writer_mixin", "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin", "draugr.writers.mixins.precision_recall_writer_mixin", "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin", "draugr.writers.mixins.scalar_writer_mixin", "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin", "draugr.writers.mixins.spectrogram_writer_mixin", "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin", "draugr.writers.mixins.video_writer_mixin", "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum", "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin", "draugr.writers.mock_writer", "draugr.writers.mock_writer.MockWriter", "draugr.writers.standard_tags", "draugr.writers.standard_tags.TestingCurves", "draugr.writers.standard_tags.TestingScalars", "draugr.writers.standard_tags.TestingTables", "draugr.writers.standard_tags.TrainingCurves", "draugr.writers.standard_tags.TrainingScalars", "draugr.writers.standard_tags.TrainingTables", "draugr.writers.standard_tags.should_plot_y_log_scale", "draugr.writers.standard_tags.should_smooth_series", "draugr.writers.terminal", "draugr.writers.terminal.console_writer", "draugr.writers.terminal.console_writer.ConsoleWriter", "draugr.writers.terminal.terminal_image_renderer", "draugr.writers.terminal.terminal_image_renderer.entry_point", "draugr.writers.terminal.terminal_image_renderer.get_image", "draugr.writers.terminal.terminal_image_renderer.get_pixel", "draugr.writers.terminal.terminal_image_renderer.render_file", "draugr.writers.terminal.terminal_image_renderer.render_image", "draugr.writers.terminal.terminal_image_renderer.terminalise_image", "draugr.writers.terminal.terminal_plot", "draugr.writers.terminal.terminal_plot_writer", "draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter", "draugr.writers.terminal.terminal_plotter", "draugr.writers.terminal.terminal_utilities", "draugr.writers.terminal.terminal_utilities.scale", "draugr.writers.writer", "draugr.writers.writer.Writer", "draugr.writers.writer.global_writer", "draugr.writers.writer.set_global_writer", "draugr.writers.writer_utilities", "draugr.writers.writer_utilities.metrics", "Getting Started", "Draugr Documentation"], "terms": {"creat": [0, 2, 3, 10, 11, 16, 19, 20, 22, 24, 27, 29, 30, 32, 34, 35, 38, 42, 46, 47, 52, 63, 65, 69, 76, 79, 85, 86, 91, 92, 95, 100, 105, 106, 108, 110, 116, 118, 120, 122, 125, 128, 130, 135, 138, 142, 143, 144, 147, 151, 163, 179, 180, 190, 193, 197, 200, 221, 227, 228, 230, 233, 235, 257, 273, 278, 279, 280, 282, 283, 285, 287, 294, 310, 311, 313, 314, 316, 324, 337, 338, 340, 344, 349, 353, 355, 361, 362, 364, 365, 375, 381, 386, 391, 395, 400, 401, 403, 404, 407, 408, 444, 448, 452, 453, 455, 457, 458, 460, 462, 463, 466, 467, 473, 474, 476, 479, 481, 484, 485, 486, 491, 497, 498, 500, 502, 503, 506, 508, 510, 513, 514, 519, 520, 521, 522, 523, 525, 527, 530, 533, 535, 537, 540, 541, 545, 557, 560, 569, 571, 577, 579, 581, 585, 588, 593, 595, 596, 598, 601, 612, 615, 617, 618, 625, 629, 631, 639, 644, 649, 652, 653, 655, 656, 663, 665, 673, 675, 676, 688, 694, 698, 699, 701, 702, 704, 706, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 731, 733, 736, 747, 748, 758, 760, 763, 767], "27": [0, 19, 30, 32, 355, 408, 537, 649, 698, 699, 706, 736, 748, 758, 763, 767], "04": [0, 19, 29, 30, 32, 46, 47, 79, 147, 180, 227, 311, 395, 557, 649, 675, 698, 699, 706, 736, 748, 758, 763, 767], "2019": [0, 19, 20, 24, 27, 30, 32, 86, 193, 257, 381, 386, 452, 453, 455, 466, 467, 484, 485, 486, 541, 596, 598, 601, 615, 644, 649, 653, 698, 699, 706, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 731, 733, 736, 748, 758, 763, 767], "author": [0, 19, 30, 32, 442, 649, 698, 699, 706, 736, 748, 758, 763, 767], "cnheider": [0, 19, 30, 32, 649, 698, 699, 706, 736, 748, 758, 763, 767], "function": [0, 3, 13, 33, 38, 40, 42, 44, 47, 49, 54, 56, 58, 60, 65, 72, 86, 93, 95, 97, 100, 105, 106, 108, 110, 116, 118, 120, 122, 125, 128, 129, 130, 135, 138, 144, 147, 152, 155, 159, 163, 169, 172, 175, 180, 185, 190, 193, 230, 233, 234, 236, 257, 261, 263, 267, 268, 269, 271, 274, 280, 294, 305, 311, 314, 316, 324, 326, 334, 338, 340, 344, 349, 353, 355, 359, 362, 365, 368, 372, 375, 377, 378, 381, 386, 391, 395, 401, 404, 408, 415, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 467, 474, 475, 476, 477, 479, 486, 491, 498, 503, 506, 508, 510, 523, 525, 527, 531, 535, 537, 541, 545, 549, 550, 552, 557, 560, 563, 569, 571, 596, 598, 601, 609, 612, 615, 618, 625, 626, 629, 631, 639, 647, 656, 659, 661, 666, 667, 668, 669, 670, 671, 672, 676, 688, 690, 692, 694, 708, 738, 750, 761, 763, 767], "modul": [0, 2, 10, 15, 18, 29, 34, 37, 46, 52, 64, 80, 85, 91, 92, 106, 124, 142, 143, 151, 179, 181, 182, 184, 197, 227, 235, 260, 266, 273, 278, 279, 282, 287, 288, 289, 291, 312, 313, 337, 361, 364, 367, 380, 400, 403, 414, 418, 422, 423, 425, 426, 428, 429, 431, 432, 433, 434, 435, 437, 439, 440, 441, 443, 444, 446, 447, 449, 450, 451, 452, 457, 462, 466, 473, 475, 478, 480, 481, 485, 493, 497, 502, 513, 519, 520, 521, 522, 524, 526, 534, 540, 547, 551, 553, 554, 556, 565, 566, 567, 568, 570, 572, 573, 574, 575, 576, 582, 583, 584, 589, 590, 591, 595, 617, 626, 642, 643, 645, 646, 651, 652, 654, 657, 658, 665, 674, 698, 701, 708, 747, 770], "dist": 1, "ani": [1, 48, 62, 82, 83, 84, 103, 106, 174, 205, 229, 259, 354, 376, 382, 385, 387, 388, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 529, 531, 534, 651, 667, 668, 669, 670, 671, 672, 679, 700, 714, 753], "bool": [1, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 41, 55, 57, 74, 88, 90, 98, 102, 103, 104, 106, 156, 181, 182, 191, 262, 270, 272, 286, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 317, 319, 376, 382, 385, 394, 411, 412, 413, 416, 417, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 487, 488, 489, 490, 515, 517, 526, 531, 538, 549, 550, 565, 566, 567, 568, 572, 573, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 599, 605, 614, 651, 657, 664, 680, 686, 700, 703, 705, 707, 737, 745, 746, 749, 759, 764], "sourc": [1, 4, 5, 6, 7, 8, 9, 12, 14, 17, 21, 23, 25, 26, 28, 31, 33, 36, 39, 41, 43, 45, 48, 50, 51, 55, 57, 59, 61, 62, 66, 67, 68, 70, 71, 73, 74, 76, 78, 82, 83, 84, 87, 88, 89, 90, 94, 96, 98, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 117, 119, 121, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 145, 146, 148, 149, 150, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 231, 232, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 264, 265, 268, 270, 272, 275, 276, 277, 281, 284, 286, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 312, 315, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 352, 354, 356, 357, 358, 359, 360, 363, 366, 369, 370, 371, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 390, 392, 393, 394, 396, 397, 398, 399, 402, 405, 406, 409, 410, 411, 412, 413, 416, 417, 421, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 456, 459, 461, 464, 465, 468, 469, 470, 471, 472, 475, 477, 480, 483, 487, 488, 489, 490, 492, 495, 496, 499, 501, 504, 505, 507, 509, 511, 512, 515, 516, 517, 518, 524, 526, 528, 529, 531, 532, 534, 535, 536, 538, 539, 542, 544, 546, 549, 550, 553, 554, 558, 559, 561, 562, 564, 565, 567, 568, 570, 572, 574, 575, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 597, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 616, 619, 620, 621, 622, 623, 624, 626, 628, 630, 632, 633, 634, 636, 640, 641, 645, 648, 651, 654, 657, 660, 662, 664, 667, 668, 669, 670, 671, 672, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 695, 696, 697, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 735, 737, 739, 740, 741, 742, 743, 744, 745, 746, 749, 751, 752, 753, 754, 755, 756, 759, 762, 764, 765, 766, 768], "return": [1, 4, 5, 6, 7, 9, 14, 36, 39, 41, 43, 48, 50, 51, 66, 67, 68, 73, 74, 76, 78, 83, 87, 88, 89, 90, 94, 96, 98, 102, 103, 104, 106, 109, 117, 119, 129, 131, 139, 140, 145, 146, 148, 149, 150, 154, 156, 157, 158, 162, 164, 165, 166, 167, 168, 171, 174, 177, 178, 181, 183, 186, 187, 188, 191, 192, 194, 195, 196, 205, 229, 231, 232, 237, 248, 259, 265, 268, 272, 281, 286, 312, 315, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 339, 341, 342, 343, 345, 346, 347, 348, 354, 363, 366, 373, 376, 377, 378, 379, 382, 385, 388, 392, 393, 394, 396, 397, 398, 399, 417, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 459, 461, 464, 465, 468, 469, 470, 471, 472, 480, 487, 488, 489, 490, 492, 499, 504, 505, 507, 509, 524, 529, 531, 532, 534, 536, 538, 539, 544, 546, 558, 561, 562, 564, 565, 566, 567, 568, 572, 573, 574, 575, 597, 599, 603, 604, 605, 606, 607, 610, 611, 614, 619, 620, 621, 622, 623, 624, 626, 630, 632, 633, 634, 636, 648, 651, 660, 662, 664, 667, 669, 671, 679, 689, 690, 691, 692, 696, 700, 703, 705, 707, 737, 745, 746, 749, 751, 756, 759, 764, 765, 766, 768], "true": [1, 21, 23, 25, 26, 28, 31, 33, 36, 41, 55, 57, 62, 73, 76, 83, 88, 90, 102, 106, 191, 298, 299, 308, 309, 382, 385, 411, 412, 413, 416, 417, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 487, 488, 489, 490, 526, 531, 539, 549, 550, 565, 566, 567, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 614, 651, 657, 664, 686, 700, 703, 705, 707, 737, 749, 759, 764], "given": [1, 76, 106, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 531], "distribut": [1, 18, 422, 651, 712], "an": [1, 5, 76, 94, 98, 106, 153, 160, 161, 170, 173, 176, 181, 202, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 258, 264, 275, 365, 387, 388, 390, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 517, 531, 535, 544, 602, 645, 651, 654, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 735, 759], "edit": 1, "instal": [1, 37, 298, 769], "03": [2, 3, 29, 79, 85, 100, 116, 118, 143, 144, 151, 163, 180, 190, 230, 233, 278, 279, 280, 282, 283, 285, 287, 294, 391, 457, 458, 460, 481, 498, 545, 577, 618, 702, 704], "05": [2, 3, 227, 313, 314, 324, 337, 338, 340, 344, 353, 355, 365, 375, 524, 581, 588, 675], "2021": [2, 3, 16, 22, 34, 35, 46, 47, 110, 116, 118, 122, 125, 227, 228, 230, 311, 313, 314, 324, 337, 338, 340, 344, 349, 353, 355, 365, 375, 403, 404, 407, 408, 479, 530, 557, 618, 639, 675, 676, 694, 702, 704], "class": [3, 4, 5, 11, 12, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 94, 98, 100, 101, 102, 105, 106, 152, 153, 159, 160, 161, 169, 170, 172, 173, 175, 176, 181, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 274, 275, 283, 284, 285, 286, 294, 295, 316, 317, 349, 350, 351, 355, 356, 357, 358, 365, 366, 389, 390, 406, 415, 416, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 482, 483, 494, 495, 496, 500, 501, 514, 515, 516, 517, 518, 530, 531, 532, 533, 534, 543, 544, 548, 549, 550, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 601, 602, 627, 628, 635, 636, 644, 645, 649, 651, 653, 654, 663, 664, 676, 677, 678, 699, 700, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 758, 759, 763, 764], "valu": [4, 5, 12, 70, 71, 73, 76, 78, 101, 106, 131, 136, 137, 153, 160, 161, 170, 173, 176, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 258, 264, 275, 295, 339, 350, 351, 354, 356, 357, 358, 360, 390, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 501, 526, 531, 534, 535, 538, 602, 651, 664, 677, 678, 698, 700, 703, 705, 707, 712, 718, 720, 724, 730, 732, 734, 737, 739, 740, 741, 742, 743, 744, 749, 759, 764], "base": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 70, 71, 73, 76, 78, 82, 83, 84, 101, 102, 106, 153, 160, 161, 170, 173, 176, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 264, 275, 284, 286, 295, 317, 350, 351, 356, 357, 358, 366, 390, 416, 421, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 450, 451, 454, 456, 459, 461, 464, 465, 483, 495, 496, 501, 515, 516, 517, 518, 531, 532, 534, 544, 549, 550, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 602, 628, 636, 645, 651, 654, 664, 677, 678, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 735, 737, 739, 740, 741, 742, 743, 744, 749, 759, 764], "enum": [4, 5, 101, 153, 160, 161, 170, 173, 176, 199, 258, 264, 275, 295, 350, 351, 356, 357, 358, 390, 602, 651, 677, 678, 720, 734, 739, 740, 741, 742, 743, 744, 745, 746, 759], "s": [4, 21, 23, 25, 26, 28, 31, 33, 76, 106, 359, 366, 402, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531, 534, 616, 626, 636, 682, 687], "5": [4, 106, 181, 182, 191, 244, 249, 298, 517, 526, 687], "point": [4, 37, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 720, 762], "facial": 4, "landmark": 4, "detector": 4, "__init__": [4, 5, 12, 17, 21, 23, 25, 26, 28, 31, 33, 36, 70, 71, 73, 76, 78, 82, 83, 84, 101, 102, 106, 153, 160, 161, 170, 173, 176, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 264, 275, 284, 286, 295, 317, 350, 351, 356, 357, 358, 366, 390, 416, 421, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 456, 459, 461, 464, 465, 483, 495, 496, 501, 515, 516, 517, 518, 531, 532, 534, 544, 549, 550, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 602, 628, 636, 645, 651, 654, 664, 677, 678, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 735, 737, 739, 740, 741, 742, 743, 744, 749, 759, 764], "method": [4, 5, 17, 21, 23, 25, 26, 28, 31, 33, 36, 70, 71, 73, 76, 78, 82, 83, 84, 102, 106, 154, 162, 174, 178, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 286, 317, 351, 358, 366, 416, 421, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 456, 459, 461, 464, 465, 483, 495, 496, 515, 516, 517, 518, 531, 532, 534, 544, 549, 550, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594, 628, 636, 645, 651, 654, 664, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 735, 737, 749, 759, 764], "attribut": [4, 5, 21, 23, 25, 26, 28, 31, 33, 73, 76, 78, 83, 101, 102, 106, 153, 160, 161, 170, 173, 176, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 258, 264, 275, 284, 286, 295, 350, 351, 356, 357, 390, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 459, 461, 464, 465, 501, 531, 602, 628, 651, 677, 678, 734, 739, 740, 741, 742, 743, 744], "static": [4, 5, 21, 23, 25, 26, 28, 31, 33, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449, 531, 534, 700, 707], "slice": [4, 5, 106, 454], "seq": [4, 5, 231, 232], "sequenc": [4, 5, 6, 7, 36, 98, 102, 103, 106, 107, 129, 139, 140, 141, 148, 181, 191, 227, 237, 383, 384, 387, 396, 397, 398, 399, 425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449, 454, 456, 515, 651, 679, 714, 724, 732, 762], "ind": [4, 5], "union": [4, 5, 14, 55, 57, 67, 68, 94, 96, 98, 111, 112, 113, 114, 115, 117, 119, 123, 145, 146, 149, 181, 191, 195, 196, 229, 231, 232, 251, 272, 277, 286, 345, 348, 359, 396, 397, 398, 399, 405, 406, 411, 412, 413, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 504, 505, 507, 509, 511, 512, 572, 573, 597, 605, 614, 651, 664, 681, 684, 686, 692, 696, 700, 703, 705, 707, 710, 720, 726, 730, 735, 737, 749, 759, 764], "tupl": [4, 5, 8, 21, 23, 25, 26, 28, 76, 106, 117, 119, 121, 145, 146, 150, 182, 191, 192, 231, 232, 248, 251, 256, 259, 405, 409, 410, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 477, 504, 505, 507, 509, 511, 512, 531, 572, 573, 692, 700, 753, 755], "paramet": [4, 5, 6, 7, 9, 14, 21, 23, 25, 26, 28, 31, 33, 36, 41, 48, 55, 57, 59, 61, 66, 67, 68, 70, 71, 73, 74, 76, 78, 83, 84, 87, 88, 89, 90, 94, 96, 102, 103, 104, 106, 109, 117, 119, 129, 139, 140, 145, 146, 148, 154, 156, 157, 158, 162, 164, 165, 166, 167, 168, 171, 174, 177, 178, 183, 186, 187, 188, 195, 196, 229, 231, 232, 234, 237, 259, 262, 265, 270, 272, 276, 277, 296, 297, 300, 301, 302, 303, 306, 307, 315, 318, 325, 339, 341, 342, 343, 345, 346, 348, 354, 373, 379, 382, 383, 384, 385, 388, 394, 396, 397, 398, 399, 417, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 468, 469, 470, 471, 472, 477, 480, 487, 488, 489, 490, 492, 499, 504, 505, 507, 509, 524, 526, 529, 531, 532, 534, 542, 544, 546, 549, 550, 558, 559, 561, 562, 564, 565, 566, 567, 568, 597, 599, 603, 605, 606, 607, 619, 620, 621, 622, 623, 624, 626, 630, 632, 633, 634, 636, 645, 648, 651, 654, 657, 660, 662, 664, 679, 687, 689, 695, 696, 697, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 724, 726, 730, 732, 735, 737, 745, 746, 749, 759, 764, 768], "enumer": [5, 153, 160, 161, 170, 173, 176, 202, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 258, 264, 275, 390, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 602, 651, 720, 759], "coordin": [6, 7, 681], "float": [6, 7, 8, 14, 21, 23, 25, 26, 28, 33, 55, 57, 66, 67, 68, 94, 96, 98, 102, 104, 106, 111, 112, 113, 114, 115, 117, 119, 129, 145, 146, 164, 166, 167, 168, 181, 182, 191, 195, 196, 231, 232, 241, 243, 244, 245, 248, 249, 251, 319, 345, 348, 359, 396, 397, 398, 399, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 465, 517, 524, 526, 630, 651, 664, 681, 684, 686, 696, 700, 703, 705, 707, 730, 735, 737, 749, 759, 762, 764], "rect": [8, 14, 183], "take": [8, 106, 425, 440, 464, 465], "bound": [8, 143, 149, 150, 181, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "predict": [8, 106, 451, 477, 535, 651], "convert": [8, 48, 106, 158, 171, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 690], "format": [8, 106, 158, 171, 181, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534], "x": [8, 21, 23, 25, 26, 28, 31, 33, 82, 106, 111, 112, 113, 114, 115, 121, 131, 132, 136, 137, 259, 339, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 471, 531, 535, 630, 679, 684, 687, 690, 762], "y": [8, 21, 23, 25, 26, 28, 31, 33, 106, 132, 531, 679, 684], "w": [8, 106, 117, 119, 150, 509, 531, 651, 684, 692], "h": [8, 117, 119, 150, 186, 187, 188, 509, 651, 692], "shape": [9, 106, 149, 181, 191, 259, 531, 651, 692], "dtype": [9, 106, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 531, 594, 599, 600, 640, 641], "str": [9, 21, 23, 28, 31, 33, 36, 41, 55, 62, 94, 96, 98, 104, 106, 181, 182, 229, 231, 265, 268, 272, 277, 286, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 312, 346, 347, 348, 352, 354, 359, 393, 405, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 459, 461, 480, 492, 565, 566, 567, 570, 572, 573, 574, 597, 605, 610, 611, 614, 648, 651, 654, 657, 664, 682, 684, 686, 691, 692, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 724, 726, 730, 732, 735, 737, 749, 759, 764], "int": [9, 14, 21, 23, 25, 26, 28, 31, 33, 55, 57, 67, 68, 70, 71, 83, 102, 106, 111, 112, 113, 114, 115, 117, 119, 121, 123, 126, 129, 139, 145, 146, 157, 171, 181, 182, 191, 194, 195, 196, 229, 231, 232, 237, 250, 251, 262, 268, 270, 272, 277, 315, 318, 319, 321, 322, 325, 339, 345, 347, 348, 354, 359, 376, 377, 378, 382, 383, 384, 385, 387, 392, 394, 396, 397, 398, 399, 402, 405, 406, 409, 410, 411, 412, 413, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 456, 475, 477, 483, 504, 505, 507, 509, 511, 512, 516, 531, 549, 550, 603, 606, 614, 616, 626, 634, 648, 651, 654, 657, 664, 681, 684, 686, 692, 696, 700, 703, 705, 707, 712, 714, 716, 718, 724, 730, 732, 735, 737, 749, 759, 762, 764], "30": [10, 11, 14, 106, 232, 310, 651, 735], "01": [10, 11, 16, 22, 34, 35, 42, 61, 108, 110, 122, 125, 142, 179, 197, 200, 221, 228, 235, 257, 273, 311, 349, 364, 408, 444, 457, 458, 460, 545, 760], "2022": [10, 11, 108, 200, 221, 279, 280, 287, 760], "todo": [12, 33, 377, 378, 535, 536, 651], "implement": [12, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 651, 708], "pair": [12, 76], "wise": [12, 106], "imag": [14, 23, 48, 94, 98, 106, 156, 157, 158, 164, 165, 166, 167, 168, 171, 181, 182, 191, 201, 237, 248, 251, 422, 464, 465, 515, 516, 517, 518, 651, 689, 690, 691, 692, 693, 710, 720, 726, 735], "grai": [14, 158, 178], "predictor": 14, "desired_left_ey": 14, "0": [14, 21, 23, 25, 26, 28, 31, 33, 66, 68, 73, 94, 96, 98, 102, 104, 106, 129, 131, 132, 149, 150, 171, 177, 181, 182, 191, 207, 229, 231, 232, 244, 245, 249, 251, 268, 272, 345, 348, 354, 373, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 465, 483, 504, 507, 511, 512, 517, 526, 531, 535, 544, 634, 651, 657, 687, 696, 707, 762], "35": 14, "desired_face_s": 14, "none": [14, 21, 23, 25, 26, 28, 39, 43, 55, 57, 61, 66, 67, 73, 76, 83, 94, 96, 98, 106, 117, 119, 121, 123, 132, 181, 182, 191, 196, 229, 262, 268, 270, 272, 276, 277, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 320, 348, 354, 402, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 464, 465, 475, 507, 516, 524, 526, 531, 534, 538, 539, 544, 549, 550, 561, 562, 564, 567, 568, 572, 573, 574, 575, 582, 583, 584, 599, 600, 605, 607, 608, 613, 645, 651, 654, 657, 664, 679, 680, 683, 685, 686, 687, 692, 695, 697, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 724, 726, 730, 732, 735, 737, 749, 751, 759, 764, 766], "pad": [14, 504, 507, 511, 516], "debug": 14, "fals": [14, 17, 21, 28, 33, 36, 73, 98, 103, 104, 106, 181, 182, 262, 270, 272, 296, 297, 299, 300, 301, 302, 303, 317, 319, 376, 411, 412, 413, 416, 417, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517, 531, 550, 567, 568, 587, 599, 605, 651, 664, 680, 686, 692, 700, 703, 705, 707, 737, 749, 759, 764], "For": [15, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454], "displai": [15, 544, 693], "blit": 15, "plot": [15, 18, 26, 31, 64, 526, 535], "screen": 15, "util": [15, 18, 80, 85, 91, 92, 124, 142, 380, 400, 403, 414, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 475, 595, 665, 674, 690, 692], "draw": [15, 18, 25, 36], "real": [15, 18, 26, 106, 272], "time": [15, 18, 26, 28, 33, 106, 272, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 507, 534, 535, 565, 566, 599, 605, 651], "data": [15, 18, 21, 23, 25, 31, 36, 78, 94, 102, 106, 464, 465, 475, 477, 515, 516, 535, 651, 710, 720, 726, 735], "stream": [15, 18, 229, 698], "figur": [15, 18, 21, 23, 25, 26, 28, 31, 33, 651, 716], "also": [15, 18, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "some": [15, 18, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535, 614], "gener": [15, 18, 66, 67, 68, 106, 359, 464, 465, 535, 616, 667, 669, 671], "classif": [15, 18], "metric": [15, 18, 651, 698], "25": [16, 34, 35, 55, 57, 100, 129, 143, 151, 163, 228, 337, 338, 340, 344, 353, 498], "verbos": [17, 36, 98, 103, 104, 262, 270, 317, 319, 376, 416, 417, 550, 567, 599, 605, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "object": [17, 50, 71, 73, 76, 78, 82, 83, 102, 106, 181, 182, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 284, 421, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 495, 496, 515, 516, 517, 518, 531, 532, 534, 544, 626, 628, 636], "matplotlib": [18, 26], "us": [18, 82, 83, 106, 158, 171, 339, 365, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 464, 465, 477, 526, 531, 534, 535, 576], "multi": [18, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 442, 443, 446, 447, 449, 451], "seri": [18, 286, 359], "scroll": 18, "discret": [18, 459], "waterfal": 18, "fft": [18, 31, 33], "evalu": [18, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 578, 589, 591, 594], "overview": 18, "22": [20, 22, 27, 106], "11": [20, 27, 91, 92, 106, 400, 401, 491, 581, 588, 598, 601], "window_length": [21, 28], "option": [21, 25, 26, 28, 55, 57, 61, 67, 96, 106, 117, 119, 123, 132, 181, 182, 191, 196, 229, 234, 268, 272, 298, 306, 307, 308, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 507, 515, 516, 517, 534, 538, 549, 550, 565, 566, 568, 574, 575, 582, 583, 584, 599, 605, 651, 664, 683, 686, 692, 695, 697, 700, 703, 705, 707, 714, 724, 730, 732, 737, 749, 759, 764, 765], "titl": [21, 23, 28, 31, 33, 36, 272], "data_label": [21, 28], "magnitud": [21, 28, 651, 724, 732], "revers": [21, 28, 33, 106], "overwrit": [21, 28], "render": [21, 23, 25, 26, 28, 31, 33, 36], "bin": [21, 651], "rang": 21, "densiti": 21, "weight": [21, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535, 651, 696], "cumul": [21, 106], "bottom": [21, 509], "histtyp": 21, "bar": [21, 651, 666, 667, 668, 669, 670, 671, 672, 683, 712], "align": [21, 33, 106, 535], "mid": 21, "orient": 21, "vertic": [21, 33, 651], "rwidth": 21, "log": [21, 73, 74, 535, 651, 698, 707], "color": [21, 48, 151, 191, 199, 231, 232, 359, 360, 651, 680, 684, 687], "label": [21, 94, 98, 150, 181, 191, 207, 248, 477, 535, 636, 682], "stack": 21, "default_delta": [21, 23, 25, 26, 28], "008333333333333333": [21, 23, 25, 26, 28], "placement": [21, 23, 25, 26, 28, 31, 33, 231, 232], "mpldrawer": [21, 23, 28, 31, 33], "kwarg": [21, 23, 25, 26, 31, 33, 76, 83, 84, 106, 154, 162, 174, 178, 192, 284, 286, 366, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 636, 645, 651, 654, 657, 667, 668, 669, 670, 671, 672, 700, 707, 710, 712, 714, 716, 718, 720, 724, 726, 732, 735, 759], "move_figur": [21, 23, 25, 26, 28, 31, 33], "move": [21, 23, 25, 26, 28, 31, 33, 106, 268, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 762], "upper": [21, 23, 25, 26, 28, 31, 33, 106, 244, 249], "left": [21, 23, 25, 26, 28, 31, 33, 106, 509], "corner": [21, 23, 25, 26, 28, 31, 33, 195], "pixel": [21, 23, 25, 26, 28, 31, 33, 207, 755], "n": [21, 23, 25, 26, 28, 31, 33, 70, 71, 106, 113, 181, 191, 298, 382, 385, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 475, 651], "fig_manag": [21, 23, 25, 26, 28, 31, 33], "pyplot": [21, 23, 25, 26, 28, 31, 33], "get_current_fig_manag": [21, 23, 25, 26, 28, 31, 33], "geom": [21, 23, 25, 26, 28, 31, 33], "window": [21, 23, 25, 26, 28, 31, 33, 660], "geometri": [21, 23, 25, 26, 28, 31, 33], "dx": [21, 23, 25, 26, 28, 31, 33], "dy": [21, 23, 25, 26, 28, 31, 33], "getrect": [21, 23, 25, 26, 28, 31, 33], "setgeometri": [21, 23, 25, 26, 28, 31, 33], "setposit": [21, 23, 25, 26, 28, 31, 33], "500": [21, 23, 25, 26, 28, 31, 33, 544], "cmap": [23, 33], "norm": 23, "aspect": 23, "interpol": [23, 259], "alpha": [23, 181, 191, 526], "vmin": 23, "vmax": 23, "origin": [23, 248], "extent": 23, "interpolation_stag": 23, "filternorm": 23, "filterrad": 23, "4": [23, 106, 149, 181, 192, 531, 696], "resampl": [23, 121], "url": 23, "21": [24, 95, 106, 233, 381, 463, 560, 595, 617, 629], "09": [24, 38, 52, 63, 86, 361, 362, 452, 453, 455, 466, 467, 485, 486, 596, 615, 644, 653, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 731, 733], "mock": [25, 698], "accept": [25, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "noth": 25, "time_label": 28, "2020": [29, 38, 42, 52, 63, 65, 69, 79, 85, 91, 92, 95, 100, 105, 120, 128, 130, 135, 138, 142, 143, 144, 147, 151, 163, 179, 180, 190, 197, 233, 235, 273, 278, 282, 283, 285, 294, 310, 316, 361, 362, 364, 391, 395, 400, 401, 444, 448, 457, 458, 460, 462, 463, 473, 474, 476, 481, 491, 497, 498, 502, 503, 506, 508, 510, 513, 514, 519, 520, 521, 522, 523, 525, 527, 533, 535, 537, 540, 545, 560, 569, 571, 577, 579, 581, 585, 588, 593, 595, 612, 617, 625, 629, 631, 652, 655, 656, 665, 673, 688], "n_fft": [31, 33, 651], "64": [31, 33, 437], "sampling_r": [31, 33, 406, 409, 410], "2000": [31, 33], "figure_s": [31, 33], "9": [31, 33, 106, 663, 701, 747], "last": [31, 76, 106, 544], "comput": [31, 70, 78, 149, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 544, 603], "fig_siz": [31, 33], "buffer_size_sec": 33, "1": [33, 48, 70, 71, 102, 106, 131, 132, 149, 191, 195, 205, 207, 231, 232, 244, 249, 251, 347, 373, 405, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 504, 505, 507, 509, 511, 512, 526, 531, 534, 535, 544, 651, 687, 692, 703, 705, 720, 737, 749, 764], "viridi": 33, "center": [33, 117, 119, 237], "mayb": [33, 321], "mimick": 33, "librosa": 33, "stft": 33, "short": [33, 106], "fourier": 33, "transform": [33, 208, 464, 465, 515, 516, 517, 518], "step": [33, 106, 451, 454, 651, 654, 657, 710, 712, 714, 716, 718, 720, 724, 726, 732, 735], "size": [33, 106, 121, 195, 196, 208, 250, 383, 384, 385, 387, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 516, 626, 683, 684], "lenght": 33, "han": 33, "smooth": 33, "entri": [37, 94, 98, 106, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 544], "eas": 37, "start": [37, 45, 106, 229, 535, 770], "tensorboard": [37, 642, 696], "visdom": [37, 45, 698], "process": [37, 83, 392, 414, 666], "16": [38, 65, 106, 138, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "type": [39, 41, 43, 48, 50, 51, 66, 67, 68, 73, 74, 76, 78, 87, 88, 89, 90, 102, 103, 106, 109, 145, 146, 148, 154, 156, 157, 158, 162, 164, 165, 166, 167, 168, 171, 174, 177, 178, 181, 182, 183, 186, 187, 188, 194, 195, 196, 201, 218, 234, 237, 265, 268, 272, 298, 327, 328, 329, 330, 331, 332, 333, 359, 363, 366, 373, 376, 379, 396, 397, 398, 399, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 468, 469, 470, 471, 472, 475, 487, 488, 489, 490, 499, 504, 505, 507, 509, 515, 516, 524, 529, 534, 544, 546, 549, 550, 597, 599, 603, 604, 605, 606, 610, 611, 619, 620, 621, 622, 623, 624, 626, 636, 648, 651, 662, 664, 700, 703, 705, 707, 737, 749, 751, 759, 764, 765, 766, 768], "keep_al": 41, "use_asyncio": 41, "param": [41, 78, 82, 94, 96, 98, 268, 296, 297, 298, 299, 300, 301, 302, 303, 319, 339, 347, 376, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 509, 538, 539, 614, 645, 691, 712, 714, 716, 718, 724, 732, 735, 759], "10": [42, 86, 106, 111, 114, 193, 231, 239, 381, 386, 411, 412, 413, 439, 441, 446, 452, 453, 455, 466, 467, 475, 477, 484, 485, 486, 535, 541, 579, 585, 596, 615, 644, 652, 653, 656, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 731, 733], "Will": 45, "server": [45, 698], "ob": 48, "3": [48, 102, 106, 192, 205, 231, 232, 339, 345, 347, 348, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 651, 687, 720], "channel": [48, 181, 191, 251, 422, 451, 515, 651], "observ": [48, 614], "grayscal": 48, "uint8": [48, 106, 651], "numpi": [48, 85, 106, 181, 191, 406, 531, 597, 636, 690, 692], "ndarrai": [48, 87, 88, 89, 90, 102, 106, 107, 109, 117, 119, 121, 126, 127, 131, 132, 133, 134, 136, 137, 148, 149, 150, 164, 165, 166, 167, 168, 177, 178, 181, 191, 195, 196, 231, 232, 237, 272, 405, 406, 409, 410, 411, 412, 413, 454, 651, 681, 690, 692, 710, 720, 726, 735, 755, 768], "arrai": [48, 106, 150, 177, 181, 191, 387, 454, 690, 692, 768], "conform": 48, "observation_spac": 48, "version": [48, 106, 192, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465], "repres": [48, 531], "17": [52, 63, 105, 106, 120, 128, 130, 135, 294, 313, 314, 324, 361, 362, 481, 514, 688], "file_path": 55, "path": [55, 57, 59, 61, 94, 96, 98, 104, 106, 272, 298, 308, 405, 406, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 558, 559, 561, 562, 564, 565, 566, 567, 568, 572, 573, 574, 575, 648, 651, 686, 700, 707, 752, 754], "frame_out_dir": 55, "audio_out_dir": 55, "rate": [55, 422, 544], "frame_format": 55, "jpg": [55, 94, 98], "extract_sound": 55, "ffmpeg_path": [55, 57, 61], "ffmpeg": [55, 57, 61], "frames_dir": [57, 59], "merge_audio": 57, "audio_dir": 57, "merge_dir": 57, "merge_r": 57, "video_path": 61, "start_tim": 61, "40": [61, 106], "00": 61, "stop_tim": 61, "50": [61, 535], "split_dir": 61, "append_tim": 62, "aggreg": 64, "accumul": 64, "collect": [64, 608], "summari": 64, "02": [65, 108, 122, 200, 221, 279, 280, 287, 403, 404, 407, 448, 473, 474, 519, 530, 569, 595, 617, 629, 631, 639, 676], "start_valu": [66, 67, 68], "lambd": [66, 73, 255], "99": [66, 73], "28": [69, 386, 484, 540, 579, 618, 625], "06": [69, 479, 524, 537, 557, 585, 593, 625, 630, 694], "store": [70, 71, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534, 599, 605], "averag": [70, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "current": [70, 71, 106, 240, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 544], "updat": [70, 71, 76, 106, 422], "val": [70, 71, 78, 106], "measur": [73, 76, 535, 626], "statisticserror": [73, 76], "fmean": [73, 76], "geometric_mean": [73, 76], "harmonic_mean": [73, 76], "mean": [73, 76, 78, 106, 132, 136, 137, 241, 256, 347, 471, 515, 535], "median": [73, 76], "median_group": [73, 76], "median_high": [73, 76], "median_low": [73, 76], "mode": [73, 76, 106, 181, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 492, 531, 734], "multimod": [73, 76], "pstdev": [73, 76], "pvarianc": [73, 76], "quantil": [73, 76], "stdev": [73, 76], "varianc": [73, 76, 78, 106, 132], "keep_measure_histori": [73, 76], "use_disk_cach": [73, 76], "add": [73, 83, 268, 335, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "append": [73, 76, 78], "calc_moving_averag": 73, "window_s": [73, 78], "100": [73, 78, 83, 376, 377, 378], "calc_running_valu": 73, "new_val": 73, "properti": [73, 76, 78, 83, 106, 286, 425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449, 459, 461, 651], "max": [73, 106, 248, 762], "rtype": [73, 76, 78, 83, 205, 281, 392, 425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449, 459, 461, 651], "min": [73, 106, 248, 359, 762], "save": [73, 76, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535, 567, 686], "stat_nam": 73, "project_nam": [73, 74, 312], "non": [73, 106, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535, 578], "config_nam": [73, 74], "directori": [73, 74, 94, 96, 98, 464, 465], "list": [74, 94, 106, 181, 194, 239, 352, 354, 359, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 534, 651, 668, 670, 672, 696, 712, 718, 724, 732, 755, 756, 762], "metricaggreg": 74, "metric_nam": 74, "posixpath": [74, 651, 700, 707], "signal": [76, 124, 126, 127, 131, 132, 133, 134, 136, 137, 141, 406, 409, 410, 411, 412, 413, 660], "length": [76, 106, 126, 456, 762], "dict": [76, 94, 96, 98, 103, 104, 181, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 459, 461, 534, 544, 636, 651], "add_metr": 76, "name": [76, 106, 181, 268, 354, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465], "arg": [76, 83, 84, 94, 106, 149, 150, 181, 191, 192, 239, 251, 284, 286, 366, 383, 384, 416, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 515, 516, 517, 531, 534, 636], "clear": [76, 106, 578], "remov": [76, 106, 150, 336, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "all": [76, 106, 205, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 509, 531, 534, 535], "item": [76, 94, 98, 106, 454], "from": [76, 94, 106, 158, 171, 181, 182, 229, 336, 350, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 483, 531, 535, 544], "d": [76, 106, 119, 531], "copi": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 614], "shallow": 76, "fromkei": 76, "new": [76, 78, 106, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "dictionari": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534], "kei": [76, 106, 376, 414, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534], "iter": [76, 83, 94, 96, 98, 104, 106, 140, 234, 262, 265, 270, 272, 277, 382, 385, 388, 411, 412, 413, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 483, 535, 538, 539, 651, 667, 668, 669, 670, 671, 672, 696, 703, 705, 737, 749, 764], "set": [76, 94, 98, 102, 106, 149, 205, 286, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 531, 535, 582, 583, 584, 628, 680], "get": [76, 83, 106, 207, 393, 454, 534, 535, 626, 770], "default": [76, 106, 158, 171, 268, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 517, 531, 535, 683, 691], "els": 76, "pop": 76, "k": [76, 106, 186, 187, 188, 687], "v": [76, 106], "specifi": [76, 106, 251, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 483], "correspond": [76, 106, 150, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "If": [76, 106, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535, 626], "found": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "otherwis": [76, 82, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "keyerror": 76, "rais": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "popitem": 76, "2": [76, 102, 106, 112, 115, 131, 164, 166, 167, 168, 181, 182, 205, 231, 232, 251, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 507, 531], "ar": [76, 106, 201, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 534, 535, 626], "lifo": 76, "first": [76, 106, 531, 535, 599, 605], "out": [76, 106, 477, 507, 515, 517, 531], "order": [76, 94, 98, 106, 251, 276, 366, 388, 454, 618, 667, 668], "empti": [76, 106, 608], "remove_metr": 76, "setdefault": 76, "insert": [76, 106, 354], "e": [76, 106, 149, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 515, 516, 517, 531, 534, 535], "f": [76, 106, 377, 378], "present": [76, 286], "ha": [76, 83, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 531, 535, 578], "doe": [76, 106, 360, 365, 454, 515, 517, 524, 683], "lack": 76, "In": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 534], "either": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "case": [76, 106, 534, 565, 566], "thi": [76, 83, 106, 205, 272, 365, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 477, 515, 517, 531, 535, 565, 566, 626], "follow": [76, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "provid": [76, 106, 272, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 645, 651, 654, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 735], "view": [76, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "moving_averag": 78, "running_averag": 78, "run": [78, 414, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "piec": 78, "multiprocess": [80, 82, 83], "cloudpickl": 82, "serial": [82, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "content": [82, 106, 531], "tri": [82, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "pickl": [82, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "variabl": [82, 106, 531, 544], "you": [82, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "wish": 82, "wrap": [82, 192, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 483, 534], "func": [83, 376, 531], "max_queue_s": 83, "n_proc": 83, "max_tasks_per_child": 83, "fill_at_construct": 83, "block": [83, 106, 446], "workaround": 83, "python": [83, 106], "extrem": [83, 205], "slow": 83, "interprocess": 83, "commun": 83, "pipe": 83, "The": [83, 94, 98, 106, 132, 149, 354, 393, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 531, 534, 535, 651], "ideal": 83, "solut": 83, "would": [83, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 531], "queue": [83, 84], "appar": 83, "band": 83, "limit": [83, 106], "complet": 83, "task": [83, 84], "batch": [83, 140, 387, 515, 516, 517, 518, 535, 651], "thread": [83, 229], "result": [83, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "close": [83, 106, 651], "pool": [83, 84], "fill": [83, 106, 181], "maybe_fil": 83, "full": [83, 106, 205, 531], "put": [83, 106, 205], "re": [83, 387, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 483, 535], "queue_siz": 83, "raise_error": 83, "excptn": 83, "termin": [83, 698], "abc": [84, 425, 645, 654, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 735], "interfac": [84, 106, 229, 645, 651, 654, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 735], "abstract": [84, 645, 654, 710, 712, 714, 716, 718, 720, 724, 726, 732, 735], "call": [84, 106, 268, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 477, 531, 534, 544, 599, 605, 608, 626], "26": [85, 349, 479, 694], "inp": [87, 88, 89, 90, 396, 397, 398, 399], "unnormalis": [88, 102, 487, 488], "normalis": [90, 132, 181, 405, 406, 422, 489, 490], "12": [91, 92, 106, 128, 130, 135, 138, 257, 316, 365, 375, 400, 401, 473, 474, 569, 612, 665, 673], "validation_percentag": [94, 96, 98, 104], "15": [94, 96, 98, 104, 106, 395, 444, 465, 519, 593, 598, 601, 676], "testing_percentag": [94, 96, 98, 104], "extens": [94, 96, 98, 106, 272, 464, 465], "png": [94, 98, 691], "jpeg": [94, 98], "gif": [94, 98], "is_valid_fil": [94, 96, 98, 464, 465], "callabl": [94, 96, 98, 234, 255, 268, 359, 376, 377, 378, 417, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 475, 524, 529, 549, 550, 667, 668, 669, 670, 671, 672], "build": [94, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "train": [94, 98, 102, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 465, 526, 535, 578, 589, 591, 594], "file": [94, 106, 451, 464, 465, 642, 698], "system": [94, 335, 336], "analyz": 94, "sub": [94, 106], "folder": 94, "split": [94, 98, 461, 465], "them": [94, 106, 205, 425, 440, 531], "stabl": [94, 106], "test": [94, 98, 102, 106, 477], "valid": [94, 98, 102, 150, 464, 465], "structur": [94, 106], "describ": [94, 106], "each": [94, 98, 106, 181, 207, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 515, 516, 531], "image_directori": 94, "string": [94, 106, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465], "contain": [94, 98, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 450, 451, 535, 544], "subfold": [94, 98], "integ": [94, 106], "percentag": [94, 102, 317, 319], "reserv": 94, "ordereddict": [94, 98, 104, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534, 768], "within": [94, 98, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "defin": [94, 98, 106, 425, 440, 531, 626], "indic": [94, 98, 102, 106, 531], "07": [95, 105, 110, 120, 316, 462, 463, 476, 497, 502, 503, 506, 508, 510, 513, 514, 520, 521, 522, 523, 525, 527, 533, 535, 540, 560, 571, 652, 655, 656, 688], "splitenum": [98, 103, 459, 461, 465], "select": [101, 106, 422, 534, 603], "dataset_length": 102, "7": [102, 106], "part": [102, 106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477], "num": [102, 318], "floor": 102, "data_cat_split": 103, "categori": [104, 181], "magic": 104, "hash": 104, "small": 106, "t": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531, 535, 632, 651, 679, 681], "transpos": [106, 535], "same": [106, 207, 365, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 531, 535], "self": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 544, 651], "exampl": [106, 239, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531, 535], "np": [106, 150], "axi": [106, 347], "keepdim": 106, "where": [106, 354, 454, 464, 465, 535], "element": [106, 360], "refer": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 524, 599, 605], "document": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "equival": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "argmax": 106, "maximum": [106, 359], "along": 106, "argmin": 106, "minimum": [106, 535], "detail": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "argpartit": 106, "kth": 106, "kind": 106, "introselect": 106, "partit": 106, "8": [106, 181, 182], "argsort": 106, "sort": [106, 464, 465, 531], "astyp": 106, "cast": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "unsaf": 106, "subok": 106, "dpython": 106, "typecod": 106, "which": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 535, 544], "c": [106, 205, 531, 626, 651, 692, 720], "A": [106, 149, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 535, 618], "control": 106, "memori": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 603, 614, 626], "layout": 106, "fortran": 106, "contigu": 106, "appear": 106, "possibl": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 526], "equiv": 106, "safe": 106, "same_kind": 106, "what": [106, 535], "mai": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "occur": 106, "backward": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 526, 531, 535], "compat": [106, 192, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "should": [106, 181, 191, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 531, 535, 544, 651], "onli": [106, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "byte": [106, 286, 626, 689, 691], "chang": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 636], "allow": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 708], "can": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 526, 531, 534, 535], "preserv": 106, "like": [106, 354, 388, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 535, 696], "float64": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "float32": [106, 406, 515, 516, 594], "convers": [106, 158, 199, 422, 680], "done": [106, 535, 536], "pass": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 531, 535, 626], "through": [106, 526, 531], "forc": 106, "By": 106, "alwai": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "newli": 106, "alloc": [106, 321], "requir": [106, 531], "satisfi": 106, "input": [106, 136, 137, 248, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517, 531, 535, 734], "instead": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "arr_t": 106, "unless": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "other": [106, 392, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535, 720], "condit": 106, "see": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "descript": [106, 298, 442], "note": [106, 392, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517, 549, 550, 578], "between": [106, 192, 218, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 762], "simpl": [106, 178, 298, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "one": [106, 425, 440, 454, 531, 534, 535, 693], "multipl": [106, 149], "field": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "numer": [106, 524], "long": 106, "enough": 106, "complexwarn": 106, "when": [106, 268, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 614], "complex": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "To": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 535], "avoid": [106, 477], "own": [106, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "its": [106, 150, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 535], "whose": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 626], "share": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 531], "byteswap": 106, "inplac": [106, 399, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517, 531, 572, 573], "swap": [106, 251], "toggl": 106, "low": [106, 618], "endian": 106, "big": 106, "represent": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "place": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517, 531, 535], "imaginari": 106, "number": [106, 111, 112, 113, 114, 115, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 483, 535], "individu": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "256": [106, 449], "8755": 106, "int16": 106, "map": [106, 181, 666, 667, 668, 669, 670, 671, 672, 724, 732], "hex": 106, "0x1": 106, "0x100": 106, "0x2233": 106, "13090": 106, "0x3322": 106, "b": [106, 149, 186, 187, 188, 451, 454, 531, 651], "ceg": 106, "fac": 106, "s3": 106, "newbyteord": 106, "produc": 106, "differ": [106, 387, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 526, 683], "choos": 106, "choic": 106, "index": [106, 354, 770], "construct": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "clip": [106, 710, 735], "One": [106, 535], "must": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 599, 605], "compress": 106, "conj": 106, "conjug": 106, "conjugate_transpos": 106, "match": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "veri": [106, 365], "similar": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "have": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 477, 483, 531, 535], "argument": [106, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 534], "behavior": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "copyto": 106, "prefer": [106, 614], "6": [106, 196], "flag": [106, 207, 272], "c_contigu": 106, "ctype": 106, "simplifi": 106, "interact": [106, 714], "make": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 517], "easier": 106, "librari": 106, "among": 106, "stride": [106, 504, 505, 507, 511, 512], "below": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "themselv": 106, "possess": 106, "etc": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535, 636], "ctypeslib": 106, "public": 106, "were": [106, 531], "guid": [106, 770], "we": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531, 535], "omit": 106, "undocu": 106, "well": [106, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535, 683], "privat": 106, "_ctype": 106, "pointer": 106, "area": [106, 149], "correct": [106, 531, 535], "even": 106, "writeabl": 106, "respect": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 680], "arbitrari": 106, "code": [106, 199, 535, 691], "troubl": 106, "includ": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "crash": 106, "user": [106, 296, 297, 298, 299, 300, 301, 302, 303, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 651, 707], "bewar": 106, "exactli": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "_array_interface_": 106, "unlik": 106, "data_a": 106, "kept": 106, "c_void_p": 106, "dealloc": 106, "spelt": 106, "ndim": 106, "basetyp": 106, "p": [106, 517], "platform": 106, "c_intp": 106, "could": [106, 392], "c_int": 106, "c_long": 106, "c_longlong": 106, "depend": [106, 535], "underli": 106, "inform": [106, 181, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 535], "import": [106, 350], "show": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "how": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 626], "mani": [106, 531], "jump": 106, "next": [106, 111, 112, 113, 114, 115, 535], "obj": [106, 534, 626], "particular": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "_as_parameter_": 106, "perhap": 106, "want": [106, 535], "c_doubl": 106, "keep": [106, 454], "shape_a": 106, "c_short": 106, "strides_a": 106, "avail": [106, 351, 477, 583, 603], "still": [106, 205, 392, 531, 535], "someth": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "error": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 683], "as_paramet": 106, "equal": [106, 150, 365, 454, 550, 762], "int32": 106, "31962608": 106, "vari": 106, "c_uint32": 106, "__main__": 106, "lp_c_uint": 106, "0x7ff2fc1fc200": 106, "c_uint": 106, "c_uint64": 106, "c_ulong": 106, "4294967296": 106, "core": [106, 317, 350, 359], "_intern": 106, "c_long_array_2": 106, "0x7ff2fc1fce60": 106, "0x7ff2fc1ff320": 106, "cumprod": 106, "product": 106, "cumsum": 106, "sum": [106, 535], "buffer": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "diagon": 106, "offset": 106, "axis1": 106, "axis2": 106, "read": [106, 229, 770], "previou": 106, "futur": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "restrict": 106, "dump": 106, "back": [106, 354], "load": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 544, 565, 566, 567, 692], "pathlib": [106, 406, 464, 465], "now": [106, 377, 378, 446, 531], "scalar": [106, 354, 651, 664, 696, 700, 703, 705, 707, 730, 737, 749, 759, 764], "assign": [106, 207], "about": [106, 454, 535], "singl": [106, 149, 158, 171, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 509, 535], "style": 106, "segment": 106, "f_contigu": 106, "o": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 687], "owndata": 106, "borrow": 106, "anoth": [106, 205, 454, 626], "written": 106, "lock": 106, "inherit": [106, 636], "creation": [106, 422, 565, 566], "subsequ": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "while": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "remain": 106, "opposit": 106, "made": [106, 531], "howev": 106, "alreadi": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "so": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 535], "under": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "circumst": 106, "alter": 106, "via": 106, "previous": 106, "onto": 106, "attempt": 106, "runtimeerror": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "except": 106, "appropri": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "hardwar": 106, "writebackifcopi": 106, "api": [106, 219], "pyarray_resolvewritebackifcopi": 106, "befor": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "u": [106, 769], "updateifcopi": 106, "deprec": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "fnc": 106, "behav": 106, "ca": 106, "carrai": 106, "fa": 106, "farrai": 106, "access": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "lowercas": 106, "support": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "direct": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "setflag": 106, "cannot": [106, 535], "arbitrarili": 106, "truli": 106, "ultim": 106, "owner": 106, "expos": [106, 708], "both": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 535], "simultan": 106, "dimension": [106, 618, 714], "higher": 106, "dimens": [106, 451, 535], "arr": [106, 634], "dim": [106, 634], "It": [106, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531, 535, 544], "hold": [106, 477], "items": 106, "flat": 106, "over": [106, 149, 321, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "flatit": 106, "instanc": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 651], "act": [106, 449, 515, 517], "similarli": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 626], "subclass": [106, 425, 440, 531, 636, 708, 710, 720, 726, 735], "built": [106, 205, 549, 550], "flatten": [106, 454], "collaps": 106, "arang": 106, "reshap": [106, 422], "row": [106, 181, 454], "major": 106, "column": 106, "ravel": 106, "getfield": 106, "certain": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "determin": 106, "need": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 531], "fit": 106, "complex128": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "32": [106, 243, 382, 385, 387, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "bit": [106, 535], "larger": 106, "than": [106, 377, 378, 534, 549, 550], "itself": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "skip": 106, "begin": 106, "diag": 106, "j": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "our": [106, 531, 535], "sqrt": 106, "0j": 106, "1j": 106, "70710678": 106, "standard": [106, 132, 515, 626], "work": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 524, 535, 626, 683], "int_typ": 106, "interpret": 106, "nd": 106, "z": [106, 531], "suitabl": 106, "longdoubl": 106, "clongdoubl": 106, "becaus": [106, 535], "lose": 106, "void": 106, "speed": [106, 535, 578, 589, 591, 594], "up": [106, 535, 578, 589, 591, 594], "do": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "arithmet": 106, "optim": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 542, 544, 546, 558, 572, 573, 574, 575], "math": 106, "random": [106, 388, 400], "seed": [106, 123], "123": [106, 464, 465], "randint": 106, "itemset": 106, "There": 106, "least": 106, "Then": 106, "faster": 106, "two": [106, 149, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 524, 535, 693], "locat": 106, "compar": [106, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "syntax": 106, "increas": [106, 531, 535], "discourag": 106, "problem": [106, 459, 526, 535], "complic": [106, 535], "insid": [106, 205, 531], "loop": [106, 388, 416], "sure": 106, "local": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "look": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "initi": [106, 376, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "amax": 106, "amin": 106, "nbyte": 106, "total": 106, "consum": [106, 626], "zero": [106, 207, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "480": 106, "prod": 106, "new_ord": 106, "newbytord": 106, "specif": [106, 626], "littl": [106, 535], "nativ": 106, "sy": [106, 626], "byteord": 106, "i": [106, 205, 515, 516, 517, 535], "ignor": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "new_arr": 106, "reflect": 106, "nonzero": 106, "rearrang": 106, "wai": [106, 464, 465, 535], "posit": [106, 360, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "smaller": 106, "greater": [106, 549, 550], "behind": 106, "undefin": [106, 531], "final": [106, 251, 535], "onc": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "sinc": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "boolean": [106, 531, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "algorithm": [106, 204, 207], "second": [106, 205], "unspecifi": 106, "thei": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535, 626], "come": [106, 535], "break": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "ti": 106, "paritit": 106, "indirect": 106, "ptp": 106, "peak": 106, "repeat": [106, 477], "free": 106, "separ": [106, 461, 698], "resiz": 106, "new_shap": 106, "refcheck": 106, "count": [106, 354, 535], "check": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 526, 531], "valueerror": 106, "exist": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "pypi": 106, "reliabl": 106, "systemerror": 106, "keyword": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 576], "behaviour": [106, 614], "bug": [106, 535], "realloc": 106, "space": [106, 151, 714], "necessari": [106, 531], "consecut": [106, 608], "purpos": 106, "shrink": 106, "enlarg": 106, "abov": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "miss": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "doesn": [106, 531], "referenc": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "prevent": [106, 531], "traceback": 106, "most": [106, 531], "recent": 106, "round": 106, "decim": [106, 339], "around": [106, 229], "searchsort": 106, "side": [106, 524, 578, 693], "sorter": 106, "find": 106, "maintain": [106, 192], "setfield": 106, "ey": 106, "0e": 106, "000": 106, "5e": 106, "323": 106, "write": [106, 645, 654, 698, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 735], "uic": 106, "These": 106, "affect": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "actual": 106, "accord": 106, "never": 106, "unpickl": 106, "without": [106, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "whether": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "properli": 106, "four": 106, "compil": 106, "replac": 106, "letter": 106, "stdin": 106, "line": [106, 150, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 526, 651, 724], "usual": [106, 696], "As": 106, "infer": [106, 272], "fail": [106, 393, 477], "unchang": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "attributeerror": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "incompat": 106, "modif": [106, 531], "desir": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 516], "precis": [106, 339, 345, 347, 348], "obtain": [106, 393], "suggest": 106, "int_": 106, "relev": 106, "further": 106, "calcul": [106, 111, 112, 113, 114, 115, 626], "overflow": 106, "fix": 106, "quicksort": 106, "mergesort": 106, "heapsort": 106, "timsort": 106, "cover": 106, "datatyp": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "retain": 106, "wa": 106, "ad": [106, 354, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "lexsort": 106, "partial": 106, "s1": [106, 129], "i8": 106, "squeez": 106, "ax": [106, 679, 680, 683, 685, 686, 695, 697], "std": [106, 347, 468, 470, 471, 515], "ddof": 106, "deviat": [106, 515], "travers": 106, "more": [106, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 534, 535, 614], "explan": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "rst": 106, "imagin": 106, "after": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 526, 531, 578, 589, 591, 594], "known": 106, "tell": 106, "20": [106, 129, 431, 432, 433, 434, 541, 571, 577], "lib": [106, 181, 182], "stride_trick": 106, "as_strid": 106, "13": 106, "14": [106, 116, 118, 142, 179, 197, 235, 273, 364, 491, 530, 663, 701, 702, 704, 747], "18": [106, 125, 245, 391], "19": [106, 190, 663, 701, 747], "23": [106, 144, 147, 402, 462, 497, 502, 503, 506, 508, 510, 513, 631], "48": 106, "224": 106, "1344": 106, "813": 106, "swapax": 106, "interchang": 106, "form": [106, 248, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "tobyt": 106, "raw": [106, 535], "exhibit": 106, "u2": 106, "x00": 106, "x01": 106, "x02": 106, "x03": 106, "tofil": 106, "fid": 106, "sep": 106, "text": [106, 181, 507, 707], "binari": 106, "independ": 106, "recov": 106, "fromfil": 106, "open": [106, 154], "filenam": 106, "output": [106, 136, 339, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 516, 531, 534, 535, 698, 756], "closest": [106, 207], "conveni": 106, "quick": 106, "storag": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "lost": 106, "good": 106, "intend": [106, 531], "archiv": 106, "transport": 106, "machin": [106, 477], "overcom": 106, "expens": 106, "directli": [106, 531], "bypass": 106, "g": [106, 149, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 531, 534, 535], "gzipfil": 106, "fileno": 106, "bytesio": 106, "tolist": 106, "level": [106, 129, 205, 347, 354], "deep": [106, 535], "nest": [106, 107, 205, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534], "nearest": 106, "builtin": 106, "depth": 106, "recreat": 106, "although": [106, 425, 440], "sometim": 106, "1d": 106, "almost": [106, 339], "uint32": 106, "a_list": 106, "a_tolist": 106, "addition": 106, "2d": [106, 714], "appli": [106, 255, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 517, 518, 531], "recurs": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 657], "0d": 106, "typeerror": 106, "tostr": 106, "alia": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 592, 650], "despit": 106, "trace": [106, 580, 586, 587], "effect": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 578], "vector": [106, 136, 137, 535], "simpli": [106, 149], "addit": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "atleast2d": 106, "achiev": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "newaxi": 106, "matrix": 106, "permut": [106, 387, 388, 535], "th": [106, 535], "becom": 106, "altern": 106, "give": [106, 535], "var": [106, 529], "former": [106, 425, 440], "invok": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "float_": 106, "descriptor": 106, "again": 106, "omiss": 106, "some_dtyp": 106, "caus": 106, "reinterpret": 106, "ndarray_subclass": 106, "just": [106, 477, 531, 535, 696], "per": [106, 451, 454], "regular": 106, "superfici": 106, "shown": [106, 205], "print": [106, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 549, 550], "therefor": 106, "versu": 106, "int8": 106, "513": 106, "xv": 106, "i1": 106, "recarrai": 106, "normal": [106, 129, 132, 515], "width": [106, 181, 187, 188, 191, 259], "i2": 106, "raster": [109, 227, 618, 720], "radiu": [117, 119, 237], "box": [121, 143, 145, 146, 149, 150, 181, 248, 499, 636], "reducing_gap": 121, "randomst": 123, "s2": 129, "db_ratio": 129, "log_multipli": 129, "mix": [129, 535], "clean": [129, 682], "speech": 129, "nois": [129, 132], "variou": [129, 201], "snr": 129, "db": 129, "fs": 129, "power": 132, "white": [132, 680], "gaussian": 132, "mu": 132, "sigma": 132, "squar": [136, 137], "root": [137, 464, 465], "min_length": 139, "opencv": [142, 205, 229], "box_a": [148, 149], "box_b": [148, 149], "jaccard": [149, 248], "overlap": [149, 248], "intersect": [149, 218], "num_box": 149, "bbox": [150, 181, 248], "x1": 150, "y1": 150, "x2": 150, "y2": 150, "img": [154, 162, 174, 183, 195, 196, 248, 690], "cleanupmethod": 154, "colorconversionenum": 158, "gray2bgr": 158, "bgr": [158, 171], "cv2": [158, 171, 192, 229, 234], "compon": [158, 171, 205, 207], "toedgemethodenum": 162, "canni": 162, "to_gray_method": 171, "tograymethodenum": 171, "noisefiltermethodenum": 174, "bilateral_filt": 174, "input_imag": 177, "lower_bound": 177, "upper_bound": 177, "179": 177, "255": [177, 182, 191, 268, 651], "thresholdmethodenum": 178, "pil": [181, 182, 690], "score": [181, 477], "outline_width": [181, 182], "outline_alpha": [181, 182], "score_color_fil": 181, "score_font": 181, "imagefont": [181, 182], "home": [181, 182, 700], "heider": [181, 182, 442, 700], "miniconda3": [181, 182], "env": [181, 182], "py38": [181, 182], "python3": [181, 182], "site": [181, 182], "packag": [181, 182], "py": [181, 182, 524], "score_format": 181, "2f": 181, "rgba": 181, "height": [181, 187, 188, 191, 259], "xmin": 181, "ymin": 181, "xmax": 181, "ymax": 181, "NOT": [181, 365, 535, 536], "class_name_map": 181, "id": 181, "visual": [181, 526, 535, 696], "background": 181, "font": [181, 231, 232], "drawn": 181, "x_min": 182, "y_min": 182, "x_max": 182, "y_max": 182, "score_color": 182, "display_str": 182, "font_typ": 182, "outline_color": 182, "color_fill_scor": 182, "theta": [186, 187, 188], "mask": [191, 208], "border": [191, 201, 516], "border_width": 191, "border_color": 191, "line_typ": 191, "linetypeenum": 191, "anti_alias": 191, "findcontour": 192, "contour": [192, 204, 205], "hierarchi": [192, 205], "rotation_vector": [195, 196], "translation_vector": [195, 196], "camera_matrix": [195, 196], "dist_coef": [195, 196], "boundari": [201, 205], "denot": 201, "approxim": [204, 524], "retr_extern": 205, "retriev": [205, 531], "outer": 205, "retr_list": 205, "establish": 205, "hierarch": 205, "relationship": 205, "retr_ccomp": 205, "organ": 205, "At": [205, 535], "top": [205, 509], "extern": 205, "hole": 205, "connect": [205, 207], "retr_tre": 205, "reconstruct": 205, "demo": 205, "distancetransform": 207, "ccomp": 207, "src": [207, 229], "distanc": [208, 762], "rectangl": [218, 684], "videocaptur": [219, 229, 234], "backend": [219, 312], "identifi": 219, "thread_nam": 229, "group": [229, 544], "async": [229, 373], "wrapper": 229, "alik": 229, "frame": [229, 352], "video": [229, 651, 735], "31": 230, "fp": 231, "140": 231, "format_str": 231, "thick": [231, 232], "font_scal": [231, 232], "video_stream": 234, "coder": 234, "ident": [234, 339, 428, 429, 432, 443], "compos": 239, "sever": [239, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "augment": [239, 535], "togeth": 239, "centercrop": 239, "totensor": [239, 518], "delta": [243, 245], "lower": [244, 249, 714], "crop": [248, 516], "being": [248, 377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 517, 651], "dure": [248, 526, 531], "tensor": [248, 251, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 468, 469, 470, 471, 472, 487, 488, 489, 490, 492, 499, 515, 516, 517, 524, 531, 534, 535, 597, 645, 651, 710, 720, 726, 735], "pt": 248, "adjust": [248, 683], "300": 250, "tripl": 251, "eg": [251, 534, 714], "target_s": 259, "interpolationenum": 259, "linear": [259, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "proper": [259, 377, 378], "cv": 259, "crazi": 259, "ps": [262, 270], "wait_tim": [262, 270, 373], "33": [262, 270], "ret_val": 265, "char": 265, "q": [265, 272], "x1b": [265, 272], "window_nam": 268, "trackbar_nam": 268, "min_val": 268, "max_val": 268, "callback": [268, 417, 549, 550], "sink": [268, 698], "windowflagenum": 272, "wait": 272, "draw_titl": 272, "save_path": 272, "exit_char": 272, "extensionenum": 272, "exr": 272, "min_default_s": 272, "200": 272, "max_default_s": 272, "600": 272, "caution": 272, "imshow": 272, "anim": 272, "hurt": 272, "perform": [272, 425, 440, 477, 668, 670, 672], "deviceorderenum": 276, "pci_bus_id": 276, "devic": [277, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 475, 515, 516, 582, 583, 584, 597, 614], "08": [278, 282, 283, 285, 310, 403, 404, 407, 612, 665, 673], "bad": 281, "gtkset": 286, "slim": 286, "manipul": 286, "gtk": 286, "prefer_dark_mod": 286, "theme": 286, "service_nam": [296, 297, 298, 299, 300, 301, 302, 303], "get_sudo": [296, 297, 299, 300, 301, 302, 303, 308, 309], "run_a": [296, 297, 298, 299, 300, 301, 302, 303], "runasenum": [296, 297, 298, 299, 300, 301, 302, 303], "service_entry_point_path": 298, "auto_en": 298, "restart": 298, "restartserviceenum": 298, "on_failur": 298, "templat": [298, 450], "unit": 298, "ndescript": 298, "nafter": 298, "network": [298, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 450, 451, 535], "target": [298, 422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 524, 553, 554], "servic": 298, "ntype": 298, "nuser": 298, "service_us": 298, "ngroup": 298, "service_group": 298, "nexecstart": 298, "execut": 298, "nrestart": 298, "nsyslogidentifi": 298, "nrestartsec": 298, "ntimeoutstartsec": 298, "infin": 298, "nwantedbi": 298, "service_target": 298, "remove_app_us": 299, "usernam": [306, 307, 308, 309], "demo_us": [306, 307, 308, 309], "new_hom": 306, "password": [307, 308], "add_hom": 308, "home_dir": 308, "allow_existing_us": 308, "remove_hom": 309, "backend_nam": 312, "linux": 312, "expected_s": 315, "1024": [315, 325, 603], "of_remain": [317, 319], "alsodecor": [317, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 594], "request": [317, 603], "global_pin_memori": 319, "neg": [321, 354, 360, 535], "expected_size_mb": 325, "bold": 339, "num_decim": 339, "df": [341, 342, 343, 346, 347], "max_provider_df": 345, "datafram": [345, 346, 347, 348, 351, 352], "entry_provider_df": [345, 348], "header_rot": [345, 348], "max_colwidth": [345, 348], "1000": [345, 348, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "group_bi": 346, "mean_col": 347, "std_col": 347, "latex": [347, 686], "pm": 347, "plu": 347, "minu": 347, "formatt": 348, "contextlib": 350, "suppress": 350, "panda": [350, 351, 359], "common": [350, 477, 535, 618], "settingwithcopywarn": 350, "export": 351, "old_index": 354, "loc": 354, "multiindex": 354, "expand": [354, 531, 692], "front": 354, "rear": 354, "end": [354, 535], "ndframe": 359, "colorenum": 359, "yellow": 359, "attr_templ": 359, "attrenum": 359, "bg": 359, "extreme_func": 359, "ndframeextremeenum": 359, "highlight": 359, "datefram": 360, "green": 360, "red": 360, "nan": 360, "chain": 365, "thing": 365, "mro": 366, "resolut": 366, "min_interv": [376, 377, 378], "recal": 376, "later": [376, 567, 599, 605], "ensur": [377, 378, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535], "often": [377, 378, 535], "max_freq": [377, 378], "interv": [377, 378, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "n_tupl": 379, "namedtupl": [379, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "drop_not_ful": [382, 385], "batch_siz": [383, 384, 387], "cycl": [387, 388], "itertool": 388, "everytim": 388, "exhaust": 388, "chanc": 392, "port": [392, 394, 648], "taken": 392, "host": [393, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "ip": 393, "unknown": 393, "strictnumb": [396, 397, 398, 399], "warn": [399, 446], "scipi": 403, "wav_file_nam": [405, 406], "max_resolut": [409, 410], "decimation_factor": [411, 412, 413], "return_indic": [411, 412, 413], "truncate_last_indivis": [411, 412, 413], "truncate_last_undivis": 411, "divis": 411, "has_x_serv": [416, 417], "abstractcontextmanag": [416, 549, 550], "context": [416, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 576], "earli": [416, 447], "fun": 421, "torch": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 464, 465, 475, 509, 515, 516, 524, 531, 576, 580, 582, 583, 584, 586, 587, 594, 608, 626, 654], "dataset": [422, 477, 535], "model": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 450, 451, 454, 475, 477, 524, 526, 532, 534, 535, 558, 559, 570, 572, 573, 574, 575, 582, 583, 584, 589, 590, 591, 645, 651, 654, 657, 700], "freez": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "baselin": 422, "initialis": 422, "optimis": [422, 559, 572, 573, 574, 575], "learn": [422, 459, 477, 535, 544], "schedul": 422, "persist": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "tool": 422, "clone": [422, 531], "soft": 422, "cuda": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 475, 583, 608], "automat": [422, 531, 576], "global": [422, 582, 583, 584, 599, 605], "handl": [422, 425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 576, 720], "input_shap": [425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "output_shap": [425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "intern": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449], "state": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 454, 544, 608], "nn": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 475, 534, 626], "scriptmodul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449], "add_modul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "child": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "fn": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "everi": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 544], "submodul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534], "children": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "typic": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "init": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "doc": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 651, 707], "no_grad": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "def": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "init_weight": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "m": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 480], "fill_": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "net": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 526, 535], "sequenti": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 666, 671, 672], "in_featur": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "out_featur": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "bia": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "bfloat16": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "modifi": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "yield": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "member": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "buf": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "20l": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "1l": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "5l": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "immedi": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "cpu": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 515, 516, 582, 584, 597], "gpu": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "associ": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "live": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "doubl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 509, 531], "dump_patch": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "better": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "bc": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "load_state_dict": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 544], "state_dict": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 544], "_metadata": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "thu": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "convent": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "_load_from_state_dict": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "shall": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "bump": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "eval": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "dropout": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "batchnorm": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "disabl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 580, 586, 587], "grad": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "comparison": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "mechan": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "confus": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "extra_repr": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "extra": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "custom": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "your": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 534, 535], "forward": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 532], "overridden": [425, 440, 531], "recip": [425, 440], "afterward": [425, 440], "care": [425, 440], "regist": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "hook": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 655], "latter": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "silent": [425, 440], "get_buff": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "throw": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "docstr": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "get_submodul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "correctli": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "fulli": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "qualifi": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "invalid": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "resolv": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "get_extra_st": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "set_extra_st": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "pickleabl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "guarante": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "get_paramet": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "let": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "sai": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "diagram": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "net_b": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "net_c": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "conv": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "runtim": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "degre": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "queri": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "against": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "named_modul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "transit": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "half": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "strict": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "descend": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "strictli": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 549], "enforc": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "missing_kei": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "unexpected_kei": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "unexpect": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "duplic": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "l": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "idx": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "named_buff": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "prefix": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 657], "prepend": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "running_var": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "named_children": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "conv4": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "conv5": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "memo": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "remove_dupl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "named_paramet": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_backward_hook": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "removablehandl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "favor": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_full_backward_hook": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_buff": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "consid": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 549], "running_mean": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "alongsid": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "oper": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531, 535, 626], "num_featur": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_forward_hook": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "signatur": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "won": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_forward_pre_hook": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "pre": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "gradient": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 535], "grad_input": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "grad_output": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "technic": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "reason": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "receiv": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "caller": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_modul": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "register_paramet": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "requires_grad_": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "requires_grad": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 531], "autograd": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 524, 531], "record": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "help": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 636], "finetun": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "gan": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "sample_input": [425, 428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "share_memori": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "share_memory_": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "destin": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "keep_var": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "whole": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "non_block": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "memory_format": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "channels_last": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "Its": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "integr": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "asynchron": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "pin": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451, 614], "4d": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "1913": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "3420": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "5113": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "2325": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "gpu1": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "1914": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "5112": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "2324": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "float16": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "cdoubl": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "3741": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "2382": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "5593": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "4443": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "ones": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "6122": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "1150": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "to_empti": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "dst_type": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "xpu": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "zero_grad": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "set_to_non": [425, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 443, 446, 447, 449, 451], "hidden_lay": [428, 429, 432, 443], "hidden_layer_activ": [428, 429, 432, 443, 449], "relu": [428, 429, 432, 443, 449], "output_activ": [428, 429, 432, 443], "use_bia": [428, 429, 432, 443], "use_dropout": [428, 429, 432, 443], "dropout_prob": [428, 429, 432, 443], "auto_build_hidden_layers_if_non": [428, 429, 432, 443], "input_multipli": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "max_layer_width": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "output_multipli": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "default_init": [428, 429, 432, 443], "fan_in_init": [428, 429, 432, 443], "mlp": [428, 429, 431, 432, 433, 434, 437, 441, 445, 446, 447, 448, 449, 451, 454], "construct_progressive_hidden_lay": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "_input_shap": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "_output_shap": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "infer_input_shap": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "infer_output_shap": [428, 429, 431, 432, 433, 434, 437, 439, 441, 443, 446, 447, 449], "entropi": 429, "sampl": [429, 464, 465, 477, 483], "mean_head_activ": [431, 432, 433, 434], "min_std": [431, 432, 433, 434], "max_std": [431, 432, 433, 434], "multivariatenorm": 432, "fixed_log_std": 434, "heads_hidden_s": 437, "r_hidden_lay": [439, 441], "recurrentcategoricalmlp": 439, "hidden_x": 439, "recurrent_input_s": 440, "hidden_s": 440, "layer": [442, 451, 526, 535], "perceptron": 442, "christian": [442, 651, 707], "nielsen": 442, "oooo": 443, "xx": 443, "fc1": 443, "hidden_layer_s": 443, "bias": 443, "fc2": 443, "fc3": 443, "0000": 443, "fusion": [445, 446, 447], "variant": [445, 448], "fusion_hidden_multipli": 446, "late": 446, "quit": 446, "botch": 446, "job": 446, "been": [446, 483, 531], "fission": 448, "24": [448, 760], "disjunction_s": 449, "subnet_s": 449, "128": [449, 651], "upon": 450, "featur": [450, 451], "num_input": 451, "num_output": 451, "a_valu": 451, "b_valu": 451, "layer_channel": 451, "preprocess": [451, 535], "constructor": 451, "encod": [451, 691], "uv": 451, "disk": 451, "parallel": [454, 666, 667, 668, 669, 670], "environ": 454, "explor": 454, "basic": [454, 535], "loos": 454, "action": [454, 712], "reward": 454, "event": 454, "lstm": 454, "nd_size": 456, "superviseddataset": 459, "categor": [459, 712], "split_nam": [459, 461], "compris": 461, "vision": 462, "loader": [464, 465], "dataload": [464, 465, 475], "target_transform": [464, 465], "has_file_allowed_extens": [464, 465], "visiondataset": [464, 465], "arrang": [464, 465], "class_x": [464, 465], "xxx": [464, 465], "ext": [464, 465], "xxy": [464, 465], "xxz": [464, 465], "class_i": [464, 465], "nsdf3": [464, 465], "asd932_": [464, 465], "randomcrop": [464, 465, 516], "corrupt": [464, 465], "_categori": [464, 465], "alphabet": [464, 465], "_data": 464, "class_index": [464, 465], "numpy_util": 465, "valid_percentag": 465, "test_percentag": 465, "_data_categori": 465, "pytorch": [466, 519, 534, 556, 595, 617, 651], "log_prob": 469, "log_std": 471, "prob": 472, "evaluation_load": 475, "mapper": 475, "kws_sink": 475, "29": [476, 521, 522, 523, 525, 527], "n_split": 477, "subset": 477, "methodolog": 477, "mistak": 477, "seen": 477, "perfect": 477, "anyth": 477, "yet": 477, "unseen": 477, "situat": 477, "overfit": [477, 535], "practic": 477, "supervis": 477, "experi": 477, "batch_sampl": 483, "num_iter": 483, "start_it": 483, "batchsampl": 483, "until": 483, "rgb": [492, 690, 692], "lot": 492, "OF": [492, 578], "assumpt": 492, "date": 500, "h_w": [504, 507, 509, 511], "kernel_s": [504, 505, 507, 511, 512], "dilat": [504, 505, 507, 511, 512], "h_w_in": [505, 512], "h_w_out": [505, 512], "pool_siz": 507, "h_": 507, "leftlfloorfrac": 507, "1rightrfloor": 507, "w_": 507, "pad_siz": 509, "quad": 509, "right": 509, "definit": 509, "out_pad": [511, 512], "mutat": [515, 517], "randomhorizontalflip": 517, "probabl": [517, 535, 651, 712], "flip": 517, "loss_fn": 524, "iinput": 524, "epsilon": 524, "1e": [524, 630], "error_toler": 524, "pleas": 524, "gradcheck": 524, "line_width": 526, "vanish": 526, "explod": 526, "usag": 526, "var_grad_fn": 528, "input_img": [531, 532], "jvp": 531, "ctx": 531, "formula": 531, "differenti": 531, "got": 531, "r": 531, "mark_dirti": 531, "mark": 531, "matter": 531, "staticmethod": 531, "x_npy": 531, "once_differenti": 531, "lead": 531, "wrong": [531, 535], "engin": 531, "know": 531, "mark_non_differenti": 531, "effici": 531, "go": [531, 535], "save_for_backward": 531, "g1": 531, "g2": 531, "saved_tensor": 531, "zeros_lik": 531, "index_add_": 531, "oppos": 531, "incorrect": 531, "leak": 531, "enabl": [531, 539, 587], "applic": 531, "graph": [531, 645, 651], "saved_tensors_hook": 531, "weren": 531, "op": 531, "extend": 531, "grad_out": 531, "gx": 531, "gy": 531, "gz": 531, "save_for_forward": 531, "x_t": 531, "y_t": 531, "_": 531, "vjp": 531, "fwad": 531, "dual_level": 531, "a_dual": 531, "make_du": 531, "set_materialize_grad": 531, "materi": 531, "prior": 531, "simplefunc": 531, "No": 531, "induc": 531, "needs_input_grad": 531, "use_cuda": 532, "return_lay": 534, "intermedi": 534, "activ": 534, "current_module_nam": 534, "desired_output_nam": 534, "submodule1": 534, "submodule2": 534, "submodule3": 534, "mid_output": 534, "model_output": 534, "those": [534, 626], "reduce_getattr": 534, "attr": 534, "wonder": 534, "beauti": 534, "simplif": 534, "http": 534, "stackoverflow": 534, "com": 534, "question": 534, "31174295": 534, "getattr": 534, "setattr": 534, "31174427": 534, "noredirect": 534, "comment86638618_31174427": 534, "verifi": 535, "n_class": 535, "softmax": 535, "deriv": 535, "l2": 535, "regress": 535, "huber": 535, "loss": [535, 559, 660], "imbalanc": 535, "ratio": 535, "logit": 535, "converg": 535, "elimin": 535, "hockei": 535, "stick": 535, "curv": 535, "few": [535, 618], "capac": 535, "filter": [535, 651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "reach": 535, "lowest": 535, "perfectli": 535, "somewher": 535, "continu": [535, 698], "stage": 535, "decreas": 535, "hopefulli": 535, "underfit": 535, "toi": 535, "try": 535, "did": 535, "down": 535, "unambigu": 535, "y_hat": 535, "sess": 535, "tf": 535, "That": 535, "goe": 535, "decod": 535, "truth": [535, 651], "me": 535, "reveal": 535, "backprop": 535, "chart": [535, 712, 724, 732], "broadcast": 535, "rel": 535, "ve": 535, "across": 535, "peopl": 535, "inadvert": 535, "depress": 535, "fact": 535, "okai": 535, "relat": 535, "trivial": 535, "strategi": 535, "autoregress": 535, "finish": [535, 536, 578, 589, 591, 594, 651], "paramat": 537, "lr": [542, 544], "mileston": 544, "gamma": 544, "warmup_factor": [544, 546], "3333333333333333": 544, "warmup_it": [544, 546], "last_epoch": 544, "_lrschedul": 544, "get_last_lr": 544, "get_lr": 544, "print_lr": 544, "is_verbos": 544, "epoch": [544, 559], "__dict__": 544, "patienc": [549, 550], "writer": [549, 550], "minim": [549, 550], "less": [549, 550], "improv": 549, "model_path": 561, "config_save_path": [562, 567, 568, 575], "config_file_path": [562, 567, 574], "model_nam": [565, 566, 567, 572, 573, 574], "model_directori": [565, 566, 572, 573], "raise_on_failur": [565, 566], "lastest": [565, 566], "appendix": [565, 566, 567], "save_directori": [567, 574], "prompt_on_failur": 567, "loaded_config_file_path": [567, 568, 575], "raise_on_exist": [567, 568], "timestamp": 567, "model_save_path": [568, 575], "optimiser_save_path": 575, "setup": 576, "__enter__": 576, "destruct": 576, "__exit__": 576, "using_cuda": 578, "THE": 578, "cach": [578, 608], "recover": 578, "no_side_effect": [580, 582, 583, 584, 586, 587, 589, 590, 591, 594], "jit": [580, 586, 587], "torchtrainsess": 592, "pi": 597, "overrid": [599, 605], "manual": [599, 605], "expected_memory_usage_mb": 603, "auto": [603, 651, 655], "highest": 603, "capabl": 603, "device_prefer": 605, "torchdeviceenum": 605, "explicitli": 605, "cuda_device_idx": 606, "destroi": 608, "ipc": 608, "empty_cach": 608, "ipc_collect": 608, "num_work": 614, "update_num_thread_for_pinned_load": 614, "weird": 614, "worker": 614, "72163": 616, "reproduc": 616, "grid": 618, "routin": 626, "much": 626, "getsizeof": 626, "sizeof": 626, "tensoris": 628, "ep": 630, "_tensor": 633, "el": 634, "manag": 636, "Not": [636, 651, 655], "due": 636, "default_col": 636, "numpy_dtyp": 640, "torch_dtyp": 641, "input_to_model": [645, 651], "log_dir": 648, "6006": 648, "tensorboardpytorchwrit": 650, "mnt": [651, 707], "win": [651, 707], "projectswin": [651, 707], "github": [651, 707], "pyth": [651, 707], "summary_writer_kw": 651, "imagewritermixin": [651, 759], "graphwritermixin": 651, "histogramwritermixin": [651, 657], "barwritermixin": 651, "linewritermixin": 651, "spectrogramwritermixin": 651, "figurewritermixin": 651, "instantiationwritermixin": 651, "precisionrecallcurvewritermixin": 651, "embedwritermixin": 651, "moduleparameterwritermixin": 651, "videowritermixin": 651, "meshwritermixin": 651, "multichannelmethodenum": [651, 720, 759], "tag": [651, 654, 664, 700, 703, 705, 707, 710, 712, 714, 716, 718, 720, 724, 726, 730, 732, 735, 737, 745, 746, 749, 759, 764], "value_error": 651, "x_label": [651, 712, 724, 732], "y_label": [651, 712, 724, 732], "global_step": 651, "walltim": 651, "blip": [651, 664, 700, 703, 705, 707, 730, 737, 749, 759, 764], "step_i": [651, 664, 700, 703, 705, 707, 730, 737, 749, 759, 764], "emb": [651, 714], "respons": [651, 714], "metadata": [651, 714], "label_img": [651, 714], "metadata_head": 651, "bork": 651, "exclud": [651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "inclus": [651, 664, 700, 703, 705, 707, 737, 749, 759, 764], "use_strict_trac": 651, "histogram": [651, 718], "max_bin": 651, "data_format": 651, "nchw": [651, 720], "multi_channel_method": 651, "seper": 651, "seperate_channel_postfix": 651, "seperate_image_postfix": 651, "dataformat": [651, 720], "chw": 651, "plot_kw": [651, 724, 732], "mesh": [651, 726], "here": 651, "number_of_vertic": 651, "lie": 651, "face": [651, 680], "precision_recall_curv": 651, "num_threshold": 651, "127": 651, "spectrogram": [651, 732], "sample_r": [651, 732], "512": [651, 732], "step_siz": 651, "frequenc": 651, "hz": 651, "sec": 651, "frame_r": [651, 735], "input_dim": [651, 735], "videoinputdimsenum": [651, 735], "ntchw": [651, 735], "fastest": 651, "expect": 651, "vid_tensor": 651, "summarywrit": 651, "mixin": 654, "publish": 655, "visualis": [660, 714], "episod": 660, "moving_loss": 660, "moving_reward": 660, "episode_length": 660, "moving_length": 660, "rgb_arrai": 660, "configur": 660, "stat": [662, 759], "tqdm": [665, 666], "progress": [666, 667, 668, 669, 670, 671, 672], "unord": [669, 670], "ax_": 680, "invert": 680, "black": 680, "edg": 680, "troublesom": 682, "symbol": 682, "legend": 683, "linestyl": [683, 687], "bbox_inch": 686, "tight": 686, "transpar": 686, "attempt_fix_empty_white_spac": 686, "post_process_crop": 686, "suffix": 686, "pdf": 686, "fig": 686, "embed": 686, "prop_cycl": 687, "cycler": 687, "marker": 687, "byte_arrai": 689, "data_path": 692, "desired_s": 692, "image1": 693, "image2": 693, "merg": 693, "decai": 696, "rep": 696, "invers": 696, "track": 698, "comma": 698, "get_csv_writ": 700, "textio": 700, "get_logg": 707, "write_to_std_out": 707, "logger": 707, "msg": 707, "unifi": 708, "audio": 710, "y_error": 712, "project": 714, "3d": 714, "bonu": 720, "multichannel": 720, "instanti": [722, 728], "num_fft": 732, "col": 753, "scale": [754, 755], "60": 754, "join": 756, "metriccollect": 759, "scalarwritermixin": 764, "pip": 769, "draugr": 769, "search": 770, "page": 770}, "objects": {"": [[0, 0, 0, "-", "draugr"]], "draugr": [[1, 1, 1, "", "dist_is_editable"], [2, 0, 0, "-", "dlib_utilities"], [15, 0, 0, "-", "drawers"], [46, 0, 0, "-", "extensions"], [52, 0, 0, "-", "ffmpeg_utilities"], [62, 1, 1, "", "get_version"], [63, 0, 0, "-", "jax_utilities"], [64, 0, 0, "-", "metrics"], [80, 0, 0, "-", "multiprocessing_utilities"], [85, 0, 0, "-", "numpy_utilities"], [142, 0, 0, "-", "opencv_utilities"], [273, 0, 0, "-", "os_utilities"], [337, 0, 0, "-", "pandas_utilities"], [361, 0, 0, "-", "pygame_utilities"], [364, 0, 0, "-", "python_utilities"], [400, 0, 0, "-", "random_utilities"], [403, 0, 0, "-", "scipy_utilities"], [418, 0, 0, "-", "threading_utilities"], [422, 0, 0, "-", "torch_utilities"], [665, 0, 0, "-", "tqdm_utilities"], [674, 0, 0, "-", "visualisation"], [698, 0, 0, "-", "writers"]], "draugr.dlib_utilities": [[3, 0, 0, "-", "dlib_utilities"], [10, 0, 0, "-", "exclude"], [13, 0, 0, "-", "facealigner"]], "draugr.dlib_utilities.dlib_utilities": [[4, 2, 1, "", "Dlib5faciallandmarksindices"], [5, 2, 1, "", "Dlib68faciallandmarksindices"], [6, 1, 1, "", "eye_aspect_ratio"], [7, 1, 1, "", "mouth_aspect_ratio"], [8, 1, 1, "", "rect_to_bounding_box"], [9, 1, 1, "", "shape_to_ndarray"]], "draugr.dlib_utilities.dlib_utilities.Dlib5faciallandmarksindices": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "slice"]], "draugr.dlib_utilities.dlib_utilities.Dlib68faciallandmarksindices": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "slice"]], "draugr.dlib_utilities.exclude": [[11, 0, 0, "-", "flags"]], "draugr.dlib_utilities.exclude.flags": [[12, 2, 1, "", "TupleFlag"]], "draugr.dlib_utilities.exclude.flags.TupleFlag": [[12, 3, 1, "", "__init__"]], "draugr.dlib_utilities.facealigner": [[14, 1, 1, "", "align_face"]], "draugr.drawers": [[16, 0, 0, "-", "drawer"], [18, 0, 0, "-", "mpl_drawers"], [34, 0, 0, "-", "opencv_drawers"]], "draugr.drawers.drawer": [[17, 2, 1, "", "Drawer"]], "draugr.drawers.drawer.Drawer": [[17, 3, 1, "", "__init__"]], "draugr.drawers.mpl_drawers": [[19, 0, 0, "-", "discrete_scroll_plot"], [20, 0, 0, "-", "distribution_plot"], [22, 0, 0, "-", "image_stream_plot"], [24, 0, 0, "-", "mpldrawer"], [27, 0, 0, "-", "series_scroll_plot"], [29, 0, 0, "-", "spectral"]], "draugr.drawers.mpl_drawers.distribution_plot": [[21, 2, 1, "", "DistributionPlot"]], "draugr.drawers.mpl_drawers.distribution_plot.DistributionPlot": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "move_figure"], [21, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.image_stream_plot": [[23, 2, 1, "", "ImageStreamPlot"]], "draugr.drawers.mpl_drawers.image_stream_plot.ImageStreamPlot": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "move_figure"], [23, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer": [[25, 2, 1, "", "MockDrawer"], [26, 2, 1, "", "MplDrawer"]], "draugr.drawers.mpl_drawers.mpldrawer.MockDrawer": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "move_figure"], [25, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.mpldrawer.MplDrawer": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "move_figure"], [26, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.series_scroll_plot": [[28, 2, 1, "", "SeriesScrollPlot"]], "draugr.drawers.mpl_drawers.series_scroll_plot.SeriesScrollPlot": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "move_figure"], [28, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral": [[30, 0, 0, "-", "fast_fourier_transform"], [32, 0, 0, "-", "fast_fourier_transform_spectrogram"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform": [[31, 2, 1, "", "FastFourierTransformPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform.FastFourierTransformPlot": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "move_figure"], [31, 4, 1, "", "n"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram": [[33, 2, 1, "", "FastFourierTransformSpectrogramPlot"]], "draugr.drawers.mpl_drawers.spectral.fast_fourier_transform_spectrogram.FastFourierTransformSpectrogramPlot": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "move_figure"], [33, 4, 1, "", "n"]], "draugr.drawers.opencv_drawers": [[35, 0, 0, "-", "opencv_image_stream"]], "draugr.drawers.opencv_drawers.opencv_image_stream": [[36, 2, 1, "", "OpencvImageStream"]], "draugr.drawers.opencv_drawers.opencv_image_stream.OpencvImageStream": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "draw"]], "draugr.entry_points": [[38, 0, 0, "-", "cpu_usage_entry_point"], [40, 0, 0, "-", "tensorboard_entry_point"], [42, 0, 0, "-", "toggle_darkmode"], [44, 0, 0, "-", "visdom_entry_point"]], "draugr.entry_points.cpu_usage_entry_point": [[39, 1, 1, "", "main"]], "draugr.entry_points.tensorboard_entry_point": [[41, 1, 1, "", "main"]], "draugr.entry_points.toggle_darkmode": [[43, 1, 1, "", "main"]], "draugr.entry_points.visdom_entry_point": [[45, 1, 1, "", "main"]], "draugr.extensions": [[47, 0, 0, "-", "skimage_utilities"], [49, 0, 0, "-", "sorcery_utilities"]], "draugr.extensions.skimage_utilities": [[48, 1, 1, "", "rgb_to_grayscale"]], "draugr.extensions.sorcery_utilities": [[50, 1, 1, "", "lower_case_assigned_names"], [51, 1, 1, "", "upper_case_assigned_names"]], "draugr.ffmpeg_utilities": [[53, 0, 0, "-", "exclude"], [54, 0, 0, "-", "extract"], [56, 0, 0, "-", "merge"], [58, 0, 0, "-", "sequencify"], [60, 0, 0, "-", "split"]], "draugr.ffmpeg_utilities.extract": [[55, 1, 1, "", "extract_frames"]], "draugr.ffmpeg_utilities.merge": [[57, 1, 1, "", "merge_video"]], "draugr.ffmpeg_utilities.sequencify": [[59, 1, 1, "", "sequencify_files"]], "draugr.ffmpeg_utilities.split": [[61, 1, 1, "", "spilt_video"]], "draugr.metrics": [[65, 0, 0, "-", "accumulation"], [69, 0, 0, "-", "meters"], [72, 0, 0, "-", "metric_aggregator"], [75, 0, 0, "-", "metric_collection"], [77, 0, 0, "-", "metric_summary"], [79, 0, 0, "-", "plotting"]], "draugr.metrics.accumulation": [[66, 1, 1, "", "lambda_accumulator"], [67, 1, 1, "", "mean_accumulator"], [68, 1, 1, "", "total_accumulator"]], "draugr.metrics.meters": [[70, 2, 1, "", "AverageMeter"], [71, 2, 1, "", "Meter"]], "draugr.metrics.meters.AverageMeter": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "update"]], "draugr.metrics.meters.Meter": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "update"]], "draugr.metrics.metric_aggregator": [[73, 2, 1, "", "MetricAggregator"], [74, 1, 1, "", "save_metric"]], "draugr.metrics.metric_aggregator.MetricAggregator": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "add"], [73, 3, 1, "", "append"], [73, 3, 1, "", "calc_moving_average"], [73, 3, 1, "", "calc_running_value"], [73, 5, 1, "", "max"], [73, 5, 1, "", "measures"], [73, 5, 1, "", "min"], [73, 3, 1, "", "save"], [73, 5, 1, "", "values"]], "draugr.metrics.metric_collection": [[76, 2, 1, "", "MetricCollection"]], "draugr.metrics.metric_collection.MetricCollection": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "add_metric"], [76, 3, 1, "", "append"], [76, 3, 1, "", "clear"], [76, 3, 1, "", "copy"], [76, 3, 1, "", "fromkeys"], [76, 3, 1, "", "get"], [76, 3, 1, "", "items"], [76, 3, 1, "", "keys"], [76, 5, 1, "", "metrics"], [76, 3, 1, "", "pop"], [76, 3, 1, "", "popitem"], [76, 3, 1, "", "remove_metric"], [76, 3, 1, "", "save"], [76, 3, 1, "", "setdefault"], [76, 3, 1, "", "update"], [76, 3, 1, "", "values"]], "draugr.metrics.metric_summary": [[78, 2, 1, "", "MetricSummary"]], "draugr.metrics.metric_summary.MetricSummary": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "append"], [78, 3, 1, "", "moving_average"], [78, 3, 1, "", "running_average"], [78, 5, 1, "", "values"]], "draugr.multiprocessing_utilities": [[81, 0, 0, "-", "pooled_queue_processor"]], "draugr.multiprocessing_utilities.pooled_queue_processor": [[82, 2, 1, "", "CloudPickleBase"], [83, 2, 1, "", "PooledQueueProcessor"], [84, 2, 1, "", "PooledQueueTask"]], "draugr.multiprocessing_utilities.pooled_queue_processor.CloudPickleBase": [[82, 3, 1, "", "__init__"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueProcessor": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "close"], [83, 3, 1, "", "fill"], [83, 3, 1, "", "get"], [83, 3, 1, "", "maybe_fill"], [83, 3, 1, "", "put"], [83, 5, 1, "", "queue_size"], [83, 3, 1, "", "raise_error"], [83, 3, 1, "", "terminate"]], "draugr.multiprocessing_utilities.pooled_queue_processor.PooledQueueTask": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "call"]], "draugr.numpy_utilities": [[86, 0, 0, "-", "channel_transform"], [91, 0, 0, "-", "datasets"], [105, 0, 0, "-", "manipulation"], [108, 0, 0, "-", "mixing"], [110, 0, 0, "-", "powers"], [116, 0, 0, "-", "raster_grid_2d_masking"], [118, 0, 0, "-", "raster_grid_3d_masking"], [120, 0, 0, "-", "resize"], [122, 0, 0, "-", "sampling"], [124, 0, 0, "-", "signal_utilities"]], "draugr.numpy_utilities.channel_transform": [[87, 1, 1, "", "chw_to_hwc"], [88, 1, 1, "", "float_chw_to_hwc_uint"], [89, 1, 1, "", "hwc_to_chw"], [90, 1, 1, "", "uint_hwc_to_chw_float"]], "draugr.numpy_utilities.datasets": [[92, 0, 0, "-", "categorical"], [99, 0, 0, "-", "defaults"], [100, 0, 0, "-", "splitting"]], "draugr.numpy_utilities.datasets.categorical": [[93, 0, 0, "-", "deep_category"], [95, 0, 0, "-", "flat_category"], [97, 0, 0, "-", "shallow_category"]], "draugr.numpy_utilities.datasets.categorical.deep_category": [[94, 1, 1, "", "build_deep_categorical_dataset"]], "draugr.numpy_utilities.datasets.categorical.flat_category": [[96, 1, 1, "", "build_flat_dataset"]], "draugr.numpy_utilities.datasets.categorical.shallow_category": [[98, 1, 1, "", "build_shallow_categorical_dataset"]], "draugr.numpy_utilities.datasets.splitting": [[101, 2, 1, "", "SplitEnum"], [102, 2, 1, "", "SplitIndexer"], [103, 1, 1, "", "select_split"], [104, 1, 1, "", "train_valid_test_split"]], "draugr.numpy_utilities.datasets.splitting.SplitEnum": [[101, 3, 1, "", "__init__"]], "draugr.numpy_utilities.datasets.splitting.SplitIndexer": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "unnormalised"]], "draugr.numpy_utilities.manipulation": [[106, 2, 1, "", "MyNdArray"], [107, 1, 1, "", "recursive_flatten_numpy"]], "draugr.numpy_utilities.manipulation.MyNdArray": [[106, 4, 1, "", "T"], [106, 3, 1, "", "__init__"], [106, 3, 1, "", "all"], [106, 3, 1, "", "any"], [106, 3, 1, "", "argmax"], [106, 3, 1, "", "argmin"], [106, 3, 1, "", "argpartition"], [106, 3, 1, "", "argsort"], [106, 3, 1, "", "astype"], [106, 4, 1, "", "base"], [106, 3, 1, "", "byteswap"], [106, 3, 1, "", "choose"], [106, 3, 1, "", "clip"], [106, 3, 1, "", "compress"], [106, 3, 1, "", "conj"], [106, 3, 1, "", "conjugate"], [106, 5, 1, "", "conjugate_transpose"], [106, 3, 1, "", "copy"], [106, 4, 1, "", "ctypes"], [106, 3, 1, "", "cumprod"], [106, 3, 1, "", "cumsum"], [106, 4, 1, "", "data"], [106, 3, 1, "", "diagonal"], [106, 4, 1, "", "dtype"], [106, 3, 1, "", "dump"], [106, 3, 1, "", "dumps"], [106, 3, 1, "", "fill"], [106, 4, 1, "", "flags"], [106, 4, 1, "", "flat"], [106, 3, 1, "", "flatten"], [106, 3, 1, "", "getfield"], [106, 4, 1, "", "imag"], [106, 3, 1, "", "item"], [106, 3, 1, "", "itemset"], [106, 4, 1, "", "itemsize"], [106, 3, 1, "", "max"], [106, 3, 1, "", "mean"], [106, 3, 1, "", "min"], [106, 4, 1, "", "nbytes"], [106, 4, 1, "", "ndim"], [106, 3, 1, "", "newbyteorder"], [106, 3, 1, "", "nonzero"], [106, 3, 1, "", "partition"], [106, 3, 1, "", "prod"], [106, 3, 1, "", "ptp"], [106, 3, 1, "", "put"], [106, 3, 1, "", "ravel"], [106, 4, 1, "", "real"], [106, 3, 1, "", "repeat"], [106, 3, 1, "", "reshape"], [106, 3, 1, "", "resize"], [106, 3, 1, "", "round"], [106, 3, 1, "", "searchsorted"], [106, 3, 1, "", "setfield"], [106, 3, 1, "", "setflags"], [106, 4, 1, "", "shape"], [106, 4, 1, "", "size"], [106, 3, 1, "", "sort"], [106, 3, 1, "", "squeeze"], [106, 3, 1, "", "std"], [106, 4, 1, "", "strides"], [106, 3, 1, "", "sum"], [106, 3, 1, "", "swapaxes"], [106, 3, 1, "", "take"], [106, 3, 1, "", "tobytes"], [106, 3, 1, "", "tofile"], [106, 3, 1, "", "tolist"], [106, 3, 1, "", "tostring"], [106, 3, 1, "", "trace"], [106, 3, 1, "", "transpose"], [106, 3, 1, "", "var"], [106, 3, 1, "", "view"]], "draugr.numpy_utilities.mixing": [[109, 1, 1, "", "mix_channels"]], "draugr.numpy_utilities.powers": [[111, 1, 1, "", "next_pow_10_numpy"], [112, 1, 1, "", "next_pow_2_numpy"], [113, 1, 1, "", "next_pow_numpy"], [114, 1, 1, "", "next_power_10_numpy"], [115, 1, 1, "", "next_power_2_numpy"]], "draugr.numpy_utilities.raster_grid_2d_masking": [[117, 1, 1, "", "circular_mask"]], "draugr.numpy_utilities.raster_grid_3d_masking": [[119, 1, 1, "", "sphere_mask"]], "draugr.numpy_utilities.resize": [[121, 1, 1, "", "resize_array"]], "draugr.numpy_utilities.sampling": [[123, 1, 1, "", "get_sampler"]], "draugr.numpy_utilities.signal_utilities": [[125, 0, 0, "-", "padding"], [128, 0, 0, "-", "signal_mixing"], [130, 0, 0, "-", "signal_projection"], [135, 0, 0, "-", "signal_statistics"], [138, 0, 0, "-", "truncation"]], "draugr.numpy_utilities.signal_utilities.padding": [[126, 1, 1, "", "zero_pad_to"], [127, 1, 1, "", "zero_pad_to_power_2"]], "draugr.numpy_utilities.signal_utilities.signal_mixing": [[129, 1, 1, "", "mix_ratio"]], "draugr.numpy_utilities.signal_utilities.signal_projection": [[131, 1, 1, "", "heaviside"], [132, 1, 1, "", "normalise_signal"], [133, 1, 1, "", "normalise_signal_max_abs"], [134, 1, 1, "", "normalise_signal_minmax"]], "draugr.numpy_utilities.signal_utilities.signal_statistics": [[136, 1, 1, "", "mean_square"], [137, 1, 1, "", "root_mean_square"]], "draugr.numpy_utilities.signal_utilities.truncation": [[139, 1, 1, "", "last_dim_truncate"], [140, 1, 1, "", "min_length_truncate_batch"], [141, 1, 1, "", "truncate_to_power_2"]], "draugr.opencv_utilities": [[143, 0, 0, "-", "bounding_boxes"], [151, 0, 0, "-", "color_space"], [179, 0, 0, "-", "drawing"], [197, 0, 0, "-", "namespaces"], [227, 0, 0, "-", "raster_sequences"], [235, 0, 0, "-", "transformation"], [260, 0, 0, "-", "windows"]], "draugr.opencv_utilities.bounding_boxes": [[144, 0, 0, "-", "boxes_2d"], [147, 0, 0, "-", "evaluation"]], "draugr.opencv_utilities.bounding_boxes.boxes_2d": [[145, 1, 1, "", "minmax_to_xywh"], [146, 1, 1, "", "xywh_to_minmax"]], "draugr.opencv_utilities.bounding_boxes.evaluation": [[148, 1, 1, "", "intersect_numpy"], [149, 1, 1, "", "jaccard_overlap_numpy"], [150, 1, 1, "", "remove_null_boxes"]], "draugr.opencv_utilities.color_space": [[152, 0, 0, "-", "clean"], [155, 0, 0, "-", "color"], [159, 0, 0, "-", "edge"], [163, 0, 0, "-", "gamma"], [169, 0, 0, "-", "gray"], [172, 0, 0, "-", "noise"], [175, 0, 0, "-", "threshold"]], "draugr.opencv_utilities.color_space.clean": [[153, 2, 1, "", "CleanUpMethod"], [154, 1, 1, "", "clean_up"]], "draugr.opencv_utilities.color_space.clean.CleanUpMethod": [[153, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.color": [[156, 1, 1, "", "is_singular_channel"], [157, 1, 1, "", "num_channels"], [158, 1, 1, "", "to_color"]], "draugr.opencv_utilities.color_space.edge": [[160, 2, 1, "", "CannyApertureSize"], [161, 2, 1, "", "ToEdgeMethodEnum"], [162, 1, 1, "", "to_edge"]], "draugr.opencv_utilities.color_space.edge.CannyApertureSize": [[160, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.edge.ToEdgeMethodEnum": [[161, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.gamma": [[164, 1, 1, "", "gamma_correct_byte"], [165, 1, 1, "", "gamma_correct_fast_to_byte"], [166, 1, 1, "", "gamma_correct_float_to_byte"], [167, 1, 1, "", "linear_correct_byte"], [168, 1, 1, "", "linear_correct_float_to_byte"]], "draugr.opencv_utilities.color_space.gray": [[170, 2, 1, "", "ToGrayMethodEnum"], [171, 1, 1, "", "to_gray"]], "draugr.opencv_utilities.color_space.gray.ToGrayMethodEnum": [[170, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.noise": [[173, 2, 1, "", "NoiseFilterMethodEnum"], [174, 1, 1, "", "noise_filter"]], "draugr.opencv_utilities.color_space.noise.NoiseFilterMethodEnum": [[173, 3, 1, "", "__init__"]], "draugr.opencv_utilities.color_space.threshold": [[176, 2, 1, "", "ThresholdMethodEnum"], [177, 1, 1, "", "hsv_min_max_clip_mask"], [178, 1, 1, "", "threshold_channel"]], "draugr.opencv_utilities.color_space.threshold.ThresholdMethodEnum": [[176, 3, 1, "", "__init__"]], "draugr.opencv_utilities.drawing": [[180, 0, 0, "-", "draw_boxes"], [184, 0, 0, "-", "masks"], [190, 0, 0, "-", "opencv_draw"], [193, 0, 0, "-", "opencv_drawing_utilities"]], "draugr.opencv_utilities.drawing.draw_boxes": [[181, 1, 1, "", "draw_bounding_boxes"], [182, 1, 1, "", "draw_single_box"], [183, 1, 1, "", "draw_single_rect"]], "draugr.opencv_utilities.drawing.masks": [[185, 0, 0, "-", "gauss_circles"], [189, 0, 0, "-", "segment_ellipse"]], "draugr.opencv_utilities.drawing.masks.gauss_circles": [[186, 1, 1, "", "ellipse_bbox"], [187, 1, 1, "", "make_gradient_v1"], [188, 1, 1, "", "make_gradient_v2"]], "draugr.opencv_utilities.drawing.opencv_draw": [[191, 1, 1, "", "draw_masks"], [192, 1, 1, "", "find_contours"]], "draugr.opencv_utilities.drawing.opencv_drawing_utilities": [[194, 1, 1, "", "cube_3d_matrix"], [195, 1, 1, "", "draw_axis"], [196, 1, 1, "", "draw_cube"]], "draugr.opencv_utilities.namespaces": [[198, 0, 0, "-", "color_conversion_enum"], [200, 0, 0, "-", "enums"], [221, 0, 0, "-", "flags"]], "draugr.opencv_utilities.namespaces.color_conversion_enum": [[199, 2, 1, "", "ColorConversionEnum"]], "draugr.opencv_utilities.namespaces.color_conversion_enum.ColorConversionEnum": [[199, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums": [[201, 2, 1, "", "BorderTypeEnum"], [202, 2, 1, "", "CameraPropertyEnum"], [203, 2, 1, "", "ComparisonEnum"], [204, 2, 1, "", "ContourApproximationModeEnum"], [205, 2, 1, "", "ContourRetrievalModeEnum"], [206, 2, 1, "", "DataTypeEnum"], [207, 2, 1, "", "DistanceTransformLabelTypeEnum"], [208, 2, 1, "", "DistanceTransformMaskEnum"], [209, 2, 1, "", "DistanceTypeEnum"], [210, 2, 1, "", "FontEnum"], [211, 2, 1, "", "HoughModeEnum"], [212, 2, 1, "", "KmeansEnum"], [213, 2, 1, "", "LineTypeEnum"], [214, 2, 1, "", "MarkerTypeEnum"], [215, 2, 1, "", "MorphShapeEnum"], [216, 2, 1, "", "MorphTypeEnum"], [217, 2, 1, "", "MouseEventEnum"], [218, 2, 1, "", "RectanglesIntersectTypes"], [219, 2, 1, "", "VideoCaptureAPIEnum"], [220, 2, 1, "", "WindowFlagEnum"]], "draugr.opencv_utilities.namespaces.enums.BorderTypeEnum": [[201, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.CameraPropertyEnum": [[202, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ComparisonEnum": [[203, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourApproximationModeEnum": [[204, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.ContourRetrievalModeEnum": [[205, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DataTypeEnum": [[206, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformLabelTypeEnum": [[207, 3, 1, "", "__init__"], [207, 4, 1, "", "ccomp"], [207, 4, 1, "", "pixel"]], "draugr.opencv_utilities.namespaces.enums.DistanceTransformMaskEnum": [[208, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.DistanceTypeEnum": [[209, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.FontEnum": [[210, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.HoughModeEnum": [[211, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.KmeansEnum": [[212, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.LineTypeEnum": [[213, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MarkerTypeEnum": [[214, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphShapeEnum": [[215, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MorphTypeEnum": [[216, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.MouseEventEnum": [[217, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.RectanglesIntersectTypes": [[218, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.VideoCaptureAPIEnum": [[219, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.enums.WindowFlagEnum": [[220, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags": [[222, 2, 1, "", "DrawMatchesFlagEnum"], [223, 2, 1, "", "MouseEventFlag"], [224, 2, 1, "", "TermCriteriaFlag"], [225, 2, 1, "", "ThresholdTypeFlag"], [226, 2, 1, "", "WindowPropertyFlag"]], "draugr.opencv_utilities.namespaces.flags.DrawMatchesFlagEnum": [[222, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.MouseEventFlag": [[223, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.TermCriteriaFlag": [[224, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.ThresholdTypeFlag": [[225, 3, 1, "", "__init__"]], "draugr.opencv_utilities.namespaces.flags.WindowPropertyFlag": [[226, 3, 1, "", "__init__"]], "draugr.opencv_utilities.raster_sequences": [[228, 0, 0, "-", "async_video_stream"], [230, 0, 0, "-", "frame_annotation"], [233, 0, 0, "-", "frames"]], "draugr.opencv_utilities.raster_sequences.async_video_stream": [[229, 2, 1, "", "AsyncVideoStream"]], "draugr.opencv_utilities.raster_sequences.async_video_stream.AsyncVideoStream": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "start"]], "draugr.opencv_utilities.raster_sequences.frame_annotation": [[231, 1, 1, "", "blit_fps"], [232, 1, 1, "", "blit_numbering_raster_sequence"]], "draugr.opencv_utilities.raster_sequences.frames": [[234, 1, 1, "", "frame_generator"]], "draugr.opencv_utilities.transformation": [[236, 0, 0, "-", "cropping"], [238, 0, 0, "-", "cv2_transforms"], [257, 0, 0, "-", "resize"]], "draugr.opencv_utilities.transformation.cropping": [[237, 1, 1, "", "circle_crop"]], "draugr.opencv_utilities.transformation.cv2_transforms": [[239, 2, 1, "", "CV2Compose"], [240, 2, 1, "", "CV2ConvertColor"], [241, 2, 1, "", "CV2Expand"], [242, 2, 1, "", "CV2PhotometricDistort"], [243, 2, 1, "", "CV2RandomBrightness"], [244, 2, 1, "", "CV2RandomContrast"], [245, 2, 1, "", "CV2RandomHue"], [246, 2, 1, "", "CV2RandomLightingNoise"], [247, 2, 1, "", "CV2RandomMirror"], [248, 2, 1, "", "CV2RandomSampleCrop"], [249, 2, 1, "", "CV2RandomSaturation"], [250, 2, 1, "", "CV2Resize"], [251, 2, 1, "", "CV2SwapChannels"], [252, 2, 1, "", "CV2ToAbsoluteCoords"], [253, 2, 1, "", "CV2ToPercentCoords"], [254, 2, 1, "", "ConvertFromInts"], [255, 2, 1, "", "Lambda"], [256, 2, 1, "", "SubtractMeans"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Compose": [[239, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ConvertColor": [[240, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Expand": [[241, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2PhotometricDistort": [[242, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomBrightness": [[243, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomContrast": [[244, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomHue": [[245, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomLightingNoise": [[246, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomMirror": [[247, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSampleCrop": [[248, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2RandomSaturation": [[249, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2Resize": [[250, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2SwapChannels": [[251, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToAbsoluteCoords": [[252, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.CV2ToPercentCoords": [[253, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.ConvertFromInts": [[254, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.Lambda": [[255, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.cv2_transforms.SubtractMeans": [[256, 3, 1, "", "__init__"]], "draugr.opencv_utilities.transformation.resize": [[258, 2, 1, "", "InterpolationEnum"], [259, 1, 1, "", "cv2_resize"]], "draugr.opencv_utilities.transformation.resize.InterpolationEnum": [[258, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows": [[261, 0, 0, "-", "color_picker"], [263, 0, 0, "-", "default"], [266, 0, 0, "-", "elements"], [269, 0, 0, "-", "hough_circles"], [271, 0, 0, "-", "image"]], "draugr.opencv_utilities.windows.color_picker": [[262, 1, 1, "", "interactive_hsv_color_picker"]], "draugr.opencv_utilities.windows.default": [[264, 2, 1, "", "ExtensionEnum"], [265, 1, 1, "", "match_return_code"]], "draugr.opencv_utilities.windows.default.ExtensionEnum": [[264, 3, 1, "", "__init__"]], "draugr.opencv_utilities.windows.elements": [[267, 0, 0, "-", "trackbar"]], "draugr.opencv_utilities.windows.elements.trackbar": [[268, 1, 1, "", "add_trackbar"]], "draugr.opencv_utilities.windows.hough_circles": [[270, 1, 1, "", "interactive_hough_circles"]], "draugr.opencv_utilities.windows.image": [[272, 1, 1, "", "show_image"]], "draugr.os_utilities": [[274, 0, 0, "-", "cuda_device"], [278, 0, 0, "-", "linux_utilities"], [310, 0, 0, "-", "mac_utilities"], [311, 0, 0, "-", "platform_selection"], [313, 0, 0, "-", "resource_utilities"], [326, 0, 0, "-", "screen_resolution"], [334, 0, 0, "-", "service"]], "draugr.os_utilities.cuda_device": [[275, 2, 1, "", "DeviceOrderEnum"], [276, 1, 1, "", "set_cuda_device_order"], [277, 1, 1, "", "set_cuda_visible_devices"]], "draugr.os_utilities.cuda_device.DeviceOrderEnum": [[275, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities": [[279, 0, 0, "-", "gnome_utilities"], [282, 0, 0, "-", "gtk_utilities"], [287, 0, 0, "-", "mac_utilities"], [288, 0, 0, "-", "systemd_utilities"], [305, 0, 0, "-", "user_utilities"]], "draugr.os_utilities.linux_utilities.gnome_utilities": [[280, 0, 0, "-", "dark_mode"]], "draugr.os_utilities.linux_utilities.gnome_utilities.dark_mode": [[281, 1, 1, "", "is_dark_mode_active"]], "draugr.os_utilities.linux_utilities.gtk_utilities": [[283, 0, 0, "-", "gtk_settings"], [285, 0, 0, "-", "theme_preferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings": [[284, 2, 1, "", "GtkSettings"]], "draugr.os_utilities.linux_utilities.gtk_utilities.gtk_settings.GtkSettings": [[284, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences": [[286, 2, 1, "", "GtkThemePreferences"]], "draugr.os_utilities.linux_utilities.gtk_utilities.theme_preferences.GtkThemePreferences": [[286, 3, 1, "", "__init__"], [286, 5, 1, "", "prefer_dark_mode"], [286, 5, 1, "", "theme"]], "draugr.os_utilities.linux_utilities.systemd_utilities": [[289, 0, 0, "-", "exclude"], [294, 0, 0, "-", "service_management"], [304, 0, 0, "-", "service_template"]], "draugr.os_utilities.linux_utilities.systemd_utilities.exclude": [[290, 0, 0, "-", "amdroc"], [291, 0, 0, "-", "deprecated"], [292, 0, 0, "-", "docker_inspection"], [293, 0, 0, "-", "psystemd"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management": [[295, 2, 1, "", "RunAsEnum"], [296, 1, 1, "", "disable_service"], [297, 1, 1, "", "enable_service"], [298, 1, 1, "", "install_service"], [299, 1, 1, "", "remove_service"], [300, 1, 1, "", "restart_service"], [301, 1, 1, "", "start_service"], [302, 1, 1, "", "status_service"], [303, 1, 1, "", "stop_service"]], "draugr.os_utilities.linux_utilities.systemd_utilities.service_management.RunAsEnum": [[295, 3, 1, "", "__init__"]], "draugr.os_utilities.linux_utilities.user_utilities": [[306, 1, 1, "", "change_home_dir"], [307, 1, 1, "", "change_passwd"], [308, 1, 1, "", "make_user"], [309, 1, 1, "", "remove_user"]], "draugr.os_utilities.platform_selection": [[312, 1, 1, "", "get_backend_module"]], "draugr.os_utilities.resource_utilities": [[314, 0, 0, "-", "all"], [323, 0, 0, "-", "gpu"], [324, 0, 0, "-", "ram"]], "draugr.os_utilities.resource_utilities.all": [[315, 1, 1, "", "get_num_instances"]], "draugr.os_utilities.resource_utilities.cpu": [[317, 2, 1, "", "WorkerSession"], [318, 1, 1, "", "release_worker_cores"], [319, 1, 1, "", "request_worker_cores"], [320, 1, 1, "", "reset_worker_tracker"], [321, 1, 1, "", "worker_cores_available"], [322, 1, 1, "", "worker_cores_in_use"]], "draugr.os_utilities.resource_utilities.cpu.WorkerSession": [[317, 3, 1, "", "__init__"]], "draugr.os_utilities.resource_utilities.ram": [[325, 1, 1, "", "num_instance_no_paging"]], "draugr.os_utilities.screen_resolution": [[327, 1, 1, "", "get_screen_resolution"], [328, 1, 1, "", "screen_res_gtk"], [329, 1, 1, "", "screen_res_mac"], [330, 1, 1, "", "screen_res_pygame"], [331, 1, 1, "", "screen_res_tk"], [332, 1, 1, "", "screen_res_win"], [333, 1, 1, "", "screen_res_xlib"]], "draugr.os_utilities.service": [[335, 1, 1, "", "add_service"], [336, 1, 1, "", "remove_service"]], "draugr.pandas_utilities": [[338, 0, 0, "-", "formatting"], [340, 0, 0, "-", "from_dict"], [344, 0, 0, "-", "latex_mean_std"], [349, 0, 0, "-", "misc_utilities"], [353, 0, 0, "-", "multi_index_utilities"], [355, 0, 0, "-", "styling"]], "draugr.pandas_utilities.formatting": [[339, 1, 1, "", "pandas_mean_std_bold_formatter"]], "draugr.pandas_utilities.from_dict": [[341, 1, 1, "", "nested_dict_to_four_level_column_df"], [342, 1, 1, "", "nested_dict_to_three_level_column_df"], [343, 1, 1, "", "nested_dict_to_two_level_column_df"]], "draugr.pandas_utilities.latex_mean_std": [[345, 1, 1, "", "pandas_format_bold_max_row_latex"], [346, 1, 1, "", "pandas_mean_std"], [347, 1, 1, "", "pandas_mean_std_to_str"], [348, 1, 1, "", "pandas_to_latex_clean"]], "draugr.pandas_utilities.misc_utilities": [[350, 2, 1, "", "ChainedAssignmentOptionEnum"], [351, 2, 1, "", "ExportMethodEnum"], [352, 1, 1, "", "duplicate_columns"]], "draugr.pandas_utilities.misc_utilities.ChainedAssignmentOptionEnum": [[350, 3, 1, "", "__init__"]], "draugr.pandas_utilities.misc_utilities.ExportMethodEnum": [[351, 3, 1, "", "__init__"]], "draugr.pandas_utilities.multi_index_utilities": [[354, 1, 1, "", "add_index_level"]], "draugr.pandas_utilities.styling": [[356, 2, 1, "", "AttrEnum"], [357, 2, 1, "", "ColorEnum"], [358, 2, 1, "", "NDFrameExtremeEnum"], [359, 1, 1, "", "color_highlight_extreme"], [360, 1, 1, "", "color_negative_red"]], "draugr.pandas_utilities.styling.AttrEnum": [[356, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.ColorEnum": [[357, 3, 1, "", "__init__"]], "draugr.pandas_utilities.styling.NDFrameExtremeEnum": [[358, 3, 1, "", "__init__"]], "draugr.pygame_utilities": [[362, 0, 0, "-", "screen"]], "draugr.pygame_utilities.screen": [[363, 1, 1, "", "get_screen_resolution"]], "draugr.python_utilities": [[365, 0, 0, "-", "broadcasting"], [367, 0, 0, "-", "exclude"], [375, 0, 0, "-", "function_wrappers"], [389, 0, 0, "-", "http"], [391, 0, 0, "-", "sockets"], [395, 0, 0, "-", "torch_like_channel_transformation"]], "draugr.python_utilities.broadcasting": [[366, 2, 1, "", "BroadcastNone"]], "draugr.python_utilities.broadcasting.BroadcastNone": [[366, 3, 1, "", "__init__"], [366, 3, 1, "", "mro"]], "draugr.python_utilities.exclude": [[368, 0, 0, "-", "packages"], [372, 0, 0, "-", "worker"]], "draugr.python_utilities.exclude.packages": [[369, 1, 1, "", "a"], [370, 1, 1, "", "b"], [371, 1, 1, "", "c"]], "draugr.python_utilities.exclude.worker": [[373, 1, 1, "", "main"], [374, 1, 1, "", "spawn"]], "draugr.python_utilities.function_wrappers": [[376, 1, 1, "", "max_frequency"], [377, 1, 1, "", "min_interval_wrapper"], [378, 1, 1, "", "min_interval_wrapper_global"], [379, 1, 1, "", "wrap_args"]], "draugr.python_utilities.generators": [[381, 0, 0, "-", "batching_generator"], [386, 0, 0, "-", "recycling_generator"]], "draugr.python_utilities.generators.batching_generator": [[382, 1, 1, "", "batch_generator"], [383, 1, 1, "", "random_batches"], [384, 1, 1, "", "shuffled_batches"], [385, 1, 1, "", "sized_batch"]], "draugr.python_utilities.generators.recycling_generator": [[387, 1, 1, "", "batched_recycle"], [388, 1, 1, "", "recycle"]], "draugr.python_utilities.http": [[390, 2, 1, "", "HttpMethodEnum"]], "draugr.python_utilities.http.HttpMethodEnum": [[390, 3, 1, "", "__init__"]], "draugr.python_utilities.sockets": [[392, 1, 1, "", "find_unclaimed_port"], [393, 1, 1, "", "get_host_ip"], [394, 1, 1, "", "is_port_in_use"]], "draugr.python_utilities.torch_like_channel_transformation": [[396, 1, 1, "", "reverse_torch_vision_normalize_batch_nchw"], [397, 1, 1, "", "rgb_drop_alpha_batch_nhwc"], [398, 1, 1, "", "rgb_drop_alpha_hwc"], [399, 1, 1, "", "torch_vision_normalize_batch_nchw"]], "draugr.random_utilities": [[401, 0, 0, "-", "seeding"]], "draugr.random_utilities.seeding": [[402, 1, 1, "", "seed_stack"]], "draugr.scipy_utilities": [[404, 0, 0, "-", "scipy_utilities"], [407, 0, 0, "-", "signal_processing"], [408, 0, 0, "-", "subsampling"]], "draugr.scipy_utilities.scipy_utilities": [[405, 1, 1, "", "read_normalised_wave"], [406, 1, 1, "", "write_normalised_wave"]], "draugr.scipy_utilities.subsampling": [[409, 1, 1, "", "fft_subsample"], [410, 1, 1, "", "fir_subsample"], [411, 1, 1, "", "mag_decimation_subsample"], [412, 1, 1, "", "max_decimation_subsample"], [413, 1, 1, "", "min_decimation_subsample"]], "draugr.stopping": [[415, 0, 0, "-", "stopping_key"]], "draugr.stopping.stopping_key": [[416, 2, 1, "", "CaptureEarlyStop"], [417, 1, 1, "", "add_early_stopping_key_combination"]], "draugr.stopping.stopping_key.CaptureEarlyStop": [[416, 3, 1, "", "__init__"]], "draugr.threading_utilities": [[419, 0, 0, "-", "exclude"], [420, 0, 0, "-", "skipper"]], "draugr.threading_utilities.skipper": [[421, 2, 1, "", "Skipper"]], "draugr.threading_utilities.skipper.Skipper": [[421, 3, 1, "", "__init__"]], "draugr.torch_utilities": [[423, 0, 0, "-", "architectures"], [452, 0, 0, "-", "datasets"], [466, 0, 0, "-", "distributions"], [473, 0, 0, "-", "evaluation"], [478, 0, 0, "-", "exporting"], [481, 0, 0, "-", "generators"], [485, 0, 0, "-", "images"], [493, 0, 0, "-", "opencv"], [497, 0, 0, "-", "operations"], [519, 0, 0, "-", "optimisation"], [556, 0, 0, "-", "persistence"], [595, 0, 0, "-", "system"], [617, 0, 0, "-", "tensors"]], "draugr.torch_utilities.architectures": [[424, 0, 0, "-", "architecture"], [426, 0, 0, "-", "distributional"], [435, 0, 0, "-", "experimental"], [442, 0, 0, "-", "mlp"], [444, 0, 0, "-", "mlp_variants"]], "draugr.torch_utilities.architectures.architecture": [[425, 2, 1, "", "Architecture"]], "draugr.torch_utilities.architectures.architecture.Architecture": [[425, 3, 1, "", "__init__"], [425, 3, 1, "", "add_module"], [425, 3, 1, "", "apply"], [425, 3, 1, "", "bfloat16"], [425, 3, 1, "", "buffers"], [425, 3, 1, "", "children"], [425, 3, 1, "", "cpu"], [425, 3, 1, "", "cuda"], [425, 3, 1, "", "double"], [425, 4, 1, "", "dump_patches"], [425, 3, 1, "", "eval"], [425, 3, 1, "", "extra_repr"], [425, 3, 1, "", "float"], [425, 3, 1, "", "forward"], [425, 3, 1, "", "get_buffer"], [425, 3, 1, "", "get_extra_state"], [425, 3, 1, "", "get_parameter"], [425, 3, 1, "", "get_submodule"], [425, 3, 1, "", "half"], [425, 5, 1, "", "input_shape"], [425, 3, 1, "", "load_state_dict"], [425, 3, 1, "", "modules"], [425, 3, 1, "", "named_buffers"], [425, 3, 1, "", "named_children"], [425, 3, 1, "", "named_modules"], [425, 3, 1, "", "named_parameters"], [425, 5, 1, "", "output_shape"], [425, 3, 1, "", "parameters"], [425, 3, 1, "", "register_backward_hook"], [425, 3, 1, "", "register_buffer"], [425, 3, 1, "", "register_forward_hook"], [425, 3, 1, "", "register_forward_pre_hook"], [425, 3, 1, "", "register_full_backward_hook"], [425, 3, 1, "", "register_module"], [425, 3, 1, "", "register_parameter"], [425, 3, 1, "", "requires_grad_"], [425, 3, 1, "", "sample_input"], [425, 3, 1, "", "set_extra_state"], [425, 3, 1, "", "share_memory"], [425, 3, 1, "", "state_dict"], [425, 3, 1, "", "to"], [425, 3, 1, "", "to_empty"], [425, 3, 1, "", "train"], [425, 3, 1, "", "type"], [425, 3, 1, "", "xpu"], [425, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional": [[427, 0, 0, "-", "categorical"], [430, 0, 0, "-", "normal"]], "draugr.torch_utilities.architectures.distributional.categorical": [[428, 2, 1, "", "CategoricalMLP"], [429, 2, 1, "", "MultipleCategoricalMLP"]], "draugr.torch_utilities.architectures.distributional.categorical.CategoricalMLP": [[428, 3, 1, "", "__init__"], [428, 3, 1, "", "add_module"], [428, 3, 1, "", "apply"], [428, 3, 1, "", "bfloat16"], [428, 3, 1, "", "buffers"], [428, 3, 1, "", "children"], [428, 3, 1, "", "construct_progressive_hidden_layers"], [428, 3, 1, "", "cpu"], [428, 3, 1, "", "cuda"], [428, 3, 1, "", "double"], [428, 4, 1, "", "dump_patches"], [428, 3, 1, "", "eval"], [428, 3, 1, "", "extra_repr"], [428, 3, 1, "", "float"], [428, 3, 1, "", "forward"], [428, 3, 1, "", "get_buffer"], [428, 3, 1, "", "get_extra_state"], [428, 3, 1, "", "get_parameter"], [428, 3, 1, "", "get_submodule"], [428, 3, 1, "", "half"], [428, 3, 1, "", "infer_input_shape"], [428, 3, 1, "", "infer_output_shape"], [428, 5, 1, "", "input_shape"], [428, 3, 1, "", "load_state_dict"], [428, 3, 1, "", "modules"], [428, 3, 1, "", "named_buffers"], [428, 3, 1, "", "named_children"], [428, 3, 1, "", "named_modules"], [428, 3, 1, "", "named_parameters"], [428, 5, 1, "", "output_shape"], [428, 3, 1, "", "parameters"], [428, 3, 1, "", "register_backward_hook"], [428, 3, 1, "", "register_buffer"], [428, 3, 1, "", "register_forward_hook"], [428, 3, 1, "", "register_forward_pre_hook"], [428, 3, 1, "", "register_full_backward_hook"], [428, 3, 1, "", "register_module"], [428, 3, 1, "", "register_parameter"], [428, 3, 1, "", "requires_grad_"], [428, 3, 1, "", "sample_input"], [428, 3, 1, "", "set_extra_state"], [428, 3, 1, "", "share_memory"], [428, 3, 1, "", "state_dict"], [428, 3, 1, "", "to"], [428, 3, 1, "", "to_empty"], [428, 3, 1, "", "train"], [428, 3, 1, "", "type"], [428, 3, 1, "", "xpu"], [428, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.categorical.MultipleCategoricalMLP": [[429, 3, 1, "", "__init__"], [429, 3, 1, "", "add_module"], [429, 3, 1, "", "apply"], [429, 3, 1, "", "bfloat16"], [429, 3, 1, "", "buffers"], [429, 3, 1, "", "children"], [429, 3, 1, "", "construct_progressive_hidden_layers"], [429, 3, 1, "", "cpu"], [429, 3, 1, "", "cuda"], [429, 3, 1, "", "double"], [429, 4, 1, "", "dump_patches"], [429, 3, 1, "", "entropy"], [429, 3, 1, "", "eval"], [429, 3, 1, "", "extra_repr"], [429, 3, 1, "", "float"], [429, 3, 1, "", "forward"], [429, 3, 1, "", "get_buffer"], [429, 3, 1, "", "get_extra_state"], [429, 3, 1, "", "get_parameter"], [429, 3, 1, "", "get_submodule"], [429, 3, 1, "", "half"], [429, 3, 1, "", "infer_input_shape"], [429, 3, 1, "", "infer_output_shape"], [429, 5, 1, "", "input_shape"], [429, 3, 1, "", "load_state_dict"], [429, 3, 1, "", "modules"], [429, 3, 1, "", "named_buffers"], [429, 3, 1, "", "named_children"], [429, 3, 1, "", "named_modules"], [429, 3, 1, "", "named_parameters"], [429, 5, 1, "", "output_shape"], [429, 3, 1, "", "parameters"], [429, 3, 1, "", "register_backward_hook"], [429, 3, 1, "", "register_buffer"], [429, 3, 1, "", "register_forward_hook"], [429, 3, 1, "", "register_forward_pre_hook"], [429, 3, 1, "", "register_full_backward_hook"], [429, 3, 1, "", "register_module"], [429, 3, 1, "", "register_parameter"], [429, 3, 1, "", "requires_grad_"], [429, 3, 1, "", "sample"], [429, 3, 1, "", "sample_input"], [429, 3, 1, "", "set_extra_state"], [429, 3, 1, "", "share_memory"], [429, 3, 1, "", "state_dict"], [429, 3, 1, "", "to"], [429, 3, 1, "", "to_empty"], [429, 3, 1, "", "train"], [429, 3, 1, "", "type"], [429, 3, 1, "", "xpu"], [429, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal": [[431, 2, 1, "", "MultiDimensionalNormalMLP"], [432, 2, 1, "", "MultiVariateNormalMLP"], [433, 2, 1, "", "MultipleNormalMLP"], [434, 2, 1, "", "ShallowStdNormalMLP"]], "draugr.torch_utilities.architectures.distributional.normal.MultiDimensionalNormalMLP": [[431, 3, 1, "", "__init__"], [431, 3, 1, "", "add_module"], [431, 3, 1, "", "apply"], [431, 3, 1, "", "bfloat16"], [431, 3, 1, "", "buffers"], [431, 3, 1, "", "children"], [431, 3, 1, "", "construct_progressive_hidden_layers"], [431, 3, 1, "", "cpu"], [431, 3, 1, "", "cuda"], [431, 3, 1, "", "double"], [431, 4, 1, "", "dump_patches"], [431, 3, 1, "", "eval"], [431, 3, 1, "", "extra_repr"], [431, 3, 1, "", "float"], [431, 3, 1, "", "forward"], [431, 3, 1, "", "get_buffer"], [431, 3, 1, "", "get_extra_state"], [431, 3, 1, "", "get_parameter"], [431, 3, 1, "", "get_submodule"], [431, 3, 1, "", "half"], [431, 3, 1, "", "infer_input_shape"], [431, 3, 1, "", "infer_output_shape"], [431, 5, 1, "", "input_shape"], [431, 3, 1, "", "load_state_dict"], [431, 3, 1, "", "modules"], [431, 3, 1, "", "named_buffers"], [431, 3, 1, "", "named_children"], [431, 3, 1, "", "named_modules"], [431, 3, 1, "", "named_parameters"], [431, 5, 1, "", "output_shape"], [431, 3, 1, "", "parameters"], [431, 3, 1, "", "register_backward_hook"], [431, 3, 1, "", "register_buffer"], [431, 3, 1, "", "register_forward_hook"], [431, 3, 1, "", "register_forward_pre_hook"], [431, 3, 1, "", "register_full_backward_hook"], [431, 3, 1, "", "register_module"], [431, 3, 1, "", "register_parameter"], [431, 3, 1, "", "requires_grad_"], [431, 3, 1, "", "sample_input"], [431, 3, 1, "", "set_extra_state"], [431, 3, 1, "", "share_memory"], [431, 3, 1, "", "state_dict"], [431, 3, 1, "", "to"], [431, 3, 1, "", "to_empty"], [431, 3, 1, "", "train"], [431, 3, 1, "", "type"], [431, 3, 1, "", "xpu"], [431, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultiVariateNormalMLP": [[432, 3, 1, "", "__init__"], [432, 3, 1, "", "add_module"], [432, 3, 1, "", "apply"], [432, 3, 1, "", "bfloat16"], [432, 3, 1, "", "buffers"], [432, 3, 1, "", "children"], [432, 3, 1, "", "construct_progressive_hidden_layers"], [432, 3, 1, "", "cpu"], [432, 3, 1, "", "cuda"], [432, 3, 1, "", "double"], [432, 4, 1, "", "dump_patches"], [432, 3, 1, "", "eval"], [432, 3, 1, "", "extra_repr"], [432, 3, 1, "", "float"], [432, 3, 1, "", "forward"], [432, 3, 1, "", "get_buffer"], [432, 3, 1, "", "get_extra_state"], [432, 3, 1, "", "get_parameter"], [432, 3, 1, "", "get_submodule"], [432, 3, 1, "", "half"], [432, 3, 1, "", "infer_input_shape"], [432, 3, 1, "", "infer_output_shape"], [432, 5, 1, "", "input_shape"], [432, 3, 1, "", "load_state_dict"], [432, 3, 1, "", "modules"], [432, 3, 1, "", "named_buffers"], [432, 3, 1, "", "named_children"], [432, 3, 1, "", "named_modules"], [432, 3, 1, "", "named_parameters"], [432, 5, 1, "", "output_shape"], [432, 3, 1, "", "parameters"], [432, 3, 1, "", "register_backward_hook"], [432, 3, 1, "", "register_buffer"], [432, 3, 1, "", "register_forward_hook"], [432, 3, 1, "", "register_forward_pre_hook"], [432, 3, 1, "", "register_full_backward_hook"], [432, 3, 1, "", "register_module"], [432, 3, 1, "", "register_parameter"], [432, 3, 1, "", "requires_grad_"], [432, 3, 1, "", "sample_input"], [432, 3, 1, "", "set_extra_state"], [432, 3, 1, "", "share_memory"], [432, 3, 1, "", "state_dict"], [432, 3, 1, "", "to"], [432, 3, 1, "", "to_empty"], [432, 3, 1, "", "train"], [432, 3, 1, "", "type"], [432, 3, 1, "", "xpu"], [432, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.MultipleNormalMLP": [[433, 3, 1, "", "__init__"], [433, 3, 1, "", "add_module"], [433, 3, 1, "", "apply"], [433, 3, 1, "", "bfloat16"], [433, 3, 1, "", "buffers"], [433, 3, 1, "", "children"], [433, 3, 1, "", "construct_progressive_hidden_layers"], [433, 3, 1, "", "cpu"], [433, 3, 1, "", "cuda"], [433, 3, 1, "", "double"], [433, 4, 1, "", "dump_patches"], [433, 3, 1, "", "eval"], [433, 3, 1, "", "extra_repr"], [433, 3, 1, "", "float"], [433, 3, 1, "", "forward"], [433, 3, 1, "", "get_buffer"], [433, 3, 1, "", "get_extra_state"], [433, 3, 1, "", "get_parameter"], [433, 3, 1, "", "get_submodule"], [433, 3, 1, "", "half"], [433, 3, 1, "", "infer_input_shape"], [433, 3, 1, "", "infer_output_shape"], [433, 5, 1, "", "input_shape"], [433, 3, 1, "", "load_state_dict"], [433, 3, 1, "", "modules"], [433, 3, 1, "", "named_buffers"], [433, 3, 1, "", "named_children"], [433, 3, 1, "", "named_modules"], [433, 3, 1, "", "named_parameters"], [433, 5, 1, "", "output_shape"], [433, 3, 1, "", "parameters"], [433, 3, 1, "", "register_backward_hook"], [433, 3, 1, "", "register_buffer"], [433, 3, 1, "", "register_forward_hook"], [433, 3, 1, "", "register_forward_pre_hook"], [433, 3, 1, "", "register_full_backward_hook"], [433, 3, 1, "", "register_module"], [433, 3, 1, "", "register_parameter"], [433, 3, 1, "", "requires_grad_"], [433, 3, 1, "", "sample_input"], [433, 3, 1, "", "set_extra_state"], [433, 3, 1, "", "share_memory"], [433, 3, 1, "", "state_dict"], [433, 3, 1, "", "to"], [433, 3, 1, "", "to_empty"], [433, 3, 1, "", "train"], [433, 3, 1, "", "type"], [433, 3, 1, "", "xpu"], [433, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.distributional.normal.ShallowStdNormalMLP": [[434, 3, 1, "", "__init__"], [434, 3, 1, "", "add_module"], [434, 3, 1, "", "apply"], [434, 3, 1, "", "bfloat16"], [434, 3, 1, "", "buffers"], [434, 3, 1, "", "children"], [434, 3, 1, "", "construct_progressive_hidden_layers"], [434, 3, 1, "", "cpu"], [434, 3, 1, "", "cuda"], [434, 3, 1, "", "double"], [434, 4, 1, "", "dump_patches"], [434, 3, 1, "", "eval"], [434, 3, 1, "", "extra_repr"], [434, 3, 1, "", "float"], [434, 3, 1, "", "forward"], [434, 3, 1, "", "get_buffer"], [434, 3, 1, "", "get_extra_state"], [434, 3, 1, "", "get_parameter"], [434, 3, 1, "", "get_submodule"], [434, 3, 1, "", "half"], [434, 3, 1, "", "infer_input_shape"], [434, 3, 1, "", "infer_output_shape"], [434, 5, 1, "", "input_shape"], [434, 3, 1, "", "load_state_dict"], [434, 3, 1, "", "modules"], [434, 3, 1, "", "named_buffers"], [434, 3, 1, "", "named_children"], [434, 3, 1, "", "named_modules"], [434, 3, 1, "", "named_parameters"], [434, 5, 1, "", "output_shape"], [434, 3, 1, "", "parameters"], [434, 3, 1, "", "register_backward_hook"], [434, 3, 1, "", "register_buffer"], [434, 3, 1, "", "register_forward_hook"], [434, 3, 1, "", "register_forward_pre_hook"], [434, 3, 1, "", "register_full_backward_hook"], [434, 3, 1, "", "register_module"], [434, 3, 1, "", "register_parameter"], [434, 3, 1, "", "requires_grad_"], [434, 3, 1, "", "sample_input"], [434, 3, 1, "", "set_extra_state"], [434, 3, 1, "", "share_memory"], [434, 3, 1, "", "state_dict"], [434, 3, 1, "", "to"], [434, 3, 1, "", "to_empty"], [434, 3, 1, "", "train"], [434, 3, 1, "", "type"], [434, 3, 1, "", "xpu"], [434, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental": [[436, 0, 0, "-", "heads"], [438, 0, 0, "-", "recurrent"]], "draugr.torch_utilities.architectures.experimental.heads": [[437, 2, 1, "", "MultiHeadedMLP"]], "draugr.torch_utilities.architectures.experimental.heads.MultiHeadedMLP": [[437, 3, 1, "", "__init__"], [437, 3, 1, "", "add_module"], [437, 3, 1, "", "apply"], [437, 3, 1, "", "bfloat16"], [437, 3, 1, "", "buffers"], [437, 3, 1, "", "children"], [437, 3, 1, "", "construct_progressive_hidden_layers"], [437, 3, 1, "", "cpu"], [437, 3, 1, "", "cuda"], [437, 3, 1, "", "double"], [437, 4, 1, "", "dump_patches"], [437, 3, 1, "", "eval"], [437, 3, 1, "", "extra_repr"], [437, 3, 1, "", "float"], [437, 3, 1, "", "forward"], [437, 3, 1, "", "get_buffer"], [437, 3, 1, "", "get_extra_state"], [437, 3, 1, "", "get_parameter"], [437, 3, 1, "", "get_submodule"], [437, 3, 1, "", "half"], [437, 3, 1, "", "infer_input_shape"], [437, 3, 1, "", "infer_output_shape"], [437, 5, 1, "", "input_shape"], [437, 3, 1, "", "load_state_dict"], [437, 3, 1, "", "modules"], [437, 3, 1, "", "named_buffers"], [437, 3, 1, "", "named_children"], [437, 3, 1, "", "named_modules"], [437, 3, 1, "", "named_parameters"], [437, 5, 1, "", "output_shape"], [437, 3, 1, "", "parameters"], [437, 3, 1, "", "register_backward_hook"], [437, 3, 1, "", "register_buffer"], [437, 3, 1, "", "register_forward_hook"], [437, 3, 1, "", "register_forward_pre_hook"], [437, 3, 1, "", "register_full_backward_hook"], [437, 3, 1, "", "register_module"], [437, 3, 1, "", "register_parameter"], [437, 3, 1, "", "requires_grad_"], [437, 3, 1, "", "sample_input"], [437, 3, 1, "", "set_extra_state"], [437, 3, 1, "", "share_memory"], [437, 3, 1, "", "state_dict"], [437, 3, 1, "", "to"], [437, 3, 1, "", "to_empty"], [437, 3, 1, "", "train"], [437, 3, 1, "", "type"], [437, 3, 1, "", "xpu"], [437, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent": [[439, 2, 1, "", "ExposedRecurrentCategoricalMLP"], [440, 2, 1, "", "RecurrentBase"], [441, 2, 1, "", "RecurrentCategoricalMLP"]], "draugr.torch_utilities.architectures.experimental.recurrent.ExposedRecurrentCategoricalMLP": [[439, 3, 1, "", "__init__"], [439, 3, 1, "", "add_module"], [439, 3, 1, "", "apply"], [439, 3, 1, "", "bfloat16"], [439, 3, 1, "", "buffers"], [439, 3, 1, "", "children"], [439, 3, 1, "", "construct_progressive_hidden_layers"], [439, 3, 1, "", "cpu"], [439, 3, 1, "", "cuda"], [439, 3, 1, "", "double"], [439, 4, 1, "", "dump_patches"], [439, 3, 1, "", "eval"], [439, 3, 1, "", "extra_repr"], [439, 3, 1, "", "float"], [439, 3, 1, "", "forward"], [439, 3, 1, "", "get_buffer"], [439, 3, 1, "", "get_extra_state"], [439, 3, 1, "", "get_parameter"], [439, 3, 1, "", "get_submodule"], [439, 3, 1, "", "half"], [439, 3, 1, "", "infer_input_shape"], [439, 3, 1, "", "infer_output_shape"], [439, 5, 1, "", "input_shape"], [439, 3, 1, "", "load_state_dict"], [439, 3, 1, "", "modules"], [439, 3, 1, "", "named_buffers"], [439, 3, 1, "", "named_children"], [439, 3, 1, "", "named_modules"], [439, 3, 1, "", "named_parameters"], [439, 5, 1, "", "output_shape"], [439, 3, 1, "", "parameters"], [439, 3, 1, "", "register_backward_hook"], [439, 3, 1, "", "register_buffer"], [439, 3, 1, "", "register_forward_hook"], [439, 3, 1, "", "register_forward_pre_hook"], [439, 3, 1, "", "register_full_backward_hook"], [439, 3, 1, "", "register_module"], [439, 3, 1, "", "register_parameter"], [439, 3, 1, "", "requires_grad_"], [439, 3, 1, "", "sample_input"], [439, 3, 1, "", "set_extra_state"], [439, 3, 1, "", "share_memory"], [439, 3, 1, "", "state_dict"], [439, 3, 1, "", "to"], [439, 3, 1, "", "to_empty"], [439, 3, 1, "", "train"], [439, 3, 1, "", "type"], [439, 3, 1, "", "xpu"], [439, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentBase": [[440, 3, 1, "", "__init__"], [440, 3, 1, "", "add_module"], [440, 3, 1, "", "apply"], [440, 3, 1, "", "bfloat16"], [440, 3, 1, "", "buffers"], [440, 3, 1, "", "children"], [440, 3, 1, "", "cpu"], [440, 3, 1, "", "cuda"], [440, 3, 1, "", "double"], [440, 4, 1, "", "dump_patches"], [440, 3, 1, "", "eval"], [440, 3, 1, "", "extra_repr"], [440, 3, 1, "", "float"], [440, 3, 1, "", "forward"], [440, 3, 1, "", "get_buffer"], [440, 3, 1, "", "get_extra_state"], [440, 3, 1, "", "get_parameter"], [440, 3, 1, "", "get_submodule"], [440, 3, 1, "", "half"], [440, 3, 1, "", "load_state_dict"], [440, 3, 1, "", "modules"], [440, 3, 1, "", "named_buffers"], [440, 3, 1, "", "named_children"], [440, 3, 1, "", "named_modules"], [440, 3, 1, "", "named_parameters"], [440, 3, 1, "", "parameters"], [440, 3, 1, "", "register_backward_hook"], [440, 3, 1, "", "register_buffer"], [440, 3, 1, "", "register_forward_hook"], [440, 3, 1, "", "register_forward_pre_hook"], [440, 3, 1, "", "register_full_backward_hook"], [440, 3, 1, "", "register_module"], [440, 3, 1, "", "register_parameter"], [440, 3, 1, "", "requires_grad_"], [440, 3, 1, "", "set_extra_state"], [440, 3, 1, "", "share_memory"], [440, 3, 1, "", "state_dict"], [440, 3, 1, "", "to"], [440, 3, 1, "", "to_empty"], [440, 3, 1, "", "train"], [440, 3, 1, "", "type"], [440, 3, 1, "", "xpu"], [440, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.experimental.recurrent.RecurrentCategoricalMLP": [[441, 3, 1, "", "__init__"], [441, 3, 1, "", "add_module"], [441, 3, 1, "", "apply"], [441, 3, 1, "", "bfloat16"], [441, 3, 1, "", "buffers"], [441, 3, 1, "", "children"], [441, 3, 1, "", "construct_progressive_hidden_layers"], [441, 3, 1, "", "cpu"], [441, 3, 1, "", "cuda"], [441, 3, 1, "", "double"], [441, 4, 1, "", "dump_patches"], [441, 3, 1, "", "eval"], [441, 3, 1, "", "extra_repr"], [441, 3, 1, "", "float"], [441, 3, 1, "", "forward"], [441, 3, 1, "", "get_buffer"], [441, 3, 1, "", "get_extra_state"], [441, 3, 1, "", "get_parameter"], [441, 3, 1, "", "get_submodule"], [441, 3, 1, "", "half"], [441, 3, 1, "", "infer_input_shape"], [441, 3, 1, "", "infer_output_shape"], [441, 5, 1, "", "input_shape"], [441, 3, 1, "", "load_state_dict"], [441, 3, 1, "", "modules"], [441, 3, 1, "", "named_buffers"], [441, 3, 1, "", "named_children"], [441, 3, 1, "", "named_modules"], [441, 3, 1, "", "named_parameters"], [441, 5, 1, "", "output_shape"], [441, 3, 1, "", "parameters"], [441, 3, 1, "", "register_backward_hook"], [441, 3, 1, "", "register_buffer"], [441, 3, 1, "", "register_forward_hook"], [441, 3, 1, "", "register_forward_pre_hook"], [441, 3, 1, "", "register_full_backward_hook"], [441, 3, 1, "", "register_module"], [441, 3, 1, "", "register_parameter"], [441, 3, 1, "", "requires_grad_"], [441, 3, 1, "", "sample_input"], [441, 3, 1, "", "set_extra_state"], [441, 3, 1, "", "share_memory"], [441, 3, 1, "", "state_dict"], [441, 3, 1, "", "to"], [441, 3, 1, "", "to_empty"], [441, 3, 1, "", "train"], [441, 3, 1, "", "type"], [441, 3, 1, "", "xpu"], [441, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp": [[443, 2, 1, "", "MLP"]], "draugr.torch_utilities.architectures.mlp.MLP": [[443, 3, 1, "", "__init__"], [443, 3, 1, "", "add_module"], [443, 3, 1, "", "apply"], [443, 3, 1, "", "bfloat16"], [443, 3, 1, "", "buffers"], [443, 3, 1, "", "children"], [443, 3, 1, "", "construct_progressive_hidden_layers"], [443, 3, 1, "", "cpu"], [443, 3, 1, "", "cuda"], [443, 3, 1, "", "double"], [443, 4, 1, "", "dump_patches"], [443, 3, 1, "", "eval"], [443, 3, 1, "", "extra_repr"], [443, 3, 1, "", "float"], [443, 3, 1, "", "forward"], [443, 3, 1, "", "get_buffer"], [443, 3, 1, "", "get_extra_state"], [443, 3, 1, "", "get_parameter"], [443, 3, 1, "", "get_submodule"], [443, 3, 1, "", "half"], [443, 3, 1, "", "infer_input_shape"], [443, 3, 1, "", "infer_output_shape"], [443, 5, 1, "", "input_shape"], [443, 3, 1, "", "load_state_dict"], [443, 3, 1, "", "modules"], [443, 3, 1, "", "named_buffers"], [443, 3, 1, "", "named_children"], [443, 3, 1, "", "named_modules"], [443, 3, 1, "", "named_parameters"], [443, 5, 1, "", "output_shape"], [443, 3, 1, "", "parameters"], [443, 3, 1, "", "register_backward_hook"], [443, 3, 1, "", "register_buffer"], [443, 3, 1, "", "register_forward_hook"], [443, 3, 1, "", "register_forward_pre_hook"], [443, 3, 1, "", "register_full_backward_hook"], [443, 3, 1, "", "register_module"], [443, 3, 1, "", "register_parameter"], [443, 3, 1, "", "requires_grad_"], [443, 3, 1, "", "sample_input"], [443, 3, 1, "", "set_extra_state"], [443, 3, 1, "", "share_memory"], [443, 3, 1, "", "state_dict"], [443, 3, 1, "", "to"], [443, 3, 1, "", "to_empty"], [443, 3, 1, "", "train"], [443, 3, 1, "", "type"], [443, 3, 1, "", "xpu"], [443, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants": [[445, 0, 0, "-", "concatination"], [448, 0, 0, "-", "disjunction"], [450, 0, 0, "-", "fourier"]], "draugr.torch_utilities.architectures.mlp_variants.concatination": [[446, 2, 1, "", "LateConcatInputMLP"], [447, 2, 1, "", "PreConcatInputMLP"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.LateConcatInputMLP": [[446, 3, 1, "", "__init__"], [446, 3, 1, "", "add_module"], [446, 3, 1, "", "apply"], [446, 3, 1, "", "bfloat16"], [446, 3, 1, "", "buffers"], [446, 3, 1, "", "children"], [446, 3, 1, "", "construct_progressive_hidden_layers"], [446, 3, 1, "", "cpu"], [446, 3, 1, "", "cuda"], [446, 3, 1, "", "double"], [446, 4, 1, "", "dump_patches"], [446, 3, 1, "", "eval"], [446, 3, 1, "", "extra_repr"], [446, 3, 1, "", "float"], [446, 3, 1, "", "forward"], [446, 3, 1, "", "get_buffer"], [446, 3, 1, "", "get_extra_state"], [446, 3, 1, "", "get_parameter"], [446, 3, 1, "", "get_submodule"], [446, 3, 1, "", "half"], [446, 3, 1, "", "infer_input_shape"], [446, 3, 1, "", "infer_output_shape"], [446, 5, 1, "", "input_shape"], [446, 3, 1, "", "load_state_dict"], [446, 3, 1, "", "modules"], [446, 3, 1, "", "named_buffers"], [446, 3, 1, "", "named_children"], [446, 3, 1, "", "named_modules"], [446, 3, 1, "", "named_parameters"], [446, 5, 1, "", "output_shape"], [446, 3, 1, "", "parameters"], [446, 3, 1, "", "register_backward_hook"], [446, 3, 1, "", "register_buffer"], [446, 3, 1, "", "register_forward_hook"], [446, 3, 1, "", "register_forward_pre_hook"], [446, 3, 1, "", "register_full_backward_hook"], [446, 3, 1, "", "register_module"], [446, 3, 1, "", "register_parameter"], [446, 3, 1, "", "requires_grad_"], [446, 3, 1, "", "sample_input"], [446, 3, 1, "", "set_extra_state"], [446, 3, 1, "", "share_memory"], [446, 3, 1, "", "state_dict"], [446, 3, 1, "", "to"], [446, 3, 1, "", "to_empty"], [446, 3, 1, "", "train"], [446, 3, 1, "", "type"], [446, 3, 1, "", "xpu"], [446, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.concatination.PreConcatInputMLP": [[447, 3, 1, "", "__init__"], [447, 3, 1, "", "add_module"], [447, 3, 1, "", "apply"], [447, 3, 1, "", "bfloat16"], [447, 3, 1, "", "buffers"], [447, 3, 1, "", "children"], [447, 3, 1, "", "construct_progressive_hidden_layers"], [447, 3, 1, "", "cpu"], [447, 3, 1, "", "cuda"], [447, 3, 1, "", "double"], [447, 4, 1, "", "dump_patches"], [447, 3, 1, "", "eval"], [447, 3, 1, "", "extra_repr"], [447, 3, 1, "", "float"], [447, 3, 1, "", "forward"], [447, 3, 1, "", "get_buffer"], [447, 3, 1, "", "get_extra_state"], [447, 3, 1, "", "get_parameter"], [447, 3, 1, "", "get_submodule"], [447, 3, 1, "", "half"], [447, 3, 1, "", "infer_input_shape"], [447, 3, 1, "", "infer_output_shape"], [447, 5, 1, "", "input_shape"], [447, 3, 1, "", "load_state_dict"], [447, 3, 1, "", "modules"], [447, 3, 1, "", "named_buffers"], [447, 3, 1, "", "named_children"], [447, 3, 1, "", "named_modules"], [447, 3, 1, "", "named_parameters"], [447, 5, 1, "", "output_shape"], [447, 3, 1, "", "parameters"], [447, 3, 1, "", "register_backward_hook"], [447, 3, 1, "", "register_buffer"], [447, 3, 1, "", "register_forward_hook"], [447, 3, 1, "", "register_forward_pre_hook"], [447, 3, 1, "", "register_full_backward_hook"], [447, 3, 1, "", "register_module"], [447, 3, 1, "", "register_parameter"], [447, 3, 1, "", "requires_grad_"], [447, 3, 1, "", "sample_input"], [447, 3, 1, "", "set_extra_state"], [447, 3, 1, "", "share_memory"], [447, 3, 1, "", "state_dict"], [447, 3, 1, "", "to"], [447, 3, 1, "", "to_empty"], [447, 3, 1, "", "train"], [447, 3, 1, "", "type"], [447, 3, 1, "", "xpu"], [447, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction": [[449, 2, 1, "", "DisjunctMLP"]], "draugr.torch_utilities.architectures.mlp_variants.disjunction.DisjunctMLP": [[449, 3, 1, "", "__init__"], [449, 3, 1, "", "add_module"], [449, 3, 1, "", "apply"], [449, 3, 1, "", "bfloat16"], [449, 3, 1, "", "buffers"], [449, 3, 1, "", "children"], [449, 3, 1, "", "construct_progressive_hidden_layers"], [449, 3, 1, "", "cpu"], [449, 3, 1, "", "cuda"], [449, 3, 1, "", "double"], [449, 4, 1, "", "dump_patches"], [449, 3, 1, "", "eval"], [449, 3, 1, "", "extra_repr"], [449, 3, 1, "", "float"], [449, 3, 1, "", "forward"], [449, 3, 1, "", "get_buffer"], [449, 3, 1, "", "get_extra_state"], [449, 3, 1, "", "get_parameter"], [449, 3, 1, "", "get_submodule"], [449, 3, 1, "", "half"], [449, 3, 1, "", "infer_input_shape"], [449, 3, 1, "", "infer_output_shape"], [449, 5, 1, "", "input_shape"], [449, 3, 1, "", "load_state_dict"], [449, 3, 1, "", "modules"], [449, 3, 1, "", "named_buffers"], [449, 3, 1, "", "named_children"], [449, 3, 1, "", "named_modules"], [449, 3, 1, "", "named_parameters"], [449, 5, 1, "", "output_shape"], [449, 3, 1, "", "parameters"], [449, 3, 1, "", "register_backward_hook"], [449, 3, 1, "", "register_buffer"], [449, 3, 1, "", "register_forward_hook"], [449, 3, 1, "", "register_forward_pre_hook"], [449, 3, 1, "", "register_full_backward_hook"], [449, 3, 1, "", "register_module"], [449, 3, 1, "", "register_parameter"], [449, 3, 1, "", "requires_grad_"], [449, 3, 1, "", "sample_input"], [449, 3, 1, "", "set_extra_state"], [449, 3, 1, "", "share_memory"], [449, 3, 1, "", "state_dict"], [449, 3, 1, "", "to"], [449, 3, 1, "", "to_empty"], [449, 3, 1, "", "train"], [449, 3, 1, "", "type"], [449, 3, 1, "", "xpu"], [449, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.architectures.mlp_variants.fourier": [[451, 2, 1, "", "BaseFourierFeatureMLP"]], "draugr.torch_utilities.architectures.mlp_variants.fourier.BaseFourierFeatureMLP": [[451, 3, 1, "", "__init__"], [451, 3, 1, "", "add_module"], [451, 3, 1, "", "apply"], [451, 3, 1, "", "bfloat16"], [451, 3, 1, "", "buffers"], [451, 3, 1, "", "children"], [451, 3, 1, "", "cpu"], [451, 3, 1, "", "cuda"], [451, 3, 1, "", "double"], [451, 4, 1, "", "dump_patches"], [451, 3, 1, "", "eval"], [451, 3, 1, "", "extra_repr"], [451, 3, 1, "", "float"], [451, 3, 1, "", "forward"], [451, 3, 1, "", "get_buffer"], [451, 3, 1, "", "get_extra_state"], [451, 3, 1, "", "get_parameter"], [451, 3, 1, "", "get_submodule"], [451, 3, 1, "", "half"], [451, 3, 1, "", "load_state_dict"], [451, 3, 1, "", "modules"], [451, 3, 1, "", "named_buffers"], [451, 3, 1, "", "named_children"], [451, 3, 1, "", "named_modules"], [451, 3, 1, "", "named_parameters"], [451, 3, 1, "", "parameters"], [451, 3, 1, "", "register_backward_hook"], [451, 3, 1, "", "register_buffer"], [451, 3, 1, "", "register_forward_hook"], [451, 3, 1, "", "register_forward_pre_hook"], [451, 3, 1, "", "register_full_backward_hook"], [451, 3, 1, "", "register_module"], [451, 3, 1, "", "register_parameter"], [451, 3, 1, "", "requires_grad_"], [451, 3, 1, "", "save"], [451, 3, 1, "", "set_extra_state"], [451, 3, 1, "", "share_memory"], [451, 3, 1, "", "state_dict"], [451, 3, 1, "", "to"], [451, 3, 1, "", "to_empty"], [451, 3, 1, "", "train"], [451, 3, 1, "", "type"], [451, 3, 1, "", "xpu"], [451, 3, 1, "", "zero_grad"]], "draugr.torch_utilities.datasets": [[453, 0, 0, "-", "non_sequential_dataset"], [455, 0, 0, "-", "random_dataset"], [457, 0, 0, "-", "supervised"]], "draugr.torch_utilities.datasets.non_sequential_dataset": [[454, 2, 1, "", "NonSequentialDataset"]], "draugr.torch_utilities.datasets.non_sequential_dataset.NonSequentialDataset": [[454, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.random_dataset": [[456, 2, 1, "", "RandomDataset"]], "draugr.torch_utilities.datasets.random_dataset.RandomDataset": [[456, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.supervised": [[458, 0, 0, "-", "categorical_dataset"], [460, 0, 0, "-", "supervised_dataset"], [462, 0, 0, "-", "vision_datasets"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset": [[459, 2, 1, "", "CategoricalDataset"]], "draugr.torch_utilities.datasets.supervised.categorical_dataset.CategoricalDataset": [[459, 3, 1, "", "__init__"], [459, 5, 1, "", "split_names"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset": [[461, 2, 1, "", "SupervisedDataset"]], "draugr.torch_utilities.datasets.supervised.supervised_dataset.SupervisedDataset": [[461, 3, 1, "", "__init__"], [461, 5, 1, "", "split_names"]], "draugr.torch_utilities.datasets.supervised.vision_datasets": [[463, 0, 0, "-", "dict_dataset"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset": [[464, 2, 1, "", "DictDatasetFolder"], [465, 2, 1, "", "SplitDictDatasetFolder"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.DictDatasetFolder": [[464, 3, 1, "", "__init__"]], "draugr.torch_utilities.datasets.supervised.vision_datasets.dict_dataset.SplitDictDatasetFolder": [[465, 3, 1, "", "__init__"]], "draugr.torch_utilities.distributions": [[467, 0, 0, "-", "entropy"]], "draugr.torch_utilities.distributions.entropy": [[468, 1, 1, "", "differential_entropy_gaussian"], [469, 1, 1, "", "log_shannon_entropy"], [470, 1, 1, "", "normal_entropy"], [471, 1, 1, "", "normal_log_density"], [472, 1, 1, "", "shannon_entropy"]], "draugr.torch_utilities.evaluation": [[474, 0, 0, "-", "classification"], [476, 0, 0, "-", "cross_validation"]], "draugr.torch_utilities.evaluation.classification": [[475, 1, 1, "", "find_n_misclassified"]], "draugr.torch_utilities.evaluation.cross_validation": [[477, 1, 1, "", "cross_validation_generator"]], "draugr.torch_utilities.exporting": [[479, 0, 0, "-", "summary"]], "draugr.torch_utilities.exporting.summary": [[480, 1, 1, "", "to_latex_table"]], "draugr.torch_utilities.generators": [[482, 0, 0, "-", "batching"], [484, 0, 0, "-", "to_tensor_generator"]], "draugr.torch_utilities.generators.batching": [[483, 2, 1, "", "LimitedBatchResampler"]], "draugr.torch_utilities.generators.batching.LimitedBatchResampler": [[483, 3, 1, "", "__init__"]], "draugr.torch_utilities.images": [[486, 0, 0, "-", "channel_transform"], [491, 0, 0, "-", "conversion"]], "draugr.torch_utilities.images.channel_transform": [[487, 1, 1, "", "float_chw_to_hwc_uint_tensor"], [488, 1, 1, "", "float_nchw_to_nhwc_uint_batch"], [489, 1, 1, "", "uint_hwc_to_chw_float_tensor"], [490, 1, 1, "", "uint_nhwc_to_nchw_float_batch"]], "draugr.torch_utilities.images.conversion": [[492, 1, 1, "", "quick_to_pil_image"]], "draugr.torch_utilities.opencv": [[494, 0, 0, "-", "torch_conversion"]], "draugr.torch_utilities.opencv.torch_conversion": [[495, 2, 1, "", "CV2ToImage"], [496, 2, 1, "", "CV2ToTensor"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToImage": [[495, 3, 1, "", "__init__"]], "draugr.torch_utilities.opencv.torch_conversion.CV2ToTensor": [[496, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations": [[498, 0, 0, "-", "boxes_2d"], [500, 0, 0, "-", "enums"], [502, 0, 0, "-", "sizes"], [513, 0, 0, "-", "torch_transforms"]], "draugr.torch_utilities.operations.boxes_2d": [[499, 1, 1, "", "minmax_to_xywh_torch"]], "draugr.torch_utilities.operations.enums": [[501, 2, 1, "", "ReductionMethodEnum"]], "draugr.torch_utilities.operations.enums.ReductionMethodEnum": [[501, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.sizes": [[503, 0, 0, "-", "conv2d"], [506, 0, 0, "-", "max_pool2d"], [508, 0, 0, "-", "pad2d"], [510, 0, 0, "-", "transp_conv2d"]], "draugr.torch_utilities.operations.sizes.conv2d": [[504, 1, 1, "", "conv2d_hw_shape"], [505, 1, 1, "", "conv2d_padding_size"]], "draugr.torch_utilities.operations.sizes.max_pool2d": [[507, 1, 1, "", "max_pool2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.pad2d": [[509, 1, 1, "", "pad2d_hw_shape"]], "draugr.torch_utilities.operations.sizes.transp_conv2d": [[511, 1, 1, "", "transp_conv2d_output_shape"], [512, 1, 1, "", "transp_conv2d_padding_sizes"]], "draugr.torch_utilities.operations.torch_transforms": [[514, 0, 0, "-", "batch_transforms"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms": [[515, 2, 1, "", "BatchNormalize"], [516, 2, 1, "", "BatchRandomCrop"], [517, 2, 1, "", "BatchRandomHorizontalFlip"], [518, 2, 1, "", "BatchToTensor"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchNormalize": [[515, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomCrop": [[516, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchRandomHorizontalFlip": [[517, 3, 1, "", "__init__"]], "draugr.torch_utilities.operations.torch_transforms.batch_transforms.BatchToTensor": [[518, 3, 1, "", "__init__"]], "draugr.torch_utilities.optimisation": [[520, 0, 0, "-", "debugging"], [537, 0, 0, "-", "parameters"], [540, 0, 0, "-", "scheduling"], [547, 0, 0, "-", "stopping"], [551, 0, 0, "-", "updates"]], "draugr.torch_utilities.optimisation.debugging": [[521, 0, 0, "-", "gradients"], [533, 0, 0, "-", "layer_fetching"]], "draugr.torch_utilities.optimisation.debugging.gradients": [[522, 0, 0, "-", "checking"], [525, 0, 0, "-", "flow"], [527, 0, 0, "-", "grad_trace"], [530, 0, 0, "-", "guided"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking": [[523, 0, 0, "-", "numerical_gradient"]], "draugr.torch_utilities.optimisation.debugging.gradients.checking.numerical_gradient": [[524, 1, 1, "", "loss_grad_check"]], "draugr.torch_utilities.optimisation.debugging.gradients.flow": [[526, 1, 1, "", "plot_grad_flow"]], "draugr.torch_utilities.optimisation.debugging.gradients.grad_trace": [[528, 1, 1, "", "print_grad_trace"], [529, 1, 1, "", "register_bad_grad_hooks"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided": [[531, 2, 1, "", "GuidedBackPropReLU"], [532, 2, 1, "", "GuidedBackPropReLUModel"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLU": [[531, 3, 1, "", "__init__"], [531, 3, 1, "", "backward"], [531, 3, 1, "", "forward"], [531, 3, 1, "", "jvp"], [531, 3, 1, "", "mark_dirty"], [531, 3, 1, "", "mark_non_differentiable"], [531, 3, 1, "", "save_for_backward"], [531, 3, 1, "", "save_for_forward"], [531, 3, 1, "", "set_materialize_grads"], [531, 3, 1, "", "vjp"]], "draugr.torch_utilities.optimisation.debugging.gradients.guided.GuidedBackPropReLUModel": [[532, 3, 1, "", "__init__"], [532, 3, 1, "", "forward"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching": [[534, 2, 1, "", "IntermediateLayerGetter"]], "draugr.torch_utilities.optimisation.debugging.layer_fetching.IntermediateLayerGetter": [[534, 3, 1, "", "__init__"], [534, 3, 1, "", "reduce_getattr"]], "draugr.torch_utilities.optimisation.debugging.opt_verification": [[536, 1, 1, "", "overfit_single_batch"]], "draugr.torch_utilities.optimisation.parameters": [[538, 1, 1, "", "freeze_parameters"], [539, 1, 1, "", "frozen_parameters"]], "draugr.torch_utilities.optimisation.scheduling": [[541, 0, 0, "-", "learning_rate_utilities"], [543, 0, 0, "-", "lr_scheduler"], [545, 0, 0, "-", "schedulers"]], "draugr.torch_utilities.optimisation.scheduling.learning_rate_utilities": [[542, 1, 1, "", "set_lr"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler": [[544, 2, 1, "", "WarmupMultiStepLR"]], "draugr.torch_utilities.optimisation.scheduling.lr_scheduler.WarmupMultiStepLR": [[544, 3, 1, "", "__init__"], [544, 3, 1, "", "get_last_lr"], [544, 3, 1, "", "get_lr"], [544, 3, 1, "", "load_state_dict"], [544, 3, 1, "", "print_lr"], [544, 3, 1, "", "state_dict"]], "draugr.torch_utilities.optimisation.scheduling.schedulers": [[546, 1, 1, "", "warmup_lr_scheduler"]], "draugr.torch_utilities.optimisation.stopping": [[548, 0, 0, "-", "overfitting"]], "draugr.torch_utilities.optimisation.stopping.overfitting": [[549, 2, 1, "", "ImprovementDetector"], [550, 2, 1, "", "OverfitDetector"]], "draugr.torch_utilities.optimisation.stopping.overfitting.ImprovementDetector": [[549, 3, 1, "", "__init__"]], "draugr.torch_utilities.optimisation.stopping.overfitting.OverfitDetector": [[550, 3, 1, "", "__init__"]], "draugr.torch_utilities.optimisation.updates": [[552, 0, 0, "-", "copying"], [555, 0, 0, "-", "soft_update"]], "draugr.torch_utilities.optimisation.updates.copying": [[553, 1, 1, "", "copy_parameters"], [554, 1, 1, "", "copy_state"]], "draugr.torch_utilities.persistence": [[557, 0, 0, "-", "checkpoint"], [560, 0, 0, "-", "config"], [563, 0, 0, "-", "model"], [569, 0, 0, "-", "naming"], [571, 0, 0, "-", "parameters"]], "draugr.torch_utilities.persistence.checkpoint": [[558, 1, 1, "", "load_checkpoint"], [559, 1, 1, "", "save_checkpoint"]], "draugr.torch_utilities.persistence.config": [[561, 1, 1, "", "ensure_directory_exist"], [562, 1, 1, "", "save_config"]], "draugr.torch_utilities.persistence.model": [[564, 1, 1, "", "convert_saved_model_to_cpu"], [565, 1, 1, "", "load_latest_model"], [566, 1, 1, "", "load_model"], [567, 1, 1, "", "save_model"], [568, 1, 1, "", "save_model_and_configuration"]], "draugr.torch_utilities.persistence.naming": [[570, 1, 1, "", "get_model_hash"]], "draugr.torch_utilities.persistence.parameters": [[572, 1, 1, "", "load_latest_model_parameters"], [573, 1, 1, "", "load_model_parameters"], [574, 1, 1, "", "save_model_parameters"], [575, 1, 1, "", "save_parameters_and_configuration"]], "draugr.torch_utilities.sessions": [[577, 0, 0, "-", "cache_sessions"], [579, 0, 0, "-", "determinism_sessions"], [581, 0, 0, "-", "device_sessions"], [585, 0, 0, "-", "jit_sessions"], [588, 0, 0, "-", "model_sessions"], [593, 0, 0, "-", "type_sessions"]], "draugr.torch_utilities.sessions.cache_sessions": [[578, 2, 1, "", "TorchCacheSession"]], "draugr.torch_utilities.sessions.cache_sessions.TorchCacheSession": [[578, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.determinism_sessions": [[580, 2, 1, "", "TorchDeterministicSession"]], "draugr.torch_utilities.sessions.determinism_sessions.TorchDeterministicSession": [[580, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions": [[582, 2, 1, "", "TorchCpuSession"], [583, 2, 1, "", "TorchCudaSession"], [584, 2, 1, "", "TorchDeviceSession"]], "draugr.torch_utilities.sessions.device_sessions.TorchCpuSession": [[582, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchCudaSession": [[583, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.device_sessions.TorchDeviceSession": [[584, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions": [[586, 2, 1, "", "TorchIgnoreJitSession"], [587, 2, 1, "", "TorchJitSession"]], "draugr.torch_utilities.sessions.jit_sessions.TorchIgnoreJitSession": [[586, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.jit_sessions.TorchJitSession": [[587, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions": [[589, 2, 1, "", "TorchEvalSession"], [590, 2, 1, "", "TorchFrozenModelSession"], [591, 2, 1, "", "TorchTrainSession"], [592, 4, 1, "", "TorchTrainingSession"]], "draugr.torch_utilities.sessions.model_sessions.TorchEvalSession": [[589, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchFrozenModelSession": [[590, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.model_sessions.TorchTrainSession": [[591, 3, 1, "", "__init__"]], "draugr.torch_utilities.sessions.type_sessions": [[594, 2, 1, "", "DefaultTypeSession"]], "draugr.torch_utilities.sessions.type_sessions.DefaultTypeSession": [[594, 3, 1, "", "__init__"]], "draugr.torch_utilities.system": [[596, 0, 0, "-", "constants"], [598, 0, 0, "-", "data_type"], [601, 0, 0, "-", "device"], [609, 0, 0, "-", "info"], [612, 0, 0, "-", "loading"], [615, 0, 0, "-", "seeding"]], "draugr.torch_utilities.system.constants": [[597, 1, 1, "", "torch_pi"]], "draugr.torch_utilities.system.data_type": [[599, 1, 1, "", "global_torch_dtype"], [600, 1, 1, "", "set_global_torch_dtype"]], "draugr.torch_utilities.system.device": [[602, 2, 1, "", "TorchDeviceEnum"], [603, 1, 1, "", "auto_select_available_cuda_device"], [604, 1, 1, "", "get_gpu_usage_mb"], [605, 1, 1, "", "global_torch_device"], [606, 1, 1, "", "select_cuda_device"], [607, 1, 1, "", "set_global_torch_device"], [608, 1, 1, "", "torch_clean_up"]], "draugr.torch_utilities.system.device.TorchDeviceEnum": [[602, 3, 1, "", "__init__"]], "draugr.torch_utilities.system.info": [[610, 1, 1, "", "cuda_info"], [611, 1, 1, "", "system_info"]], "draugr.torch_utilities.system.loading": [[613, 1, 1, "", "default_worker_init_fn"], [614, 1, 1, "", "global_pin_memory"]], "draugr.torch_utilities.system.seeding": [[616, 1, 1, "", "torch_seed"]], "draugr.torch_utilities.tensors": [[618, 0, 0, "-", "dimension_order"], [625, 0, 0, "-", "info"], [627, 0, 0, "-", "mixins"], [629, 0, 0, "-", "normalise"], [631, 0, 0, "-", "reshaping"], [635, 0, 0, "-", "tensor_container"], [637, 0, 0, "-", "to_scalar"], [638, 0, 0, "-", "to_tensor"], [639, 0, 0, "-", "types"]], "draugr.torch_utilities.tensors.dimension_order": [[619, 1, 1, "", "chw_to_hwc_tensor"], [620, 1, 1, "", "hwc_to_chw_tensor"], [621, 1, 1, "", "nchw_to_nhwc_tensor"], [622, 1, 1, "", "nhwc_to_nchw_tensor"], [623, 1, 1, "", "ntchw_to_nthwc_tensor"], [624, 1, 1, "", "nthwc_to_ntchw_tensor"]], "draugr.torch_utilities.tensors.info": [[626, 1, 1, "", "size_of_tensor"]], "draugr.torch_utilities.tensors.mixins": [[628, 2, 1, "", "TensoriseMixin"]], "draugr.torch_utilities.tensors.mixins.TensoriseMixin": [[628, 3, 1, "", "__init__"]], "draugr.torch_utilities.tensors.normalise": [[630, 1, 1, "", "standardise"]], "draugr.torch_utilities.tensors.reshaping": [[632, 1, 1, "", "flatten_keep_batch"], [633, 1, 1, "", "flatten_tn_dim"], [634, 1, 1, "", "safe_concat"]], "draugr.torch_utilities.tensors.tensor_container": [[636, 2, 1, "", "NamedTensorTuple"]], "draugr.torch_utilities.tensors.tensor_container.NamedTensorTuple": [[636, 3, 1, "", "__init__"], [636, 3, 1, "", "numpy"], [636, 3, 1, "", "to"]], "draugr.torch_utilities.tensors.types": [[640, 1, 1, "", "numpy_to_torch_dtype"], [641, 1, 1, "", "torch_to_numpy_dtype"]], "draugr.torch_utilities.writers": [[643, 0, 0, "-", "mixins"], [646, 0, 0, "-", "tensorboard"], [652, 0, 0, "-", "torch_module_writer"], [658, 0, 0, "-", "visdom"]], "draugr.torch_utilities.writers.mixins": [[644, 0, 0, "-", "graph_writer_mixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin": [[645, 2, 1, "", "GraphWriterMixin"]], "draugr.torch_utilities.writers.mixins.graph_writer_mixin.GraphWriterMixin": [[645, 3, 1, "", "__init__"], [645, 3, 1, "", "graph"]], "draugr.torch_utilities.writers.tensorboard": [[647, 0, 0, "-", "launcher"], [649, 0, 0, "-", "tensorboard_pytorch_writer"]], "draugr.torch_utilities.writers.tensorboard.launcher": [[648, 1, 1, "", "launch_tensorboard"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer": [[650, 4, 1, "", "PTW"], [651, 2, 1, "", "TensorBoardPytorchWriter"]], "draugr.torch_utilities.writers.tensorboard.tensorboard_pytorch_writer.TensorBoardPytorchWriter": [[651, 2, 1, "", "MultiChannelMethodEnum"], [651, 3, 1, "", "__init__"], [651, 3, 1, "", "bar"], [651, 3, 1, "", "blip"], [651, 3, 1, "", "embed"], [651, 3, 1, "", "figure"], [651, 3, 1, "", "filter"], [651, 3, 1, "", "graph"], [651, 3, 1, "", "histogram"], [651, 3, 1, "", "image"], [651, 3, 1, "", "instance"], [651, 3, 1, "", "line"], [651, 3, 1, "", "mesh"], [651, 3, 1, "", "parameters"], [651, 3, 1, "", "precision_recall_curve"], [651, 3, 1, "", "scalar"], [651, 3, 1, "", "spectrogram"], [651, 3, 1, "", "video"], [651, 5, 1, "", "writer"]], "draugr.torch_utilities.writers.torch_module_writer": [[653, 0, 0, "-", "module_parameter_writer_mixin"], [655, 0, 0, "-", "module_writer_hook"], [656, 0, 0, "-", "module_writer_parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin": [[654, 2, 1, "", "ModuleParameterWriterMixin"]], "draugr.torch_utilities.writers.torch_module_writer.module_parameter_writer_mixin.ModuleParameterWriterMixin": [[654, 3, 1, "", "__init__"], [654, 3, 1, "", "parameters"]], "draugr.torch_utilities.writers.torch_module_writer.module_writer_parameters": [[657, 1, 1, "", "weight_bias_histograms"]], "draugr.torch_utilities.writers.visdom": [[659, 0, 0, "-", "episode_visual"], [661, 0, 0, "-", "plotting"], [663, 0, 0, "-", "visdom_writer"]], "draugr.torch_utilities.writers.visdom.episode_visual": [[660, 1, 1, "", "update_visualiser"]], "draugr.torch_utilities.writers.visdom.plotting": [[662, 1, 1, "", "plot_episode_stats"]], "draugr.torch_utilities.writers.visdom.visdom_writer": [[664, 2, 1, "", "VisdomWriter"]], "draugr.torch_utilities.writers.visdom.visdom_writer.VisdomWriter": [[664, 3, 1, "", "__init__"], [664, 3, 1, "", "blip"], [664, 3, 1, "", "filter"], [664, 3, 1, "", "scalar"]], "draugr.tqdm_utilities": [[666, 0, 0, "-", "pooled_progress_bar"], [673, 0, 0, "-", "progress_bar"]], "draugr.tqdm_utilities.pooled_progress_bar": [[667, 1, 1, "", "parallel_imap"], [668, 1, 1, "", "parallel_map"], [669, 1, 1, "", "parallel_uimap"], [670, 1, 1, "", "parallel_umap"], [671, 1, 1, "", "sequential_imap"], [672, 1, 1, "", "sequential_map"]], "draugr.visualisation": [[675, 0, 0, "-", "ggplot_utilities"], [676, 0, 0, "-", "matplotlib_utilities"], [688, 0, 0, "-", "pillow_utilities"], [694, 0, 0, "-", "seaborn_utilities"]], "draugr.visualisation.matplotlib_utilities": [[677, 2, 1, "", "MatplotlibHorizontalAlignment"], [678, 2, 1, "", "MatplotlibVerticalAlignment"], [679, 1, 1, "", "annotate_point"], [680, 1, 1, "", "decolorise_plot"], [681, 1, 1, "", "denormalise_minusoneone"], [682, 1, 1, "", "latex_clean_label"], [683, 1, 1, "", "make_errorbar_legend"], [684, 1, 1, "", "matplotlib_bounding_box"], [685, 1, 1, "", "remove_decoration"], [686, 1, 1, "", "save_embed_fig"], [687, 1, 1, "", "use_monochrome_style"]], "draugr.visualisation.matplotlib_utilities.MatplotlibHorizontalAlignment": [[677, 3, 1, "", "__init__"]], "draugr.visualisation.matplotlib_utilities.MatplotlibVerticalAlignment": [[678, 3, 1, "", "__init__"]], "draugr.visualisation.pillow_utilities": [[689, 1, 1, "", "byte_array_to_pil_image"], [690, 1, 1, "", "np_array_to_pil_img"], [691, 1, 1, "", "pil_image_to_byte_array"], [692, 1, 1, "", "pil_img_to_np_array"], [693, 1, 1, "", "pil_merge_images"]], "draugr.visualisation.seaborn_utilities": [[695, 1, 1, "", "despine_all"], [696, 1, 1, "", "exponential_moving_average"], [697, 1, 1, "", "set_y_log_scale"]], "draugr.writers": [[699, 0, 0, "-", "csv_writer"], [701, 0, 0, "-", "databases"], [706, 0, 0, "-", "log_writer"], [736, 0, 0, "-", "mock_writer"], [738, 0, 0, "-", "standard_tags"], [747, 0, 0, "-", "terminal"], [763, 0, 0, "-", "writer"], [767, 0, 0, "-", "writer_utilities"]], "draugr.writers.csv_writer": [[700, 2, 1, "", "CSVWriter"]], "draugr.writers.csv_writer.CSVWriter": [[700, 3, 1, "", "__init__"], [700, 3, 1, "", "blip"], [700, 3, 1, "", "filter"], [700, 3, 1, "", "get_csv_writer"], [700, 3, 1, "", "scalar"]], "draugr.writers.databases": [[702, 0, 0, "-", "hdf_writer"], [704, 0, 0, "-", "sqlite_writer"]], "draugr.writers.databases.hdf_writer": [[703, 2, 1, "", "HdfWriter"]], "draugr.writers.databases.hdf_writer.HdfWriter": [[703, 3, 1, "", "__init__"], [703, 3, 1, "", "blip"], [703, 3, 1, "", "filter"], [703, 3, 1, "", "scalar"]], "draugr.writers.databases.sqlite_writer": [[705, 2, 1, "", "SqliteWriter"]], "draugr.writers.databases.sqlite_writer.SqliteWriter": [[705, 3, 1, "", "__init__"], [705, 3, 1, "", "blip"], [705, 3, 1, "", "filter"], [705, 3, 1, "", "scalar"]], "draugr.writers.log_writer": [[707, 2, 1, "", "LogWriter"]], "draugr.writers.log_writer.LogWriter": [[707, 3, 1, "", "__init__"], [707, 3, 1, "", "blip"], [707, 3, 1, "", "filter"], [707, 3, 1, "", "get_logger"], [707, 3, 1, "", "log"], [707, 3, 1, "", "scalar"], [707, 3, 1, "", "text"]], "draugr.writers.mixins": [[709, 0, 0, "-", "audio_writer_mixin"], [711, 0, 0, "-", "bar_writer_mixin"], [713, 0, 0, "-", "embed_writer_mixin"], [715, 0, 0, "-", "figure_writer_mixin"], [717, 0, 0, "-", "histogram_writer_mixin"], [719, 0, 0, "-", "image_writer_mixin"], [721, 0, 0, "-", "instantiation_writer_mixin"], [723, 0, 0, "-", "line_writer_mixin"], [725, 0, 0, "-", "mesh_writer_mixin"], [727, 0, 0, "-", "precision_recall_writer_mixin"], [729, 0, 0, "-", "scalar_writer_mixin"], [731, 0, 0, "-", "spectrogram_writer_mixin"], [733, 0, 0, "-", "video_writer_mixin"]], "draugr.writers.mixins.audio_writer_mixin": [[710, 2, 1, "", "AudioWriterMixin"]], "draugr.writers.mixins.audio_writer_mixin.AudioWriterMixin": [[710, 3, 1, "", "__init__"], [710, 3, 1, "", "audio"]], "draugr.writers.mixins.bar_writer_mixin": [[712, 2, 1, "", "BarWriterMixin"]], "draugr.writers.mixins.bar_writer_mixin.BarWriterMixin": [[712, 3, 1, "", "__init__"], [712, 3, 1, "", "bar"]], "draugr.writers.mixins.embed_writer_mixin": [[714, 2, 1, "", "EmbedWriterMixin"]], "draugr.writers.mixins.embed_writer_mixin.EmbedWriterMixin": [[714, 3, 1, "", "__init__"], [714, 3, 1, "", "embed"]], "draugr.writers.mixins.figure_writer_mixin": [[716, 2, 1, "", "FigureWriterMixin"]], "draugr.writers.mixins.figure_writer_mixin.FigureWriterMixin": [[716, 3, 1, "", "__init__"], [716, 3, 1, "", "figure"]], "draugr.writers.mixins.histogram_writer_mixin": [[718, 2, 1, "", "HistogramWriterMixin"]], "draugr.writers.mixins.histogram_writer_mixin.HistogramWriterMixin": [[718, 3, 1, "", "__init__"], [718, 3, 1, "", "histogram"]], "draugr.writers.mixins.image_writer_mixin": [[720, 2, 1, "", "ImageWriterMixin"]], "draugr.writers.mixins.image_writer_mixin.ImageWriterMixin": [[720, 2, 1, "", "MultiChannelMethodEnum"], [720, 3, 1, "", "__init__"], [720, 3, 1, "", "image"]], "draugr.writers.mixins.instantiation_writer_mixin": [[722, 2, 1, "", "InstantiationWriterMixin"]], "draugr.writers.mixins.instantiation_writer_mixin.InstantiationWriterMixin": [[722, 3, 1, "", "__init__"]], "draugr.writers.mixins.line_writer_mixin": [[724, 2, 1, "", "LineWriterMixin"]], "draugr.writers.mixins.line_writer_mixin.LineWriterMixin": [[724, 3, 1, "", "__init__"], [724, 3, 1, "", "line"]], "draugr.writers.mixins.mesh_writer_mixin": [[726, 2, 1, "", "MeshWriterMixin"]], "draugr.writers.mixins.mesh_writer_mixin.MeshWriterMixin": [[726, 3, 1, "", "__init__"], [726, 3, 1, "", "mesh"]], "draugr.writers.mixins.precision_recall_writer_mixin": [[728, 2, 1, "", "PrecisionRecallCurveWriterMixin"]], "draugr.writers.mixins.precision_recall_writer_mixin.PrecisionRecallCurveWriterMixin": [[728, 3, 1, "", "__init__"]], "draugr.writers.mixins.scalar_writer_mixin": [[730, 2, 1, "", "ScalarWriterMixin"]], "draugr.writers.mixins.scalar_writer_mixin.ScalarWriterMixin": [[730, 3, 1, "", "__init__"], [730, 3, 1, "", "blip"], [730, 3, 1, "", "scalar"]], "draugr.writers.mixins.spectrogram_writer_mixin": [[732, 2, 1, "", "SpectrogramWriterMixin"]], "draugr.writers.mixins.spectrogram_writer_mixin.SpectrogramWriterMixin": [[732, 3, 1, "", "__init__"], [732, 3, 1, "", "spectrogram"]], "draugr.writers.mixins.video_writer_mixin": [[734, 2, 1, "", "VideoInputDimsEnum"], [735, 2, 1, "", "VideoWriterMixin"]], "draugr.writers.mixins.video_writer_mixin.VideoInputDimsEnum": [[734, 3, 1, "", "__init__"]], "draugr.writers.mixins.video_writer_mixin.VideoWriterMixin": [[735, 3, 1, "", "__init__"], [735, 3, 1, "", "video"]], "draugr.writers.mock_writer": [[737, 2, 1, "", "MockWriter"]], "draugr.writers.mock_writer.MockWriter": [[737, 3, 1, "", "__init__"], [737, 3, 1, "", "blip"], [737, 3, 1, "", "filter"], [737, 3, 1, "", "scalar"]], "draugr.writers.standard_tags": [[739, 2, 1, "", "TestingCurves"], [740, 2, 1, "", "TestingScalars"], [741, 2, 1, "", "TestingTables"], [742, 2, 1, "", "TrainingCurves"], [743, 2, 1, "", "TrainingScalars"], [744, 2, 1, "", "TrainingTables"], [745, 1, 1, "", "should_plot_y_log_scale"], [746, 1, 1, "", "should_smooth_series"]], "draugr.writers.standard_tags.TestingCurves": [[739, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingScalars": [[740, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TestingTables": [[741, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingCurves": [[742, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingScalars": [[743, 3, 1, "", "__init__"]], "draugr.writers.standard_tags.TrainingTables": [[744, 3, 1, "", "__init__"]], "draugr.writers.terminal": [[748, 0, 0, "-", "console_writer"], [750, 0, 0, "-", "terminal_image_renderer"], [757, 0, 0, "-", "terminal_plot"], [758, 0, 0, "-", "terminal_plot_writer"], [760, 0, 0, "-", "terminal_plotter"], [761, 0, 0, "-", "terminal_utilities"]], "draugr.writers.terminal.console_writer": [[749, 2, 1, "", "ConsoleWriter"]], "draugr.writers.terminal.console_writer.ConsoleWriter": [[749, 3, 1, "", "__init__"], [749, 3, 1, "", "blip"], [749, 3, 1, "", "filter"], [749, 3, 1, "", "scalar"]], "draugr.writers.terminal.terminal_image_renderer": [[751, 1, 1, "", "entry_point"], [752, 1, 1, "", "get_image"], [753, 1, 1, "", "get_pixel"], [754, 1, 1, "", "render_file"], [755, 1, 1, "", "render_image"], [756, 1, 1, "", "terminalise_image"]], "draugr.writers.terminal.terminal_plot_writer": [[759, 2, 1, "", "TerminalPlotWriter"]], "draugr.writers.terminal.terminal_plot_writer.TerminalPlotWriter": [[759, 2, 1, "", "MultiChannelMethodEnum"], [759, 3, 1, "", "__init__"], [759, 3, 1, "", "blip"], [759, 3, 1, "", "filter"], [759, 3, 1, "", "scalar"], [759, 3, 1, "", "stats"]], "draugr.writers.terminal.terminal_utilities": [[762, 1, 1, "", "scale"]], "draugr.writers.writer": [[764, 2, 1, "", "Writer"], [765, 1, 1, "", "global_writer"], [766, 1, 1, "", "set_global_writer"]], "draugr.writers.writer.Writer": [[764, 3, 1, "", "__init__"], [764, 3, 1, "", "blip"], [764, 3, 1, "", "filter"], [764, 3, 1, "", "scalar"]], "draugr.writers.writer_utilities": [[768, 1, 1, "", "metrics"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"draugr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770], "dist_is_edit": 1, "dlib_util": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "dlib5faciallandmarksindic": 4, "dlib68faciallandmarksindic": 5, "eye_aspect_ratio": 6, "mouth_aspect_ratio": 7, "rect_to_bounding_box": 8, "shape_to_ndarrai": 9, "exclud": [10, 11, 12, 53, 289, 290, 291, 292, 293, 367, 368, 369, 370, 371, 372, 373, 374, 419], "flag": [11, 12, 221, 222, 223, 224, 225, 226], "tupleflag": 12, "facealign": [13, 14], "align_fac": 14, "drawer": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "mpl_drawer": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "discrete_scroll_plot": 19, "distribution_plot": [20, 21], "distributionplot": 21, "image_stream_plot": [22, 23], "imagestreamplot": 23, "mpldrawer": [24, 25, 26], "mockdraw": 25, "series_scroll_plot": [27, 28], "seriesscrollplot": 28, "spectral": [29, 30, 31, 32, 33], "fast_fourier_transform": [30, 31], "fastfouriertransformplot": 31, "fast_fourier_transform_spectrogram": [32, 33], "fastfouriertransformspectrogramplot": 33, "opencv_draw": [34, 35, 36, 190, 191, 192], "opencv_image_stream": [35, 36], "opencvimagestream": 36, "entry_point": [37, 38, 39, 40, 41, 42, 43, 44, 45, 751], "cpu_usage_entry_point": [38, 39], "main": [39, 41, 43, 45, 373], "tensorboard_entry_point": [40, 41], "toggle_darkmod": [42, 43], "visdom_entry_point": [44, 45], "extens": [46, 47, 48, 49, 50, 51], "skimage_util": [47, 48], "rgb_to_grayscal": 48, "sorcery_util": [49, 50, 51], "lower_case_assigned_nam": 50, "upper_case_assigned_nam": 51, "ffmpeg_util": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "extract": [54, 55], "extract_fram": 55, "merg": [56, 57], "merge_video": 57, "sequencifi": [58, 59], "sequencify_fil": 59, "split": [60, 61, 100, 101, 102, 103, 104], "spilt_video": 61, "get_vers": 62, "jax_util": 63, "metric": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 768], "accumul": [65, 66, 67, 68], "lambda_accumul": 66, "mean_accumul": 67, "total_accumul": 68, "meter": [69, 70, 71], "averagemet": 70, "metric_aggreg": [72, 73, 74], "metricaggreg": 73, "save_metr": 74, "metric_collect": [75, 76], "metriccollect": 76, "metric_summari": [77, 78], "metricsummari": 78, "plot": [79, 661, 662], "multiprocessing_util": [80, 81, 82, 83, 84], "pooled_queue_processor": [81, 82, 83, 84], "cloudpicklebas": 82, "pooledqueueprocessor": 83, "pooledqueuetask": 84, "numpy_util": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "channel_transform": [86, 87, 88, 89, 90, 486, 487, 488, 489, 490], "chw_to_hwc": 87, "float_chw_to_hwc_uint": 88, "hwc_to_chw": 89, "uint_hwc_to_chw_float": 90, "dataset": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "categor": [92, 93, 94, 95, 96, 97, 98, 427, 428, 429], "deep_categori": [93, 94], "build_deep_categorical_dataset": 94, "flat_categori": [95, 96], "build_flat_dataset": 96, "shallow_categori": [97, 98], "build_shallow_categorical_dataset": 98, "default": [99, 263, 264, 265], "splitenum": 101, "splitindex": 102, "select_split": 103, "train_valid_test_split": 104, "manipul": [105, 106, 107], "myndarrai": 106, "recursive_flatten_numpi": 107, "mix": [108, 109], "mix_channel": 109, "power": [110, 111, 112, 113, 114, 115], "next_pow_10_numpi": 111, "next_pow_2_numpi": 112, "next_pow_numpi": 113, "next_power_10_numpi": 114, "next_power_2_numpi": 115, "raster_grid_2d_mask": [116, 117], "circular_mask": 117, "raster_grid_3d_mask": [118, 119], "sphere_mask": 119, "resiz": [120, 121, 257, 258, 259], "resize_arrai": 121, "sampl": [122, 123], "get_sampl": 123, "signal_util": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "pad": [125, 126, 127], "zero_pad_to": 126, "zero_pad_to_power_2": 127, "signal_mix": [128, 129], "mix_ratio": 129, "signal_project": [130, 131, 132, 133, 134], "heavisid": 131, "normalise_sign": 132, "normalise_signal_max_ab": 133, "normalise_signal_minmax": 134, "signal_statist": [135, 136, 137], "mean_squar": 136, "root_mean_squar": 137, "truncat": [138, 139, 140, 141], "last_dim_trunc": 139, "min_length_truncate_batch": 140, "truncate_to_power_2": 141, "opencv_util": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "bounding_box": [143, 144, 145, 146, 147, 148, 149, 150], "boxes_2d": [144, 145, 146, 498, 499], "minmax_to_xywh": 145, "xywh_to_minmax": 146, "evalu": [147, 148, 149, 150, 473, 474, 475, 476, 477], "intersect_numpi": 148, "jaccard_overlap_numpi": 149, "remove_null_box": 150, "color_spac": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "clean": [152, 153, 154], "cleanupmethod": 153, "clean_up": 154, "color": [155, 156, 157, 158], "is_singular_channel": 156, "num_channel": 157, "to_color": 158, "edg": [159, 160, 161, 162], "cannyapertures": 160, "toedgemethodenum": 161, "to_edg": 162, "gamma": [163, 164, 165, 166, 167, 168], "gamma_correct_byt": 164, "gamma_correct_fast_to_byt": 165, "gamma_correct_float_to_byt": 166, "linear_correct_byt": 167, "linear_correct_float_to_byt": 168, "grai": [169, 170, 171], "tograymethodenum": 170, "to_grai": 171, "nois": [172, 173, 174], "noisefiltermethodenum": 173, "noise_filt": 174, "threshold": [175, 176, 177, 178], "thresholdmethodenum": 176, "hsv_min_max_clip_mask": 177, "threshold_channel": 178, "draw": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "draw_box": [180, 181, 182, 183], "draw_bounding_box": 181, "draw_single_box": 182, "draw_single_rect": 183, "mask": [184, 185, 186, 187, 188, 189], "gauss_circl": [185, 186, 187, 188], "ellipse_bbox": 186, "make_gradient_v1": 187, "make_gradient_v2": 188, "segment_ellips": 189, "draw_mask": 191, "find_contour": 192, "opencv_drawing_util": [193, 194, 195, 196], "cube_3d_matrix": 194, "draw_axi": 195, "draw_cub": 196, "namespac": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "color_conversion_enum": [198, 199], "colorconversionenum": 199, "enum": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 500, 501], "bordertypeenum": 201, "camerapropertyenum": 202, "comparisonenum": 203, "contourapproximationmodeenum": 204, "contourretrievalmodeenum": 205, "datatypeenum": 206, "distancetransformlabeltypeenum": 207, "distancetransformmaskenum": 208, "distancetypeenum": 209, "fontenum": 210, "houghmodeenum": 211, "kmeansenum": 212, "linetypeenum": 213, "markertypeenum": 214, "morphshapeenum": 215, "morphtypeenum": 216, "mouseeventenum": 217, "rectanglesintersecttyp": 218, "videocaptureapienum": 219, "windowflagenum": 220, "drawmatchesflagenum": 222, "mouseeventflag": 223, "termcriteriaflag": 224, "thresholdtypeflag": 225, "windowpropertyflag": 226, "raster_sequ": [227, 228, 229, 230, 231, 232, 233, 234], "async_video_stream": [228, 229], "asyncvideostream": 229, "frame_annot": [230, 231, 232], "blit_fp": 231, "blit_numbering_raster_sequ": 232, "frame": [233, 234], "frame_gener": 234, "transform": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "crop": [236, 237], "circle_crop": 237, "cv2_transform": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "cv2compos": 239, "cv2convertcolor": 240, "cv2expand": 241, "cv2photometricdistort": 242, "cv2randombright": 243, "cv2randomcontrast": 244, "cv2randomhu": 245, "cv2randomlightingnois": 246, "cv2randommirror": 247, "cv2randomsamplecrop": 248, "cv2randomsatur": 249, "cv2resiz": 250, "cv2swapchannel": 251, "cv2toabsolutecoord": 252, "cv2topercentcoord": 253, "convertfromint": 254, "lambda": 255, "subtractmean": 256, "interpolationenum": 258, "cv2_resiz": 259, "window": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "color_pick": [261, 262], "interactive_hsv_color_pick": 262, "extensionenum": 264, "match_return_cod": 265, "element": [266, 267, 268], "trackbar": [267, 268], "add_trackbar": 268, "hough_circl": [269, 270], "interactive_hough_circl": 270, "imag": [271, 272, 485, 486, 487, 488, 489, 490, 491, 492], "show_imag": 272, "os_util": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "cuda_devic": [274, 275, 276, 277], "deviceorderenum": 275, "set_cuda_device_ord": 276, "set_cuda_visible_devic": 277, "linux_util": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "gnome_util": [279, 280, 281], "dark_mod": [280, 281], "is_dark_mode_act": 281, "gtk_util": [282, 283, 284, 285, 286], "gtk_set": [283, 284], "gtkset": 284, "theme_prefer": [285, 286], "gtkthemeprefer": 286, "mac_util": [287, 310], "systemd_util": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "amdroc": 290, "deprec": 291, "docker_inspect": 292, "psystemd": 293, "service_manag": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "runasenum": 295, "disable_servic": 296, "enable_servic": 297, "install_servic": 298, "remove_servic": [299, 336], "restart_servic": 300, "start_servic": 301, "status_servic": 302, "stop_servic": 303, "service_templ": 304, "user_util": [305, 306, 307, 308, 309], "change_home_dir": 306, "change_passwd": 307, "make_us": 308, "remove_us": 309, "platform_select": [311, 312], "get_backend_modul": 312, "resource_util": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "all": [314, 315], "get_num_inst": 315, "cpu": [316, 317, 318, 319, 320, 321, 322], "workersess": 317, "release_worker_cor": 318, "request_worker_cor": 319, "reset_worker_track": 320, "worker_cores_avail": 321, "worker_cores_in_us": 322, "gpu": 323, "ram": [324, 325], "num_instance_no_pag": 325, "screen_resolut": [326, 327, 328, 329, 330, 331, 332, 333], "get_screen_resolut": [327, 363], "screen_res_gtk": 328, "screen_res_mac": 329, "screen_res_pygam": 330, "screen_res_tk": 331, "screen_res_win": 332, "screen_res_xlib": 333, "servic": [334, 335, 336], "add_servic": 335, "pandas_util": [337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "format": [338, 339], "pandas_mean_std_bold_formatt": 339, "from_dict": [340, 341, 342, 343], "nested_dict_to_four_level_column_df": 341, "nested_dict_to_three_level_column_df": 342, "nested_dict_to_two_level_column_df": 343, "latex_mean_std": [344, 345, 346, 347, 348], "pandas_format_bold_max_row_latex": 345, "pandas_mean_std": 346, "pandas_mean_std_to_str": 347, "pandas_to_latex_clean": 348, "misc_util": [349, 350, 351, 352], "chainedassignmentoptionenum": 350, "exportmethodenum": 351, "duplicate_column": 352, "multi_index_util": [353, 354], "add_index_level": 354, "style": [355, 356, 357, 358, 359, 360], "attrenum": 356, "colorenum": 357, "ndframeextremeenum": 358, "color_highlight_extrem": 359, "color_negative_r": 360, "pygame_util": [361, 362, 363], "screen": [362, 363], "python_util": [364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "broadcast": [365, 366], "broadcastnon": 366, "packag": [368, 369, 370, 371], "b": 370, "c": 371, "worker": [372, 373, 374], "spawn": 374, "function_wrapp": [375, 376, 377, 378, 379], "max_frequ": 376, "min_interval_wrapp": 377, "min_interval_wrapper_glob": 378, "wrap_arg": 379, "gener": [380, 381, 382, 383, 384, 385, 386, 387, 388, 481, 482, 483, 484], "batching_gener": [381, 382, 383, 384, 385], "batch_gener": 382, "random_batch": 383, "shuffled_batch": 384, "sized_batch": 385, "recycling_gener": [386, 387, 388], "batched_recycl": 387, "recycl": 388, "http": [389, 390], "httpmethodenum": 390, "socket": [391, 392, 393, 394], "find_unclaimed_port": 392, "get_host_ip": 393, "is_port_in_us": 394, "torch_like_channel_transform": [395, 396, 397, 398, 399], "reverse_torch_vision_normalize_batch_nchw": 396, "rgb_drop_alpha_batch_nhwc": 397, "rgb_drop_alpha_hwc": 398, "torch_vision_normalize_batch_nchw": 399, "random_util": [400, 401, 402], "seed": [401, 402, 615, 616], "seed_stack": 402, "scipy_util": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413], "read_normalised_wav": 405, "write_normalised_wav": 406, "signal_process": 407, "subsampl": [408, 409, 410, 411, 412, 413], "fft_subsampl": 409, "fir_subsampl": 410, "mag_decimation_subsampl": 411, "max_decimation_subsampl": 412, "min_decimation_subsampl": 413, "stop": [414, 415, 416, 417, 547, 548, 549, 550], "stopping_kei": [415, 416, 417], "captureearlystop": 416, "add_early_stopping_key_combin": 417, "threading_util": [418, 419, 420, 421], "skipper": [420, 421], "torch_util": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664], "architectur": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "distribut": [426, 427, 428, 429, 430, 431, 432, 433, 434, 466, 467, 468, 469, 470, 471, 472], "categoricalmlp": 428, "multiplecategoricalmlp": 429, "normal": [430, 431, 432, 433, 434], "multidimensionalnormalmlp": 431, "multivariatenormalmlp": 432, "multiplenormalmlp": 433, "shallowstdnormalmlp": 434, "experiment": [435, 436, 437, 438, 439, 440, 441], "head": [436, 437], "multiheadedmlp": 437, "recurr": [438, 439, 440, 441], "exposedrecurrentcategoricalmlp": 439, "recurrentbas": 440, "recurrentcategoricalmlp": 441, "mlp": [442, 443], "mlp_variant": [444, 445, 446, 447, 448, 449, 450, 451], "concatin": [445, 446, 447], "lateconcatinputmlp": 446, "preconcatinputmlp": 447, "disjunct": [448, 449], "disjunctmlp": 449, "fourier": [450, 451], "basefourierfeaturemlp": 451, "non_sequential_dataset": [453, 454], "nonsequentialdataset": 454, "random_dataset": [455, 456], "randomdataset": 456, "supervis": [457, 458, 459, 460, 461, 462, 463, 464, 465], "categorical_dataset": [458, 459], "categoricaldataset": 459, "supervised_dataset": [460, 461], "superviseddataset": 461, "vision_dataset": [462, 463, 464, 465], "dict_dataset": [463, 464, 465], "dictdatasetfold": 464, "splitdictdatasetfold": 465, "entropi": [467, 468, 469, 470, 471, 472], "differential_entropy_gaussian": 468, "log_shannon_entropi": 469, "normal_entropi": 470, "normal_log_dens": 471, "shannon_entropi": 472, "classif": [474, 475], "find_n_misclassifi": 475, "cross_valid": [476, 477], "cross_validation_gener": 477, "export": [478, 479, 480], "summari": [479, 480], "to_latex_t": 480, "batch": [482, 483], "limitedbatchresampl": 483, "to_tensor_gener": 484, "float_chw_to_hwc_uint_tensor": 487, "float_nchw_to_nhwc_uint_batch": 488, "uint_hwc_to_chw_float_tensor": 489, "uint_nhwc_to_nchw_float_batch": 490, "convers": [491, 492], "quick_to_pil_imag": 492, "opencv": [493, 494, 495, 496], "torch_convers": [494, 495, 496], "cv2toimag": 495, "cv2totensor": 496, "oper": [497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518], "minmax_to_xywh_torch": 499, "reductionmethodenum": 501, "size": [502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "conv2d": [503, 504, 505], "conv2d_hw_shap": 504, "conv2d_padding_s": 505, "max_pool2d": [506, 507], "max_pool2d_hw_shap": 507, "pad2d": [508, 509], "pad2d_hw_shap": 509, "transp_conv2d": [510, 511, 512], "transp_conv2d_output_shap": 511, "transp_conv2d_padding_s": 512, "torch_transform": [513, 514, 515, 516, 517, 518], "batch_transform": [514, 515, 516, 517, 518], "batchnorm": 515, "batchrandomcrop": 516, "batchrandomhorizontalflip": 517, "batchtotensor": 518, "optimis": [519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "debug": [520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "gradient": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "check": [522, 523, 524], "numerical_gradi": [523, 524], "loss_grad_check": 524, "flow": [525, 526], "plot_grad_flow": 526, "grad_trac": [527, 528, 529], "print_grad_trac": 528, "register_bad_grad_hook": 529, "guid": [530, 531, 532], "guidedbackproprelu": 531, "guidedbackproprelumodel": 532, "layer_fetch": [533, 534], "intermediatelayergett": 534, "opt_verif": [535, 536], "overfit_single_batch": 536, "paramet": [537, 538, 539, 571, 572, 573, 574, 575], "freeze_paramet": 538, "frozen_paramet": 539, "schedul": [540, 541, 542, 543, 544, 545, 546], "learning_rate_util": [541, 542], "set_lr": 542, "lr_schedul": [543, 544], "warmupmultisteplr": 544, "warmup_lr_schedul": 546, "overfit": [548, 549, 550], "improvementdetector": 549, "overfitdetector": 550, "updat": [551, 552, 553, 554, 555], "copi": [552, 553, 554], "copy_paramet": 553, "copy_st": 554, "soft_upd": 555, "persist": [556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575], "checkpoint": [557, 558, 559], "load_checkpoint": 558, "save_checkpoint": 559, "config": [560, 561, 562], "ensure_directory_exist": 561, "save_config": 562, "model": [563, 564, 565, 566, 567, 568], "convert_saved_model_to_cpu": 564, "load_latest_model": 565, "load_model": 566, "save_model": 567, "save_model_and_configur": 568, "name": [569, 570], "get_model_hash": 570, "load_latest_model_paramet": 572, "load_model_paramet": 573, "save_model_paramet": 574, "save_parameters_and_configur": 575, "session": [576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "cache_sess": [577, 578], "torchcachesess": 578, "determinism_sess": [579, 580], "torchdeterministicsess": 580, "device_sess": [581, 582, 583, 584], "torchcpusess": 582, "torchcudasess": 583, "torchdevicesess": 584, "jit_sess": [585, 586, 587], "torchignorejitsess": 586, "torchjitsess": 587, "model_sess": [588, 589, 590, 591, 592], "torchevalsess": 589, "torchfrozenmodelsess": 590, "torchtrainsess": 591, "torchtrainingsess": 592, "type_sess": [593, 594], "defaulttypesess": 594, "system": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616], "constant": [596, 597], "torch_pi": 597, "data_typ": [598, 599, 600], "global_torch_dtyp": 599, "set_global_torch_dtyp": 600, "devic": [601, 602, 603, 604, 605, 606, 607, 608], "torchdeviceenum": 602, "auto_select_available_cuda_devic": 603, "get_gpu_usage_mb": 604, "global_torch_devic": 605, "select_cuda_devic": 606, "set_global_torch_devic": 607, "torch_clean_up": 608, "info": [609, 610, 611, 625, 626], "cuda_info": 610, "system_info": 611, "load": [612, 613, 614], "default_worker_init_fn": 613, "global_pin_memori": 614, "torch_se": 616, "tensor": [617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641], "dimension_ord": [618, 619, 620, 621, 622, 623, 624], "chw_to_hwc_tensor": 619, "hwc_to_chw_tensor": 620, "nchw_to_nhwc_tensor": 621, "nhwc_to_nchw_tensor": 622, "ntchw_to_nthwc_tensor": 623, "nthwc_to_ntchw_tensor": 624, "size_of_tensor": 626, "mixin": [627, 628, 643, 644, 645, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735], "tensorisemixin": 628, "normalis": [629, 630], "standardis": 630, "reshap": [631, 632, 633, 634], "flatten_keep_batch": 632, "flatten_tn_dim": 633, "safe_concat": 634, "tensor_contain": [635, 636], "namedtensortupl": 636, "to_scalar": 637, "to_tensor": 638, "type": [639, 640, 641], "numpy_to_torch_dtyp": 640, "torch_to_numpy_dtyp": 641, "writer": [642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768], "graph_writer_mixin": [644, 645], "graphwritermixin": 645, "tensorboard": [646, 647, 648, 649, 650, 651], "launcher": [647, 648], "launch_tensorboard": 648, "tensorboard_pytorch_writ": [649, 650, 651], "ptw": 650, "tensorboardpytorchwrit": 651, "torch_module_writ": [652, 653, 654, 655, 656, 657], "module_parameter_writer_mixin": [653, 654], "moduleparameterwritermixin": 654, "module_writer_hook": 655, "module_writer_paramet": [656, 657], "weight_bias_histogram": 657, "visdom": [658, 659, 660, 661, 662, 663, 664], "episode_visu": [659, 660], "update_visualis": 660, "plot_episode_stat": 662, "visdom_writ": [663, 664], "visdomwrit": 664, "tqdm_util": [665, 666, 667, 668, 669, 670, 671, 672, 673], "pooled_progress_bar": [666, 667, 668, 669, 670, 671, 672], "parallel_imap": 667, "parallel_map": 668, "parallel_uimap": 669, "parallel_umap": 670, "sequential_imap": 671, "sequential_map": 672, "progress_bar": 673, "visualis": [674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697], "ggplot_util": 675, "matplotlib_util": [676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "matplotlibhorizontalalign": 677, "matplotlibverticalalign": 678, "annotate_point": 679, "decolorise_plot": 680, "denormalise_minusoneon": 681, "latex_clean_label": 682, "make_errorbar_legend": 683, "matplotlib_bounding_box": 684, "remove_decor": 685, "save_embed_fig": 686, "use_monochrome_styl": 687, "pillow_util": [688, 689, 690, 691, 692, 693], "byte_array_to_pil_imag": 689, "np_array_to_pil_img": 690, "pil_image_to_byte_arrai": 691, "pil_img_to_np_arrai": 692, "pil_merge_imag": 693, "seaborn_util": [694, 695, 696, 697], "despine_al": 695, "exponential_moving_averag": 696, "set_y_log_scal": 697, "csv_writer": [699, 700], "csvwriter": 700, "databas": [701, 702, 703, 704, 705], "hdf_writer": [702, 703], "hdfwriter": 703, "sqlite_writ": [704, 705], "sqlitewrit": 705, "log_writ": [706, 707], "logwrit": 707, "audio_writer_mixin": [709, 710], "audiowritermixin": 710, "bar_writer_mixin": [711, 712], "barwritermixin": 712, "embed_writer_mixin": [713, 714], "embedwritermixin": 714, "figure_writer_mixin": [715, 716], "figurewritermixin": 716, "histogram_writer_mixin": [717, 718], "histogramwritermixin": 718, "image_writer_mixin": [719, 720], "imagewritermixin": 720, "instantiation_writer_mixin": [721, 722], "instantiationwritermixin": 722, "line_writer_mixin": [723, 724], "linewritermixin": 724, "mesh_writer_mixin": [725, 726], "meshwritermixin": 726, "precision_recall_writer_mixin": [727, 728], "precisionrecallcurvewritermixin": 728, "scalar_writer_mixin": [729, 730], "scalarwritermixin": 730, "spectrogram_writer_mixin": [731, 732], "spectrogramwritermixin": 732, "video_writer_mixin": [733, 734, 735], "videoinputdimsenum": 734, "videowritermixin": 735, "mock_writ": [736, 737], "mockwrit": 737, "standard_tag": [738, 739, 740, 741, 742, 743, 744, 745, 746], "testingcurv": 739, "testingscalar": 740, "testingt": 741, "trainingcurv": 742, "trainingscalar": 743, "trainingt": 744, "should_plot_y_log_scal": 745, "should_smooth_seri": 746, "termin": [747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "console_writ": [748, 749], "consolewrit": 749, "terminal_image_render": [750, 751, 752, 753, 754, 755, 756], "get_imag": 752, "get_pixel": 753, "render_fil": 754, "render_imag": 755, "terminalise_imag": 756, "terminal_plot": 757, "terminal_plot_writ": [758, 759], "terminalplotwrit": 759, "terminal_plott": 760, "terminal_util": [761, 762], "scale": 762, "global_writ": 765, "set_global_writ": 766, "writer_util": [767, 768], "get": 769, "start": 769, "document": 770, "what": 770, "s": 770, "next": 770, "indic": 770, "tabl": 770}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})